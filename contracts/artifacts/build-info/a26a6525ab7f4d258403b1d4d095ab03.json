{
	"id": "a26a6525ab7f4d258403b1d4d095ab03",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sOHM.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2021-06-12\n*/\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./libraries/SafeMath.sol\";\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\n\n\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n  /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    function addressToString(address _address) internal pure returns(string memory) {\n        bytes32 _bytes = bytes32(uint256(_address));\n        bytes memory HEX = \"0123456789abcdef\";\n        bytes memory _addr = new bytes(42);\n\n        _addr[0] = '0';\n        _addr[1] = 'x';\n\n        for(uint256 i = 0; i < 20; i++) {\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\n        }\n\n        return string(_addr);\n\n    }\n}\n\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nabstract contract ERC20\n  is \n    IERC20\n  {\n\n  using SafeMath for uint256;\n\n  // TODO comment actual hash value.\n  bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\n    \n  // Present in ERC777\n  mapping (address => uint256) internal _balances;\n\n  // Present in ERC777\n  mapping (address => mapping (address => uint256)) internal _allowances;\n\n  // Present in ERC777\n  uint256 internal _totalSupply;\n\n  // Present in ERC777\n  string internal _name;\n    \n  // Present in ERC777\n  string internal _symbol;\n    \n  // Present in ERC777\n  uint8 internal _decimals;\n\n  /**\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n   * a default value of 18.\n   *\n   * To select a different value for {decimals}, use {_setupDecimals}.\n   *\n   * All three of these values are immutable: they can only be set once during\n   * construction.\n   */\n  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n  }\n\n  /**\n   * @dev Returns the name of the token.\n   */\n  // Present in ERC777\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Returns the symbol of the token, usually a shorter version of the\n   * name.\n   */\n  // Present in ERC777\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns the number of decimals used to get its user representation.\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n   *\n   * Tokens usually opt for a value of 18, imitating the relationship between\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n   * called.\n   *\n   * NOTE: This information is only used for _display_ purposes: it in\n   * no way affects any of the arithmetic of the contract, including\n   * {IERC20-balanceOf} and {IERC20-transfer}.\n   */\n  // Present in ERC777\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev See {IERC20-totalSupply}.\n   */\n  // Present in ERC777\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IERC20-balanceOf}.\n   */\n  // Present in ERC777\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  // Overrideen in ERC777\n  // Confirm that this behavior changes \n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(msg.sender, recipient, amount);\n    return true;\n  }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    // Present in ERC777\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    // Present in ERC777\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _mint(address account_, uint256 ammount_) internal virtual {\n        require(account_ != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address( this ), account_, ammount_);\n        _totalSupply = _totalSupply.add(ammount_);\n        _balances[account_] = _balances[account_].add(ammount_);\n        emit Transfer(address( this ), account_, ammount_);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    // Present in ERC777\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    // Considering deprication to reduce size of bytecode as changing _decimals to internal acheived the same functionality.\n    // function _setupDecimals(uint8 decimals_) internal {\n    //     _decimals = decimals_;\n    // }\n\n  /**\n   * @dev Hook that is called before any transfer of tokens. This includes\n   * minting and burning.\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n   * will be to transferred to `to`.\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n   * - `from` and `to` are never both zero.\n   *\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n   */\n  // Present in ERC777\n  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { }\n}\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n\ninterface IERC2612Permit {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n}\n\nabstract contract ERC20Permit is ERC20, IERC2612Permit {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    bytes32 public DOMAIN_SEPARATOR;\n\n    constructor() {\n\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\n            keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n            keccak256(bytes(name())),\n            keccak256(bytes(\"1\")), // Version\n            chainID,\n            address(this)\n        ));\n    }\n\n    /**\n     * @dev See {IERC2612Permit-permit}.\n     *\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"Permit: expired deadline\");\n\n        bytes32 hashStruct =\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline));\n\n        bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct));\n\n        address signer = ecrecover(_hash, v, r, s);\n        require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\");\n\n        _nonces[owner].increment();\n        _approve(owner, spender, amount);\n    }\n\n    /**\n     * @dev See {IERC2612Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n}\n\ninterface IOwnable {\n  function manager() external view returns (address);\n\n  function renounceManagement() external;\n  \n  function pushManagement( address newOwner_ ) external;\n  \n  function pullManagement() external;\n}\n\ncontract Ownable is IOwnable {\n\n    address internal _owner;\n    address internal _newOwner;\n\n    event OwnershipPushed(address indexed previousOwner, address indexed newOwner);\n    event OwnershipPulled(address indexed previousOwner, address indexed newOwner);\n\n    constructor () {\n        _owner = msg.sender;\n        emit OwnershipPushed( address(0), _owner );\n    }\n\n    function manager() public view override returns (address) {\n        return _owner;\n    }\n\n    modifier onlyManager() {\n        require( _owner == msg.sender, \"Ownable: caller is not the owner\" );\n        _;\n    }\n\n    function renounceManagement() public virtual override onlyManager() {\n        emit OwnershipPushed( _owner, address(0) );\n        _owner = address(0);\n    }\n\n    function pushManagement( address newOwner_ ) public virtual override onlyManager() {\n        require( newOwner_ != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipPushed( _owner, newOwner_ );\n        _newOwner = newOwner_;\n    }\n    \n    function pullManagement() public virtual override {\n        require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n        emit OwnershipPulled( _owner, _newOwner );\n        _owner = _newOwner;\n    }\n}\n\ncontract sOlympus is ERC20Permit, Ownable {\n\n    using SafeMath for uint256;\n\n    modifier onlyStakingContract() {\n        require( msg.sender == stakingContract );\n        _;\n    }\n\n    address public stakingContract;\n    address public initializer;\n\n    event LogSupply(uint256 indexed epoch, uint256 timestamp, uint256 totalSupply );\n    event LogRebase( uint256 indexed epoch, uint256 rebase, uint256 index );\n    event LogStakingContractUpdated( address stakingContract );\n\n    struct Rebase {\n        uint epoch;\n        uint rebase; // 18 decimals\n        uint totalStakedBefore;\n        uint totalStakedAfter;\n        uint amountRebased;\n        uint index;\n        uint blockNumberOccured;\n    }\n    Rebase[] public rebases;\n\n    uint public INDEX;\n\n    uint256 private constant MAX_UINT256 = ~uint256(0);\n    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 5000000 * 10**9;\n\n    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.\n    // Use the highest value that fits in a uint256 for max granularity.\n    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\n\n    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2\n    uint256 private constant MAX_SUPPLY = ~uint128(0);  // (2^128) - 1\n\n    uint256 private _gonsPerFragment;\n    mapping(address => uint256) private _gonBalances;\n\n    mapping ( address => mapping ( address => uint256 ) ) private _allowedValue;\n\n    constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {\n        initializer = msg.sender;\n        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\n    }\n\n    function initialize( address stakingContract_ ) external returns ( bool ) {\n        require( msg.sender == initializer );\n        require( stakingContract_ != address(0) );\n        stakingContract = stakingContract_;\n        _gonBalances[ stakingContract ] = TOTAL_GONS;\n\n        emit Transfer( address(0x0), stakingContract, _totalSupply );\n        emit LogStakingContractUpdated( stakingContract_ );\n        \n        initializer = address(0);\n        return true;\n    }\n\n    function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {\n        require( INDEX == 0 );\n        INDEX = gonsForBalance( _INDEX );\n        return true;\n    }\n\n    /**\n        @notice increases sOHM supply to increase staking balances relative to profit_\n        @param profit_ uint256\n        @return uint256\n     */\n    function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {\n        uint256 rebaseAmount;\n        uint256 circulatingSupply_ = circulatingSupply();\n\n        if ( profit_ == 0 ) {\n            emit LogSupply( epoch_, block.timestamp, _totalSupply );\n            emit LogRebase( epoch_, 0, index() );\n            return _totalSupply;\n        } else if ( circulatingSupply_ > 0 ){\n            rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ );\n        } else {\n            rebaseAmount = profit_;\n        }\n\n        _totalSupply = _totalSupply.add( rebaseAmount );\n\n        if ( _totalSupply > MAX_SUPPLY ) {\n            _totalSupply = MAX_SUPPLY;\n        }\n\n        _gonsPerFragment = TOTAL_GONS.div( _totalSupply );\n\n        _storeRebase( circulatingSupply_, profit_, epoch_ );\n\n        return _totalSupply;\n    }\n\n    /**\n        @notice emits event with data about rebase\n        @param previousCirculating_ uint\n        @param profit_ uint\n        @param epoch_ uint\n        @return bool\n     */\n    function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {\n        uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ );\n\n        rebases.push( Rebase ( {\n            epoch: epoch_,\n            rebase: rebasePercent, // 18 decimals\n            totalStakedBefore: previousCirculating_,\n            totalStakedAfter: circulatingSupply(),\n            amountRebased: profit_,\n            index: index(),\n            blockNumberOccured: block.number\n        }));\n        \n        emit LogSupply( epoch_, block.timestamp, _totalSupply );\n        emit LogRebase( epoch_, rebasePercent, index() );\n\n        return true;\n    }\n\n    function balanceOf( address who ) public view override returns ( uint256 ) {\n        return _gonBalances[ who ].div( _gonsPerFragment );\n    }\n\n    function gonsForBalance( uint amount ) public view returns ( uint ) {\n        return amount.mul( _gonsPerFragment );\n    }\n\n    function balanceForGons( uint gons ) public view returns ( uint ) {\n        return gons.div( _gonsPerFragment );\n    }\n\n    // Staking contract holds excess sOHM\n    function circulatingSupply() public view returns ( uint ) {\n        return _totalSupply.sub( balanceOf( stakingContract ) );\n    }\n\n    function index() public view returns ( uint ) {\n        return balanceForGons( INDEX );\n    }\n\n    function transfer( address to, uint256 value ) public override returns (bool) {\n        uint256 gonValue = value.mul( _gonsPerFragment );\n        _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[ to ].add( gonValue );\n        emit Transfer( msg.sender, to, value );\n        return true;\n    }\n\n    function allowance( address owner_, address spender ) public view override returns ( uint256 ) {\n        return _allowedValue[ owner_ ][ spender ];\n    }\n\n    function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {\n       _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value );\n       emit Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] );\n\n        uint256 gonValue = gonsForBalance( value );\n        _gonBalances[ from ] = _gonBalances[from].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[to].add( gonValue );\n        emit Transfer( from, to, value );\n\n        return true;\n    }\n\n    function approve( address spender, uint256 value ) public override returns (bool) {\n         _allowedValue[ msg.sender ][ spender ] = value;\n         emit Approval( msg.sender, spender, value );\n         return true;\n    }\n\n    // What gets called in a permit\n    function _approve( address owner, address spender, uint256 value ) internal override virtual {\n        _allowedValue[owner][spender] = value;\n        emit Approval( owner, spender, value );\n    }\n\n    function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {\n        _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue );\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n\n    function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {\n        uint256 oldValue = _allowedValue[ msg.sender ][ spender ];\n        if (subtractedValue >= oldValue) {\n            _allowedValue[ msg.sender ][ spender ] = 0;\n        } else {\n            _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue );\n        }\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// File: libraries/SafeMath.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint c) {\n        if (a > 3) {\n            c = a;\n            uint b = add( div( a, 2), 1 );\n            while (b < c) {\n                c = b;\n                b = div( add( div( a, b ), b), 2 );\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }   \n\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\n        return div( mul( total_, percentage_ ), 1000 );\n    }\n\n    /*\n     * Expects percentage to be trailed by 00,\n    */\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\n    }\n\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\n        return div( mul(part_, 100) , total_ );\n    }\n\n    /**\n     * Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\n        return sqrrt( mul( multiplier_, payment_ ) );\n    }\n\n  function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\n      return mul( multiplier_, supply_ );\n  }\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"bondingCurve(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"percentageAmount(uint256,uint8)": "infinite",
								"percentageOfTotal(uint256,uint256)": "infinite",
								"quadraticPricing(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"substractPercentage(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
									".code": [
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/sOHM.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":739:10209  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":739:10209  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f7bfdd8789c458346866d6810622852a5261c8359b8ca4169f988207d641fc6464736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7bfdd8789c458346866d6810622852a5261c8359b8ca4169f988207d641fc6464736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xBF 0xDD DUP8 DUP10 0xC4 PC CALLVALUE PUSH9 0x66D6810622852A5261 0xC8 CALLDATALOAD SWAP12 DUP13 LOG4 AND SWAP16 SWAP9 DUP3 SMOD 0xD6 COINBASE 0xFC PUSH5 0x64736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "739:9470:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7bfdd8789c458346866d6810622852a5261c8359b8ca4169f988207d641fc6464736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xBF 0xDD DUP8 DUP10 0xC4 PC CALLVALUE PUSH9 0x66D6810622852A5261 0xC8 CALLDATALOAD SWAP12 DUP13 LOG4 AND SWAP16 SWAP9 DUP3 SMOD 0xD6 COINBASE 0xFC PUSH5 0x64736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "739:9470:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"addressToString(address)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 739,
									"end": 10209,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7bfdd8789c458346866d6810622852a5261c8359b8ca4169f988207d641fc6464736f6c63430007050033",
									".code": [
										{
											"begin": 739,
											"end": 10209,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 739,
											"end": 10209,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":22652:23500  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":22652:23500  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122004f3fb48d6cbae88ee72f1dd43e600fd774fcf75f6833014eca7a060c24579fc64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004f3fb48d6cbae88ee72f1dd43e600fd774fcf75f6833014eca7a060c24579fc64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV RETURN 0xFB 0x48 0xD6 0xCB 0xAE DUP9 0xEE PUSH19 0xF1DD43E600FD774FCF75F6833014ECA7A060C2 GASLIMIT PUSH26 0xFC64736F6C634300070500330000000000000000000000000000 ",
							"sourceMap": "22652:848:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004f3fb48d6cbae88ee72f1dd43e600fd774fcf75f6833014eca7a060c24579fc64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV RETURN 0xFB 0x48 0xD6 0xCB 0xAE DUP9 0xEE PUSH19 0xF1DD43E600FD774FCF75F6833014ECA7A060C2 GASLIMIT PUSH26 0xFC64736F6C634300070500330000000000000000000000000000 ",
							"sourceMap": "22652:848:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 22652,
									"end": 23500,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004f3fb48d6cbae88ee72f1dd43e600fd774fcf75f6833014eca7a060c24579fc64736f6c63430007050033",
									".code": [
										{
											"begin": 22652,
											"end": 23500,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22652,
											"end": 23500,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 875,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 881,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 883,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 885,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 887,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 889,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 875,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 881,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 883,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 885,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 887,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 889,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1436,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)1358_storage)"
							},
							{
								"astId": 1441,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1358_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1358_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1358_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1357,
										"contract": "contracts/sOHM.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC2612Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IERC2612Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":26992:28234  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":27259:27362  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sOHM.sol\":27293:27303  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":27284:27290  _owner */\n  0x00\n  dup1\n    /* \"contracts/sOHM.sol\":27284:27303  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":27347:27353  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":27318:27355  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":27343:27344  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":27318:27355  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":26992:28234  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":26992:28234  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x089208d8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x481c6a75\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":27586:27742  function renounceManagement() public virtual override onlyManager() {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/sOHM.sol\":27748:28005  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/sOHM.sol\":27368:27456  function manager() public view override returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":28015:28232  function pullManagement() public virtual override {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/sOHM.sol\":27586:27742  function renounceManagement() public virtual override onlyManager() {... */\n    tag_8:\n        /* \"contracts/sOHM.sol\":27514:27524  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27510  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":27495:27562  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/sOHM.sol\":27702:27703  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":27669:27706  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27686:27692  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27669:27706  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":27733:27734  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":27716:27722  _owner */\n      dup1\n      0x00\n        /* \"contracts/sOHM.sol\":27716:27735  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":27586:27742  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":27748:28005  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_11:\n        /* \"contracts/sOHM.sol\":27514:27524  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27510  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":27495:27562  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/sOHM.sol\":27871:27872  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":27850:27873  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27850:27859  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":27850:27873  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":27841:27916  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/sOHM.sol\":27956:27965  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":27931:27967  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27948:27954  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27931:27967  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":27989:27998  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":27977:27986  _newOwner */\n      0x01\n      0x00\n        /* \"contracts/sOHM.sol\":27977:27998  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":27748:28005  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":27368:27456  function manager() public view override returns (address) {... */\n    tag_13:\n        /* \"contracts/sOHM.sol\":27417:27424  address */\n      0x00\n        /* \"contracts/sOHM.sol\":27443:27449  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27436:27449  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":27368:27456  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":28015:28232  function pullManagement() public virtual override {... */\n    tag_15:\n        /* \"contracts/sOHM.sol\":28098:28107  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28084:28107  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28084:28094  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":28084:28107  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":28075:28146  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/sOHM.sol\":28186:28195  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28161:28197  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28178:28184  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28161:28197  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":28216:28225  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28207:28213  _owner */\n      0x00\n      dup1\n        /* \"contracts/sOHM.sol\":28207:28225  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":28015:28232  function pullManagement() public virtual override {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n\n    auxdata: 0xa2646970667358221220bc8b091ab77e876d8d8ae896fe9a8d139211ab1e4f2fea1a40073d80579f434a64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36106ae806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220bc8b091ab77e876d8d8ae896fe9a8d139211ab1e4f2fea1a40073d80579f434a64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6AE DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA2646970667358221220BC8B09 BYTE 0xB7 PUSH31 0x876D8D8AE896FE9A8D139211AB1E4F2FEA1A40073D80579F434A64736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "26992:1242:1:-:0;;;27259:103;;;;;;;;;;27293:10;27284:6;;:19;;;;;;;;;;;;;;;;;;27347:6;;;;;;;;;;27318:37;;27343:1;27318:37;;;;;;;;;;;;26992:1242;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca2646970667358221220bc8b091ab77e876d8d8ae896fe9a8d139211ab1e4f2fea1a40073d80579f434a64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA2646970667358221220BC8B09 BYTE 0xB7 PUSH31 0x876D8D8AE896FE9A8D139211AB1E4F2FEA1A40073D80579F434A64736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "26992:1242:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27586:156;;;:::i;:::-;;27748:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27368:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;28015:217;;;:::i;:::-;;27586:156;27514:10;27504:20;;:6;;;;;;;;;;:20;;;27495:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27702:1:::1;27669:37;;27686:6;::::0;::::1;;;;;;;;27669:37;;;;;;;;;;;;27733:1;27716:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;27586:156::o:0;27748:257::-;27514:10;27504:20;;:6;;;;;;;;;;:20;;;27495:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27871:1:::1;27850:23;;:9;:23;;;;27841:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27956:9;27931:36;;27948:6;::::0;::::1;;;;;;;;27931:36;;;;;;;;;;;;27989:9;27977;;:21;;;;;;;;;;;;;;;;;;27748:257:::0;:::o;27368:88::-;27417:7;27443:6;;;;;;;;;;;27436:13;;27368:88;:::o;28015:217::-;28098:9;;;;;;;;;;;28084:23;;:10;:23;;;28075:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28186:9;;;;;;;;;;;28161:36;;28178:6;;;;;;;;;;28161:36;;;;;;;;;;;;28216:9;;;;;;;;;;;28207:6;;:18;;;;;;;;;;;;;;;;;;28015:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "342000",
								"executionCost": "23624",
								"totalCost": "365624"
							},
							"external": {
								"manager()": "1077",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"renounceManagement()": "24234"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26992,
									"end": 28234,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 27259,
									"end": 27362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27293,
									"end": 27303,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27290,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27284,
									"end": 27290,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27343,
									"end": 27344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26992,
									"end": 28234,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc8b091ab77e876d8d8ae896fe9a8d139211ab1e4f2fea1a40073d80579f434a64736f6c63430007050033",
									".code": [
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "89208D8"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "46F68EE9"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "481C6A75"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "5A96AC0A"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26992,
											"end": 28234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27514,
											"end": 27524,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27702,
											"end": 27703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 27733,
											"end": 27734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27716,
											"end": 27722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27514,
											"end": 27524,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27871,
											"end": 27872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27956,
											"end": 27965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 27989,
											"end": 27998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27986,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27977,
											"end": 27986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27436,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27436,
											"end": 27449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28094,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH data",
											"source": 1,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28207,
											"end": 28213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1611,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1613,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"sOlympus": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingContract",
									"type": "address"
								}
							],
							"name": "LogStakingContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "LogSupply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingContract_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rebases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRebased",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockNumberOccured",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_INDEX",
									"type": "uint256"
								}
							],
							"name": "setIndex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"rebase(uint256,uint256)": {
								"params": {
									"profit_": "uint256"
								},
								"returns": {
									"_0": "uint256"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":28236:35514  contract sOlympus is ERC20Permit, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":29719:29929  constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sOHM.sol\":13554:13702  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x5374616b6564204f6c796d707573000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x734f484d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":29765:29766  9 */\n  0x09\n    /* \"contracts/sOHM.sol\":13642:13647  name_ */\n  dup3\n    /* \"contracts/sOHM.sol\":13634:13639  _name */\n  0x03\n    /* \"contracts/sOHM.sol\":13634:13647  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/sOHM.sol\":13663:13670  symbol_ */\n  dup2\n    /* \"contracts/sOHM.sol\":13653:13660  _symbol */\n  0x04\n    /* \"contracts/sOHM.sol\":13653:13670  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/sOHM.sol\":13688:13697  decimals_ */\n  dup1\n    /* \"contracts/sOHM.sol\":13676:13685  _decimals */\n  0x05\n  0x00\n    /* \"contracts/sOHM.sol\":13676:13697  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":13554:13702  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/sOHM.sol\":25380:25395  uint256 chainID */\n  0x00\n    /* \"contracts/sOHM.sol\":25439:25448  chainid() */\n  chainid\n    /* \"contracts/sOHM.sol\":25428:25448  chainID := chainid() */\n  swap1\n  pop\n    /* \"contracts/sOHM.sol\":25521:25616  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/sOHM.sol\":25646:25652  name() */\n  tag_11\n    /* \"contracts/sOHM.sol\":25646:25650  name */\n  shl(0x20, tag_12)\n    /* \"contracts/sOHM.sol\":25646:25652  name() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/sOHM.sol\":25630:25654  keccak256(bytes(name())) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":25678:25688  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":25668:25689  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":25714:25721  chainID */\n  dup4\n    /* \"contracts/sOHM.sol\":25743:25747  this */\n  address\n    /* \"contracts/sOHM.sol\":25497:25758  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/sOHM.sol\":25487:25759  keccak256(abi.encode(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":25468:25484  DOMAIN_SEPARATOR */\n  0x07\n    /* \"contracts/sOHM.sol\":25468:25759  DOMAIN_SEPARATOR = keccak256(abi.encode(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":25355:25766  constructor() {... */\n  pop\n    /* \"contracts/sOHM.sol\":27293:27303  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":27284:27290  _owner */\n  0x08\n  0x00\n    /* \"contracts/sOHM.sol\":27284:27303  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":27347:27353  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":27318:27355  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":27343:27344  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":27318:27355  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":29806:29816  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":29792:29803  initializer */\n  0x0b\n  0x00\n    /* \"contracts/sOHM.sol\":29792:29816  initializer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":29107:29122  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":29826:29838  _totalSupply */\n  0x02\n    /* \"contracts/sOHM.sol\":29826:29865  _totalSupply = INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":29894:29922  TOTAL_GONS.div(_totalSupply) */\n  tag_15\n    /* \"contracts/sOHM.sol\":29909:29921  _totalSupply */\n  sload(0x02)\n    /* \"contracts/sOHM.sol\":29107:29122  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":29047:29048  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":29038:29049  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":29355:29393  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  mod\n    /* \"contracts/sOHM.sol\":29047:29048  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":29038:29049  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":29340:29394  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n  sub\n    /* \"contracts/sOHM.sol\":29894:29908  TOTAL_GONS.div */\n  or(tag_0_124, shl(0x20, tag_17))\n  swap1\n    /* \"contracts/sOHM.sol\":29894:29922  TOTAL_GONS.div(_totalSupply) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/sOHM.sol\":29875:29891  _gonsPerFragment */\n  0x0e\n    /* \"contracts/sOHM.sol\":29875:29922  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":28236:35514  contract sOlympus is ERC20Permit, Ownable {... */\n  jump(tag_18)\n    /* \"contracts/sOHM.sol\":13782:13857  function name() public view returns (string memory) {... */\ntag_12:\n    /* \"contracts/sOHM.sol\":13819:13832  string memory */\n  0x60\n    /* \"contracts/sOHM.sol\":13847:13852  _name */\n  0x03\n    /* \"contracts/sOHM.sol\":13840:13852  return _name */\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_20\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_21\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_20)\ntag_21:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_22:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_22\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_20:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"contracts/sOHM.sol\":13782:13857  function name() public view returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_17:\n    /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  tag_24\n    /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n  shl(0x20, tag_25)\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\ntag_25:\n    /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n  gt\n    /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n  dup3\n    /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n  swap1\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_28:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_30\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_28)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_31\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_31:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n  dup2\n  tag_32\n  jumpi\n  invalid\ntag_32:\n  div\n    /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n  dup2\n  tag_33\n  jumpi\n  invalid\ntag_33:\n  mod\n    /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n  dup2\n    /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n  mul\n    /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n  add\n    /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n  eq\n    /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n  tag_34\n  jumpi\n  invalid\ntag_34:\n    /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n  swap2\n  pop\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/sOHM.sol\":28236:35514  contract sOlympus is ERC20Permit, Ownable {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_36\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_35)\ntag_36:\n  dup3\n  0x1f\n  lt\n  tag_37\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_35)\ntag_37:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  dup3\n  add\ntag_38:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_38)\ntag_39:\ntag_35:\n  pop\n  swap1\n  pop\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  pop\n  swap1\n  jump\t// out\ntag_41:\ntag_42:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_42)\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":28236:35514  contract sOlympus is ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x481c6a75\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc4d66de8\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9ce110d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x73c69eb7\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x73c69eb7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7965d56d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x481c6a75\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2986c0e5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40a5737f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2986c0e5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2df75cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x095ea7b3\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1bd39674\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x058ecdb4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":30750:31619  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":13782:13857  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_45:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_45)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":27586:27742  function renounceManagement() public virtual override onlyManager() {... */\n    tag_5:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/sOHM.sol\":34228:34450  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_6:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":14830:14922  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":32643:32765  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":33695:34222  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":33073:33166  function index() public view returns ( uint ) {... */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":28975:28992  uint public INDEX */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":25202:25310  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":14680:14755  function decimals() public view returns (uint8) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":25317:25348  bytes32 public DOMAIN_SEPARATOR */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":34693:35011  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":30412:30586  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":27748:28005  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/sOHM.sol\":27368:27456  function manager() public view override returns (address) {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":28015:28232  function pullManagement() public virtual override {... */\n    tag_19:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sOHM.sol\":32495:32637  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_20:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":28945:28968  Rebase[] public rebases */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":32771:32889  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_22:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":26648:26766  function nonces(address owner) public view override returns (uint256) {... */\n    tag_23:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":32937:33067  function circulatingSupply() public view returns ( uint ) {... */\n    tag_24:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":13983:14062  function symbol() public view returns (string memory) {... */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_101:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_101)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":28459:28485  address public initializer */\n    tag_26:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":35017:35512  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_27:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":33172:33530  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":29935:30406  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_29:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":25836:26585  function permit(... */\n    tag_30:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/sOHM.sol\":33536:33689  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_31:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":28423:28453  address public stakingContract */\n    tag_32:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":30750:31619  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_42:\n        /* \"contracts/sOHM.sol\":30837:30844  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":28382:28397  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28368:28397  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28368:28378  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":28368:28397  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":28359:28399  require( msg.sender == stakingContract ) */\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n        /* \"contracts/sOHM.sol\":30857:30877  uint256 rebaseAmount */\n      0x00\n        /* \"contracts/sOHM.sol\":30887:30913  uint256 circulatingSupply_ */\n      dup1\n        /* \"contracts/sOHM.sol\":30916:30935  circulatingSupply() */\n      tag_128\n        /* \"contracts/sOHM.sol\":30916:30933  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":30916:30935  circulatingSupply() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/sOHM.sol\":30887:30935  uint256 circulatingSupply_ = circulatingSupply() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":30962:30963  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":30951:30958  profit_ */\n      dup6\n        /* \"contracts/sOHM.sol\":30951:30963  profit_ == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":30946:31310  if ( profit_ == 0 ) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/sOHM.sol\":30996:31002  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":30985:31035  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":31004:31019  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":31021:31033  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":30985:31035  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":31065:31071  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":31054:31085  LogRebase( epoch_, 0, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":31073:31074  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":31076:31083  index() */\n      tag_130\n        /* \"contracts/sOHM.sol\":31076:31081  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":31076:31083  index() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/sOHM.sol\":31054:31085  LogRebase( epoch_, 0, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":31106:31118  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":31099:31118  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_127)\n        /* \"contracts/sOHM.sol\":30946:31310  if ( profit_ == 0 ) {... */\n    tag_129:\n        /* \"contracts/sOHM.sol\":31161:31162  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":31140:31158  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":31140:31162  circulatingSupply_ > 0 */\n      gt\n        /* \"contracts/sOHM.sol\":31135:31310  if ( circulatingSupply_ > 0 ){... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/sOHM.sol\":31193:31246  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      tag_133\n        /* \"contracts/sOHM.sol\":31226:31244  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":31193:31220  profit_.mul( _totalSupply ) */\n      tag_134\n        /* \"contracts/sOHM.sol\":31206:31218  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":31193:31200  profit_ */\n      dup9\n        /* \"contracts/sOHM.sol\":31193:31204  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":31193:31220  profit_.mul( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/sOHM.sol\":31193:31224  profit_.mul( _totalSupply ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":31193:31246  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/sOHM.sol\":31178:31246  rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":31135:31310  if ( circulatingSupply_ > 0 ){... */\n      jump(tag_136)\n    tag_132:\n        /* \"contracts/sOHM.sol\":31292:31299  profit_ */\n      dup5\n        /* \"contracts/sOHM.sol\":31277:31299  rebaseAmount = profit_ */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":31135:31310  if ( circulatingSupply_ > 0 ){... */\n    tag_136:\n        /* \"contracts/sOHM.sol\":31335:31367  _totalSupply.add( rebaseAmount ) */\n      tag_137\n        /* \"contracts/sOHM.sol\":31353:31365  rebaseAmount */\n      dup3\n        /* \"contracts/sOHM.sol\":31335:31347  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":31335:31351  _totalSupply.add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":31335:31367  _totalSupply.add( rebaseAmount ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/sOHM.sol\":31320:31332  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":31320:31367  _totalSupply = _totalSupply.add( rebaseAmount ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":29519:29520  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":29510:29521  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":31398:31408  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":31383:31395  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":31383:31408  _totalSupply > MAX_SUPPLY */\n      gt\n        /* \"contracts/sOHM.sol\":31378:31461  if ( _totalSupply > MAX_SUPPLY ) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/sOHM.sol\":29519:29520  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":29510:29521  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":31440:31450  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":31425:31437  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":31425:31450  _totalSupply = MAX_SUPPLY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":31378:31461  if ( _totalSupply > MAX_SUPPLY ) {... */\n    tag_139:\n        /* \"contracts/sOHM.sol\":31490:31520  TOTAL_GONS.div( _totalSupply ) */\n      tag_140\n        /* \"contracts/sOHM.sol\":31506:31518  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":29107:29122  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":29047:29048  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":29038:29049  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":29355:29393  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_141\n      jumpi\n      invalid\n    tag_141:\n      mod\n        /* \"contracts/sOHM.sol\":29047:29048  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":29038:29049  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":29340:29394  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":31490:31504  TOTAL_GONS.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":31490:31520  TOTAL_GONS.div( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/sOHM.sol\":31471:31487  _gonsPerFragment */\n      0x0e\n        /* \"contracts/sOHM.sol\":31471:31520  _gonsPerFragment = TOTAL_GONS.div( _totalSupply ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":31531:31582  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      tag_142\n        /* \"contracts/sOHM.sol\":31545:31563  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":31565:31572  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":31574:31580  epoch_ */\n      dup7\n        /* \"contracts/sOHM.sol\":31531:31543  _storeRebase */\n      tag_143\n        /* \"contracts/sOHM.sol\":31531:31582  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/sOHM.sol\":31600:31612  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":31593:31612  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":28409:28410  _ */\n    tag_127:\n        /* \"contracts/sOHM.sol\":30750:31619  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":13782:13857  function name() public view returns (string memory) {... */\n    tag_44:\n        /* \"contracts/sOHM.sol\":13819:13832  string memory */\n      0x60\n        /* \"contracts/sOHM.sol\":13847:13852  _name */\n      0x03\n        /* \"contracts/sOHM.sol\":13840:13852  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":13782:13857  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":27586:27742  function renounceManagement() public virtual override onlyManager() {... */\n    tag_50:\n        /* \"contracts/sOHM.sol\":27514:27524  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27510  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":27495:27562  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/sOHM.sol\":27702:27703  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":27669:27706  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27686:27692  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27669:27706  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":27733:27734  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":27716:27722  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":27716:27735  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":27586:27742  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":34228:34450  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_53:\n        /* \"contracts/sOHM.sol\":34304:34308  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":34362:34367  value */\n      dup2\n        /* \"contracts/sOHM.sol\":34321:34334  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":34321:34348  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34336:34346  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":34321:34348  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34321:34359  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34350:34357  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":34321:34359  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34321:34367  _allowedValue[ msg.sender ][ spender ] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":34405:34412  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":34383:34421  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":34393:34403  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":34383:34421  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":34414:34419  value */\n      dup5\n        /* \"contracts/sOHM.sol\":34383:34421  Approval( msg.sender, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":34439:34443  true */\n      0x01\n        /* \"contracts/sOHM.sol\":34432:34443  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":34228:34450  function approve( address spender, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":14830:14922  function totalSupply() public view override returns (uint256) {... */\n    tag_55:\n        /* \"contracts/sOHM.sol\":14883:14890  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":14905:14917  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":14898:14917  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":14830:14922  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":32643:32765  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_58:\n        /* \"contracts/sOHM.sol\":32704:32708  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":32728:32758  amount.mul( _gonsPerFragment ) */\n      tag_154\n        /* \"contracts/sOHM.sol\":32740:32756  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":32728:32734  amount */\n      dup4\n        /* \"contracts/sOHM.sol\":32728:32738  amount.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":32728:32758  amount.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/sOHM.sol\":32721:32758  return amount.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":32643:32765  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":33695:34222  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_61:\n        /* \"contracts/sOHM.sol\":33786:33790  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":33840:33888  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      tag_156\n        /* \"contracts/sOHM.sol\":33881:33886  value */\n      dup3\n        /* \"contracts/sOHM.sol\":33840:33853  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":33840:33861  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33855:33859  from */\n      dup8\n        /* \"contracts/sOHM.sol\":33840:33861  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":33840:33875  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33863:33873  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":33840:33875  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":33840:33879  _allowedValue[ from ][ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":33840:33888  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/sOHM.sol\":33802:33815  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":33802:33823  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33817:33821  from */\n      dup7\n        /* \"contracts/sOHM.sol\":33802:33823  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":33802:33837  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33825:33835  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":33802:33837  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":33802:33888  _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":33918:33928  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":33902:33968  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":33912:33916  from */\n      dup5\n        /* \"contracts/sOHM.sol\":33902:33968  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":33931:33944  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":33931:33952  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33946:33950  from */\n      dup9\n        /* \"contracts/sOHM.sol\":33931:33952  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":33931:33966  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33954:33964  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":33931:33966  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":33902:33968  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":33979:33995  uint256 gonValue */\n      0x00\n        /* \"contracts/sOHM.sol\":33998:34021  gonsForBalance( value ) */\n      tag_158\n        /* \"contracts/sOHM.sol\":34014:34019  value */\n      dup4\n        /* \"contracts/sOHM.sol\":33998:34012  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":33998:34021  gonsForBalance( value ) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sOHM.sol\":33979:34021  uint256 gonValue = gonsForBalance( value ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":34054:34088  _gonBalances[from].sub( gonValue ) */\n      tag_159\n        /* \"contracts/sOHM.sol\":34078:34086  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":34054:34066  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":34054:34072  _gonBalances[from] */\n      0x00\n        /* \"contracts/sOHM.sol\":34067:34071  from */\n      dup9\n        /* \"contracts/sOHM.sol\":34054:34072  _gonBalances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":34054:34076  _gonBalances[from].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":34054:34088  _gonBalances[from].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"contracts/sOHM.sol\":34031:34043  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":34031:34051  _gonBalances[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34045:34049  from */\n      dup8\n        /* \"contracts/sOHM.sol\":34031:34051  _gonBalances[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34031:34088  _gonBalances[ from ] = _gonBalances[from].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":34119:34151  _gonBalances[to].add( gonValue ) */\n      tag_160\n        /* \"contracts/sOHM.sol\":34141:34149  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":34119:34131  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":34119:34135  _gonBalances[to] */\n      0x00\n        /* \"contracts/sOHM.sol\":34132:34134  to */\n      dup8\n        /* \"contracts/sOHM.sol\":34119:34135  _gonBalances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":34119:34139  _gonBalances[to].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":34119:34151  _gonBalances[to].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/sOHM.sol\":34098:34110  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":34098:34116  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34112:34114  to */\n      dup7\n        /* \"contracts/sOHM.sol\":34098:34116  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34098:34151  _gonBalances[ to ] = _gonBalances[to].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":34182:34184  to */\n      dup4\n        /* \"contracts/sOHM.sol\":34166:34193  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":34176:34180  from */\n      dup6\n        /* \"contracts/sOHM.sol\":34166:34193  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":34186:34191  value */\n      dup6\n        /* \"contracts/sOHM.sol\":34166:34193  Transfer( from, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":34211:34215  true */\n      0x01\n        /* \"contracts/sOHM.sol\":34204:34215  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":33695:34222  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":33073:33166  function index() public view returns ( uint ) {... */\n    tag_63:\n        /* \"contracts/sOHM.sol\":33112:33116  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":33136:33159  balanceForGons( INDEX ) */\n      tag_162\n        /* \"contracts/sOHM.sol\":33152:33157  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":33136:33150  balanceForGons */\n      tag_93\n        /* \"contracts/sOHM.sol\":33136:33159  balanceForGons( INDEX ) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/sOHM.sol\":33129:33159  return balanceForGons( INDEX ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":33073:33166  function index() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":28975:28992  uint public INDEX */\n    tag_65:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":25202:25310  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_67:\n        /* \"contracts/sOHM.sol\":25244:25310  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/sOHM.sol\":25202:25310  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":14680:14755  function decimals() public view returns (uint8) {... */\n    tag_69:\n        /* \"contracts/sOHM.sol\":14721:14726  uint8 */\n      0x00\n        /* \"contracts/sOHM.sol\":14741:14750  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/sOHM.sol\":14734:14750  return _decimals */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":14680:14755  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":25317:25348  bytes32 public DOMAIN_SEPARATOR */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":34693:35011  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_74:\n        /* \"contracts/sOHM.sol\":34784:34788  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":34841:34897  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      tag_165\n        /* \"contracts/sOHM.sol\":34885:34895  addedValue */\n      dup3\n        /* \"contracts/sOHM.sol\":34841:34854  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":34841:34868  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34856:34866  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":34841:34868  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34841:34879  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34870:34877  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":34841:34879  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":34841:34883  _allowedValue[ msg.sender ][ spender ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":34841:34897  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/sOHM.sol\":34800:34813  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":34800:34827  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34815:34825  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":34800:34827  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34800:34838  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34829:34836  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":34800:34838  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34800:34897  _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":34934:34941  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":34912:34983  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":34922:34932  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":34912:34983  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":34943:34956  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":34943:34970  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34958:34968  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":34943:34970  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34943:34981  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":34972:34979  spender */\n      dup8\n        /* \"contracts/sOHM.sol\":34943:34981  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":34912:34983  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":35000:35004  true */\n      0x01\n        /* \"contracts/sOHM.sol\":34993:35004  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":34693:35011  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":30412:30586  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_77:\n        /* \"contracts/sOHM.sol\":30478:30482  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":27514:27524  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27510  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":27495:27562  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/sOHM.sol\":30513:30514  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":30504:30509  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":30504:30514  INDEX == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":30495:30516  require( INDEX == 0 ) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/sOHM.sol\":30534:30558  gonsForBalance( _INDEX ) */\n      tag_170\n        /* \"contracts/sOHM.sol\":30550:30556  _INDEX */\n      dup3\n        /* \"contracts/sOHM.sol\":30534:30548  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":30534:30558  gonsForBalance( _INDEX ) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/sOHM.sol\":30526:30531  INDEX */\n      0x0d\n        /* \"contracts/sOHM.sol\":30526:30558  INDEX = gonsForBalance( _INDEX ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":30575:30579  true */\n      0x01\n        /* \"contracts/sOHM.sol\":30568:30579  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":30412:30586  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":27748:28005  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_80:\n        /* \"contracts/sOHM.sol\":27514:27524  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27510  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27504:27524  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":27495:27562  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/sOHM.sol\":27871:27872  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":27850:27873  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27850:27859  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":27850:27873  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":27841:27916  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/sOHM.sol\":27956:27965  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":27931:27967  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27948:27954  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27931:27967  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":27989:27998  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":27977:27986  _newOwner */\n      0x09\n      0x00\n        /* \"contracts/sOHM.sol\":27977:27998  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":27748:28005  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":27368:27456  function manager() public view override returns (address) {... */\n    tag_82:\n        /* \"contracts/sOHM.sol\":27417:27424  address */\n      0x00\n        /* \"contracts/sOHM.sol\":27443:27449  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":27436:27449  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":27368:27456  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":28015:28232  function pullManagement() public virtual override {... */\n    tag_84:\n        /* \"contracts/sOHM.sol\":28098:28107  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28084:28107  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28084:28094  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":28084:28107  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":28075:28146  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/sOHM.sol\":28186:28195  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28161:28197  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28178:28184  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28161:28197  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":28216:28225  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":28207:28213  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":28207:28225  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":28015:28232  function pullManagement() public virtual override {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":32495:32637  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_87:\n        /* \"contracts/sOHM.sol\":32560:32567  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":32587:32630  _gonBalances[ who ].div( _gonsPerFragment ) */\n      tag_179\n        /* \"contracts/sOHM.sol\":32612:32628  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":32587:32599  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":32587:32606  _gonBalances[ who ] */\n      0x00\n        /* \"contracts/sOHM.sol\":32601:32604  who */\n      dup6\n        /* \"contracts/sOHM.sol\":32587:32606  _gonBalances[ who ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":32587:32610  _gonBalances[ who ].div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":32587:32630  _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/sOHM.sol\":32580:32630  return _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":32495:32637  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":28945:28968  Rebase[] public rebases */\n    tag_90:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/sOHM.sol\":32771:32889  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_93:\n        /* \"contracts/sOHM.sol\":32830:32834  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":32854:32882  gons.div( _gonsPerFragment ) */\n      tag_183\n        /* \"contracts/sOHM.sol\":32864:32880  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":32854:32858  gons */\n      dup4\n        /* \"contracts/sOHM.sol\":32854:32862  gons.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":32854:32882  gons.div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/sOHM.sol\":32847:32882  return gons.div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":32771:32889  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":26648:26766  function nonces(address owner) public view override returns (uint256) {... */\n    tag_96:\n        /* \"contracts/sOHM.sol\":26709:26716  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":26735:26759  _nonces[owner].current() */\n      tag_185\n        /* \"contracts/sOHM.sol\":26735:26742  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":26735:26749  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":26743:26748  owner */\n      dup5\n        /* \"contracts/sOHM.sol\":26735:26749  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":26735:26757  _nonces[owner].current */\n      tag_186\n        /* \"contracts/sOHM.sol\":26735:26759  _nonces[owner].current() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/sOHM.sol\":26728:26759  return _nonces[owner].current() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":26648:26766  function nonces(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":32937:33067  function circulatingSupply() public view returns ( uint ) {... */\n    tag_98:\n        /* \"contracts/sOHM.sol\":32988:32992  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":33012:33060  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      tag_188\n        /* \"contracts/sOHM.sol\":33030:33058  balanceOf( stakingContract ) */\n      tag_189\n        /* \"contracts/sOHM.sol\":33041:33056  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":33030:33039  balanceOf */\n      tag_87\n        /* \"contracts/sOHM.sol\":33030:33058  balanceOf( stakingContract ) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/sOHM.sol\":33012:33024  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":33012:33028  _totalSupply.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":33012:33060  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/sOHM.sol\":33005:33060  return _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":32937:33067  function circulatingSupply() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":13983:14062  function symbol() public view returns (string memory) {... */\n    tag_100:\n        /* \"contracts/sOHM.sol\":14022:14035  string memory */\n      0x60\n        /* \"contracts/sOHM.sol\":14050:14057  _symbol */\n      0x04\n        /* \"contracts/sOHM.sol\":14043:14057  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":13983:14062  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":28459:28485  address public initializer */\n    tag_106:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":35017:35512  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_109:\n        /* \"contracts/sOHM.sol\":35113:35117  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":35129:35145  uint256 oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":35148:35161  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":35148:35175  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35163:35173  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":35148:35175  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":35148:35186  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35177:35184  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":35148:35186  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":35129:35186  uint256 oldValue = _allowedValue[ msg.sender ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":35219:35227  oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":35200:35215  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":35200:35227  subtractedValue >= oldValue */\n      lt\n        /* \"contracts/sOHM.sol\":35196:35399  if (subtractedValue >= oldValue) {... */\n      tag_195\n      jumpi\n        /* \"contracts/sOHM.sol\":35284:35285  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":35243:35256  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":35243:35270  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35258:35268  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":35243:35270  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":35243:35281  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35272:35279  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":35243:35281  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":35243:35285  _allowedValue[ msg.sender ][ spender ] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":35196:35399  if (subtractedValue >= oldValue) {... */\n      jump(tag_196)\n    tag_195:\n        /* \"contracts/sOHM.sol\":35357:35388  oldValue.sub( subtractedValue ) */\n      tag_197\n        /* \"contracts/sOHM.sol\":35371:35386  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":35357:35365  oldValue */\n      dup3\n        /* \"contracts/sOHM.sol\":35357:35369  oldValue.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":35357:35388  oldValue.sub( subtractedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/sOHM.sol\":35316:35329  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":35316:35343  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35331:35341  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":35316:35343  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":35316:35354  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35345:35352  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":35316:35354  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":35316:35388  _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":35196:35399  if (subtractedValue >= oldValue) {... */\n    tag_196:\n        /* \"contracts/sOHM.sol\":35435:35442  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":35413:35484  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":35423:35433  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":35413:35484  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":35444:35457  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":35444:35471  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35459:35469  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":35444:35471  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":35444:35482  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":35473:35480  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":35444:35482  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":35413:35484  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":35501:35505  true */\n      0x01\n        /* \"contracts/sOHM.sol\":35494:35505  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":35017:35512  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":33172:33530  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_112:\n        /* \"contracts/sOHM.sol\":33244:33248  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":33260:33276  uint256 gonValue */\n      dup1\n        /* \"contracts/sOHM.sol\":33279:33308  value.mul( _gonsPerFragment ) */\n      tag_199\n        /* \"contracts/sOHM.sol\":33290:33306  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":33279:33284  value */\n      dup5\n        /* \"contracts/sOHM.sol\":33279:33288  value.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":33279:33308  value.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/sOHM.sol\":33260:33308  uint256 gonValue = value.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":33347:33389  _gonBalances[ msg.sender ].sub( gonValue ) */\n      tag_200\n        /* \"contracts/sOHM.sol\":33379:33387  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":33347:33359  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":33347:33373  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33361:33371  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":33347:33373  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":33347:33377  _gonBalances[ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":33347:33389  _gonBalances[ msg.sender ].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/sOHM.sol\":33318:33330  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":33318:33344  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33332:33342  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":33318:33344  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":33318:33389  _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":33420:33454  _gonBalances[ to ].add( gonValue ) */\n      tag_201\n        /* \"contracts/sOHM.sol\":33444:33452  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":33420:33432  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":33420:33438  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33434:33436  to */\n      dup8\n        /* \"contracts/sOHM.sol\":33420:33438  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":33420:33442  _gonBalances[ to ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":33420:33454  _gonBalances[ to ].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/sOHM.sol\":33399:33411  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":33399:33417  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33413:33415  to */\n      dup7\n        /* \"contracts/sOHM.sol\":33399:33417  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":33399:33454  _gonBalances[ to ] = _gonBalances[ to ].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":33491:33493  to */\n      dup4\n        /* \"contracts/sOHM.sol\":33469:33502  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":33479:33489  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":33469:33502  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":33495:33500  value */\n      dup6\n        /* \"contracts/sOHM.sol\":33469:33502  Transfer( msg.sender, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":33519:33523  true */\n      0x01\n        /* \"contracts/sOHM.sol\":33512:33523  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":33172:33530  function transfer( address to, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":29935:30406  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_115:\n        /* \"contracts/sOHM.sol\":30002:30006  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":30042:30053  initializer */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":30028:30053  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":30028:30038  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":30028:30053  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":30019:30055  require( msg.sender == initializer ) */\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n        /* \"contracts/sOHM.sol\":30102:30103  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":30074:30104  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":30074:30090  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":30074:30104  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":30065:30106  require( stakingContract_ != address(0) ) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/sOHM.sol\":30134:30150  stakingContract_ */\n      dup2\n        /* \"contracts/sOHM.sol\":30116:30131  stakingContract */\n      0x0a\n      0x00\n        /* \"contracts/sOHM.sol\":30116:30150  stakingContract = stakingContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":29107:29122  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":29047:29048  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":29038:29049  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":29355:29393  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_205\n      jumpi\n      invalid\n    tag_205:\n      mod\n        /* \"contracts/sOHM.sol\":29047:29048  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":29038:29049  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":29340:29394  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":30160:30172  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":30160:30191  _gonBalances[ stakingContract ] */\n      0x00\n        /* \"contracts/sOHM.sol\":30174:30189  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":30160:30191  _gonBalances[ stakingContract ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":30160:30204  _gonBalances[ stakingContract ] = TOTAL_GONS */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":30244:30259  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":30220:30275  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":30238:30241  0x0 */\n      0x00\n        /* \"contracts/sOHM.sol\":30220:30275  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":30261:30273  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":30220:30275  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":30290:30335  LogStakingContractUpdated( stakingContract_ ) */\n      0x817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a1\n        /* \"contracts/sOHM.sol\":30317:30333  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":30290:30335  LogStakingContractUpdated( stakingContract_ ) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sOHM.sol\":30376:30377  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":30354:30365  initializer */\n      0x0b\n      0x00\n        /* \"contracts/sOHM.sol\":30354:30378  initializer = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":30395:30399  true */\n      0x01\n        /* \"contracts/sOHM.sol\":30388:30399  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":29935:30406  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":25836:26585  function permit(... */\n    tag_118:\n        /* \"contracts/sOHM.sol\":26072:26080  deadline */\n      dup4\n        /* \"contracts/sOHM.sol\":26053:26068  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":26053:26080  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/sOHM.sol\":26045:26109  require(block.timestamp <= deadline, \"Permit: expired deadline\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5065726d69743a206578706972656420646561646c696e650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/sOHM.sol\":26120:26138  bytes32 hashStruct */\n      0x00\n        /* \"contracts/sOHM.sol\":25244:25310  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/sOHM.sol\":26174:26189  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/sOHM.sol\":26191:26196  owner */\n      dup9\n        /* \"contracts/sOHM.sol\":26198:26205  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":26207:26213  amount */\n      dup9\n        /* \"contracts/sOHM.sol\":26215:26239  _nonces[owner].current() */\n      tag_208\n        /* \"contracts/sOHM.sol\":26215:26222  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":26215:26229  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":26223:26228  owner */\n      dup15\n        /* \"contracts/sOHM.sol\":26215:26229  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":26215:26237  _nonces[owner].current */\n      tag_186\n        /* \"contracts/sOHM.sol\":26215:26239  _nonces[owner].current() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/sOHM.sol\":26241:26249  deadline */\n      dup10\n        /* \"contracts/sOHM.sol\":26163:26250  abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sOHM.sol\":26153:26251  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sOHM.sol\":26120:26251  bytes32 hashStruct =... */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":26262:26275  bytes32 _hash */\n      0x00\n        /* \"contracts/sOHM.sol\":26312:26318  0x1901 */\n      0x1901\n        /* \"contracts/sOHM.sol\":26321:26337  DOMAIN_SEPARATOR */\n      sload(0x07)\n        /* \"contracts/sOHM.sol\":26339:26349  hashStruct */\n      dup4\n        /* \"contracts/sOHM.sol\":26288:26350  abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffff\n      and\n      0xf0\n      shl\n      dup2\n      mstore\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sOHM.sol\":26278:26351  keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sOHM.sol\":26262:26351  bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":26362:26376  address signer */\n      0x00\n        /* \"contracts/sOHM.sol\":26379:26404  ecrecover(_hash, v, r, s) */\n      0x01\n        /* \"contracts/sOHM.sol\":26389:26394  _hash */\n      dup3\n        /* \"contracts/sOHM.sol\":26396:26397  v */\n      dup8\n        /* \"contracts/sOHM.sol\":26399:26400  r */\n      dup8\n        /* \"contracts/sOHM.sol\":26402:26403  s */\n      dup8\n        /* \"contracts/sOHM.sol\":26379:26404  ecrecover(_hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/sOHM.sol\":26362:26404  address signer = ecrecover(_hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":26440:26441  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":26422:26442  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":26422:26428  signer */\n      dup2\n        /* \"contracts/sOHM.sol\":26422:26442  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":26422:26461  signer != address(0) && signer == owner */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/sOHM.sol\":26456:26461  owner */\n      dup10\n        /* \"contracts/sOHM.sol\":26446:26461  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":26446:26452  signer */\n      dup2\n        /* \"contracts/sOHM.sol\":26446:26461  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":26422:26461  signer != address(0) && signer == owner */\n    tag_211:\n        /* \"contracts/sOHM.sol\":26414:26499  require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/sOHM.sol\":26510:26536  _nonces[owner].increment() */\n      tag_213\n        /* \"contracts/sOHM.sol\":26510:26517  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":26510:26524  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":26518:26523  owner */\n      dup13\n        /* \"contracts/sOHM.sol\":26510:26524  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":26510:26534  _nonces[owner].increment */\n      tag_214\n        /* \"contracts/sOHM.sol\":26510:26536  _nonces[owner].increment() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/sOHM.sol\":26546:26578  _approve(owner, spender, amount) */\n      tag_215\n        /* \"contracts/sOHM.sol\":26555:26560  owner */\n      dup11\n        /* \"contracts/sOHM.sol\":26562:26569  spender */\n      dup11\n        /* \"contracts/sOHM.sol\":26571:26577  amount */\n      dup11\n        /* \"contracts/sOHM.sol\":26546:26554  _approve */\n      tag_216\n        /* \"contracts/sOHM.sol\":26546:26578  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/sOHM.sol\":25836:26585  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":33536:33689  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_121:\n        /* \"contracts/sOHM.sol\":33621:33628  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":33648:33661  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":33648:33671  _allowedValue[ owner_ ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33663:33669  owner_ */\n      dup5\n        /* \"contracts/sOHM.sol\":33648:33671  _allowedValue[ owner_ ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":33648:33682  _allowedValue[ owner_ ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":33673:33680  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":33648:33682  _allowedValue[ owner_ ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":33641:33682  return _allowedValue[ owner_ ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":33536:33689  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":28423:28453  address public stakingContract */\n    tag_123:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      tag_219\n        /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n      tag_220\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_219:\n        /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"contracts/libraries/SafeMath.sol\":772:779  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":800:801  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":795:796  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":795:801  a == 0 */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/libraries/SafeMath.sol\":824:825  0 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":817:825  return 0 */\n      swap1\n      pop\n      jump(tag_221)\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n    tag_222:\n        /* \"contracts/libraries/SafeMath.sol\":846:855  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":862:863  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":858:859  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":858:863  a * b */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":846:863  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":890:891  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":885:886  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":881:882  c */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":881:886  c / a */\n      dup2\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":881:891  c / a == b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":873:929  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/libraries/SafeMath.sol\":947:948  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":940:948  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"contracts/libraries/SafeMath.sol\":257:264  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":276:285  uint256 c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":292:293  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":288:289  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":288:293  a + b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":276:293  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":316:317  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":311:312  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":311:317  c >= a */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":303:349  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/libraries/SafeMath.sol\":367:368  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":360:368  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":31809:32489  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n    tag_143:\n        /* \"contracts/sOHM.sol\":31906:31910  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":31923:31941  uint rebasePercent */\n      dup1\n        /* \"contracts/sOHM.sol\":31944:31991  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      tag_228\n        /* \"contracts/sOHM.sol\":31969:31989  previousCirculating_ */\n      dup6\n        /* \"contracts/sOHM.sol\":31944:31963  profit_.mul( 1e18 ) */\n      tag_229\n        /* \"contracts/sOHM.sol\":31957:31961  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sOHM.sol\":31944:31951  profit_ */\n      dup8\n        /* \"contracts/sOHM.sol\":31944:31955  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":31944:31963  profit_.mul( 1e18 ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/sOHM.sol\":31944:31967  profit_.mul( 1e18 ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":31944:31991  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/sOHM.sol\":31923:31991  uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":32002:32009  rebases */\n      0x0c\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sOHM.sol\":32046:32052  epoch_ */\n      dup6\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":32074:32087  rebasePercent */\n      dup4\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":32135:32155  previousCirculating_ */\n      dup8\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":32187:32206  circulatingSupply() */\n      tag_230\n        /* \"contracts/sOHM.sol\":32187:32204  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":32187:32206  circulatingSupply() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":32235:32242  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":32263:32270  index() */\n      tag_231\n        /* \"contracts/sOHM.sol\":32263:32268  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":32263:32270  index() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":32304:32316  block.number */\n      number\n        /* \"contracts/sOHM.sol\":32016:32327  Rebase ( {... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sOHM.sol\":32002:32328  rebases.push( Rebase ( {... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":32363:32369  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":32352:32402  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":32371:32386  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":32388:32400  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":32352:32402  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":32428:32434  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":32417:32460  LogRebase( epoch_, rebasePercent, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":32436:32449  rebasePercent */\n      dup3\n        /* \"contracts/sOHM.sol\":32451:32458  index() */\n      tag_233\n        /* \"contracts/sOHM.sol\":32451:32456  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":32451:32458  index() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/sOHM.sol\":32417:32460  LogRebase( epoch_, rebasePercent, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":32478:32482  true */\n      0x01\n        /* \"contracts/sOHM.sol\":32471:32482  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":31809:32489  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/libraries/SafeMath.sol\":439:446  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_235\n        /* \"contracts/libraries/SafeMath.sol\":469:470  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":472:473  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":465:468  sub */\n      tag_236\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_235:\n        /* \"contracts/libraries/SafeMath.sol\":458:508  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23088:23200  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_186:\n        /* \"contracts/sOHM.sol\":23153:23160  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":23179:23186  counter */\n      dup2\n        /* \"contracts/sOHM.sol\":23179:23193  counter._value */\n      0x00\n      add\n      sload\n        /* \"contracts/sOHM.sol\":23172:23193  return counter._value */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23088:23200  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23206:23384  function increment(Counter storage counter) internal {... */\n    tag_214:\n        /* \"contracts/sOHM.sol\":23376:23377  1 */\n      0x01\n        /* \"contracts/sOHM.sol\":23358:23365  counter */\n      dup2\n        /* \"contracts/sOHM.sol\":23358:23372  counter._value */\n      0x00\n      add\n      0x00\n        /* \"contracts/sOHM.sol\":23358:23377  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":23206:23384  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":34492:34687  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n    tag_216:\n        /* \"contracts/sOHM.sol\":34627:34632  value */\n      dup1\n        /* \"contracts/sOHM.sol\":34595:34608  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":34595:34615  _allowedValue[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":34609:34614  owner */\n      dup6\n        /* \"contracts/sOHM.sol\":34595:34615  _allowedValue[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34595:34624  _allowedValue[owner][spender] */\n      0x00\n        /* \"contracts/sOHM.sol\":34616:34623  spender */\n      dup5\n        /* \"contracts/sOHM.sol\":34595:34624  _allowedValue[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":34595:34632  _allowedValue[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":34664:34671  spender */\n      dup2\n        /* \"contracts/sOHM.sol\":34647:34680  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":34657:34662  owner */\n      dup4\n        /* \"contracts/sOHM.sol\":34647:34680  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":34673:34678  value */\n      dup4\n        /* \"contracts/sOHM.sol\":34647:34680  Approval( owner, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":34492:34687  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n      gt\n        /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n      swap1\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_242:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_242)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_245:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n      dup2\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      mod\n        /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n        /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"contracts/libraries/SafeMath.sol\":607:614  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":639:640  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:635  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:640  b <= a */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":642:654  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":626:655  require(b <= a, errorMessage) */\n      swap1\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_251:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_253\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_251)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_254:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":665:674  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":681:682  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":677:678  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":677:682  a - b */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":665:682  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":700:701  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":693:701  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n    data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee 5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa26469706673582212205fda0a780001bb33e24d208c5ae9bce21e52516f21b720f92feb0467e02d8fcb64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f5374616b6564204f6c796d7075730000000000000000000000000000000000008152506040518060400160405280600481526020017f734f484d000000000000000000000000000000000000000000000000000000008152506009826003908051906020019062000098929190620004d2565b508160049080519060200190620000b1929190620004d2565b5080600560006101000a81548160ff021916908360ff16021790555050505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f62000106620002f760201b60201c565b805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206007819055505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a333600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e08000600281905550620002eb6002546611c37937e0800060001981620002d257fe5b06600019036200039d60201b620026f21790919060201c565b600e8190555062000588565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620003935780601f10620003675761010080835404028352916020019162000393565b820191906000526020600020905b8154815290600101906020018083116200037557829003601f168201915b5050505050905090565b6000620003e783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620003ef60201b60201c565b905092915050565b600080831182906200049f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200046357808201518184015260208101905062000446565b50505050905090810190601f168015620004915780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620004ac57fe5b049050838581620004b957fe5b06818502018514620004c757fe5b809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200050a576000855562000556565b82601f106200052557805160ff191683800117855562000556565b8280016001018555821562000556579182015b828111156200055557825182559160200191906001019062000538565b5b50905062000565919062000569565b5090565b5b80821115620005845760008160009055506001016200056a565b5090565b612d7a80620005986000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212205fda0a780001bb33e24d208c5ae9bce21e52516f21b720f92feb0467e02d8fcb64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B6564204F6C796D707573000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x734F484D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x98 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB1 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH1 0x0 CHAINID SWAP1 POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x106 PUSH3 0x2F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x2EB PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH3 0x2D2 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH3 0x39D PUSH1 0x20 SHL PUSH3 0x26F2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH3 0x588 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH3 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x367 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x375 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH3 0x3EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH3 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x463 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x446 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x491 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH3 0x4AC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH3 0x4B9 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH3 0x4C7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x50A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x525 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x556 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x555 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x538 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x565 SWAP2 SWAP1 PUSH3 0x569 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x584 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x56A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2D7A DUP1 PUSH3 0x598 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0x5F 0xDA EXP PUSH25 0x1BB33E24D208C5AE9BCE21E52516F21B720F92FEB0467E0 0x2D DUP16 0xCB PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "28236:7278:1:-:0;;;29719:210;;;;;;;;;;13554:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29765:1;13642:5;13634;:13;;;;;;;;;;;;:::i;:::-;;13663:7;13653;:17;;;;;;;;;;;;:::i;:::-;;13688:9;13676;;:21;;;;;;;;;;;;;;;;;;13554:148;;;25380:15;25439:9;25428:20;;25521:95;25646:6;:4;;;:6;;:::i;:::-;25630:24;;;;;;25678:10;;;;;;;;;;;;;;;;;25668:21;;;;;;25714:7;25743:4;25497:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25487:272;;;;;;25468:16;:291;;;;25355:411;27293:10;27284:6;;:19;;;;;;;;;;;;;;;;;;27347:6;;;;;;;;;;;27318:37;;27343:1;27318:37;;;;;;;;;;;;29806:10:::2;29792:11;;:24;;;;;;;;;;;;;;;;;;29107:15;29826:12;:39;;;;29894:28;29909:12;;29107:15;29047:1;29038:11;29355:38;;;;;;29047:1;29038:11;29340:54;29894:14;;;;;;:28;;;;:::i;:::-;29875:16;:47;;;;28236:7278:::0;;13782:75;13819:13;13847:5;13840:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13782:75;:::o;961:130:0:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;1038:46;;961:130;;;;:::o;1097:269::-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;28236:7278:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212205fda0a780001bb33e24d208c5ae9bce21e52516f21b720f92feb0467e02d8fcb64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0x5F 0xDA EXP PUSH25 0x1BB33E24D208C5AE9BCE21E52516F21B720F92FEB0467E0 0x2D DUP16 0xCB PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "28236:7278:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30750:869;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13782:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27586:156;;;:::i;:::-;;34228:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;14830:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;32643:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33695:527;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;33073:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28975:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25202:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14680:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25317:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;34693:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;30412:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;27748:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27368:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;28015:217;;;:::i;:::-;;32495:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28945:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32771:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26648;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;32937:130;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13983:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28459:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;35017:495;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;33172:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;29935:471;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25836:749;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;33536:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;28423:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;30750:869;30837:7;28382:15;;;;;;;;;;;28368:29;;:10;:29;;;28359:40;;;;;;30857:20:::1;30887:26:::0;30916:19:::1;:17;:19::i;:::-;30887:48;;30962:1;30951:7;:12;30946:364;;;30996:6;30985:50;31004:15;31021:12;;30985:50;;;;;;;;;;;;;;;;;;;;;;;;31065:6;31054:31;31073:1;31076:7;:5;:7::i;:::-;31054:31;;;;;;;;;;;;;;;;;;;;;;;;31106:12;;31099:19;;;;;;30946:364;31161:1;31140:18;:22;31135:175;;;31193:53;31226:18;31193:27;31206:12;;31193:7;:11;;:27;;;;:::i;:::-;:31;;:53;;;;:::i;:::-;31178:68;;31135:175;;;31292:7;31277:22;;31135:175;31335:32;31353:12;31335;;:16;;:32;;;;:::i;:::-;31320:12;:47;;;;29519:1;29510:11;31398:10;;31383:12;;:25;31378:83;;;29519:1;29510:11;31440:10;;31425:12;:25;;;;31378:83;31490:30;31506:12;;29107:15;29047:1;29038:11;29355:38;;;;;;29047:1;29038:11;29340:54;31490:14;;:30;;;;:::i;:::-;31471:16;:49;;;;31531:51;31545:18;31565:7;31574:6;31531:12;:51::i;:::-;;31600:12;;31593:19;;;;28409:1;30750:869:::0;;;;:::o;13782:75::-;13819:13;13847:5;13840:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13782:75;:::o;27586:156::-;27514:10;27504:20;;:6;;;;;;;;;;;:20;;;27495:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27702:1:::1;27669:37;;27686:6;;;;;;;;;;;27669:37;;;;;;;;;;;;27733:1;27716:6;;:19;;;;;;;;;;;;;;;;;;27586:156::o:0;34228:222::-;34304:4;34362:5;34321:13;:27;34336:10;34321:27;;;;;;;;;;;;;;;:38;34350:7;34321:38;;;;;;;;;;;;;;;:46;;;;34405:7;34383:38;;34393:10;34383:38;;;34414:5;34383:38;;;;;;;;;;;;;;;;;;34439:4;34432:11;;34228:222;;;;:::o;14830:92::-;14883:7;14905:12;;14898:19;;14830:92;:::o;32643:122::-;32704:4;32728:30;32740:16;;32728:6;:10;;:30;;;;:::i;:::-;32721:37;;32643:122;;;:::o;33695:527::-;33786:4;33840:48;33881:5;33840:13;:21;33855:4;33840:21;;;;;;;;;;;;;;;:35;33863:10;33840:35;;;;;;;;;;;;;;;;:39;;:48;;;;:::i;:::-;33802:13;:21;33817:4;33802:21;;;;;;;;;;;;;;;:35;33825:10;33802:35;;;;;;;;;;;;;;;:86;;;;33918:10;33902:66;;33912:4;33902:66;;;33931:13;:21;33946:4;33931:21;;;;;;;;;;;;;;;:35;33954:10;33931:35;;;;;;;;;;;;;;;;33902:66;;;;;;;;;;;;;;;;;;33979:16;33998:23;34014:5;33998:14;:23::i;:::-;33979:42;;34054:34;34078:8;34054:12;:18;34067:4;34054:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;34031:12;:20;34045:4;34031:20;;;;;;;;;;;;;;;:57;;;;34119:32;34141:8;34119:12;:16;34132:2;34119:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;34098:12;:18;34112:2;34098:18;;;;;;;;;;;;;;;:53;;;;34182:2;34166:27;;34176:4;34166:27;;;34186:5;34166:27;;;;;;;;;;;;;;;;;;34211:4;34204:11;;;33695:527;;;;;:::o;33073:93::-;33112:4;33136:23;33152:5;;33136:14;:23::i;:::-;33129:30;;33073:93;:::o;28975:17::-;;;;:::o;25202:108::-;25244:66;25202:108;;;:::o;14680:75::-;14721:5;14741:9;;;;;;;;;;;14734:16;;14680:75;:::o;25317:31::-;;;;:::o;34693:318::-;34784:4;34841:56;34885:10;34841:13;:27;34856:10;34841:27;;;;;;;;;;;;;;;:38;34870:7;34841:38;;;;;;;;;;;;;;;;:42;;:56;;;;:::i;:::-;34800:13;:27;34815:10;34800:27;;;;;;;;;;;;;;;:38;34829:7;34800:38;;;;;;;;;;;;;;;:97;;;;34934:7;34912:71;;34922:10;34912:71;;;34943:13;:27;34958:10;34943:27;;;;;;;;;;;;;;;:38;34972:7;34943:38;;;;;;;;;;;;;;;;34912:71;;;;;;;;;;;;;;;;;;35000:4;34993:11;;34693:318;;;;:::o;30412:174::-;30478:4;27514:10;27504:20;;:6;;;;;;;;;;;:20;;;27495:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30513:1:::1;30504:5;;:10;30495:21;;;::::0;::::1;;30534:24;30550:6;30534:14;:24::i;:::-;30526:5;:32;;;;30575:4;30568:11;;30412:174:::0;;;:::o;27748:257::-;27514:10;27504:20;;:6;;;;;;;;;;;:20;;;27495:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27871:1:::1;27850:23;;:9;:23;;;;27841:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27956:9;27931:36;;27948:6;;;;;;;;;;;27931:36;;;;;;;;;;;;27989:9;27977;;:21;;;;;;;;;;;;;;;;;;27748:257:::0;:::o;27368:88::-;27417:7;27443:6;;;;;;;;;;;27436:13;;27368:88;:::o;28015:217::-;28098:9;;;;;;;;;;;28084:23;;:10;:23;;;28075:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28186:9;;;;;;;;;;;28161:36;;28178:6;;;;;;;;;;;28161:36;;;;;;;;;;;;28216:9;;;;;;;;;;;28207:6;;:18;;;;;;;;;;;;;;;;;;28015:217::o;32495:142::-;32560:7;32587:43;32612:16;;32587:12;:19;32601:3;32587:19;;;;;;;;;;;;;;;;:23;;:43;;;;:::i;:::-;32580:50;;32495:142;;;:::o;28945:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;32771:118::-;32830:4;32854:28;32864:16;;32854:4;:8;;:28;;;;:::i;:::-;32847:35;;32771:118;;;:::o;26648:::-;26709:7;26735:24;:7;:14;26743:5;26735:14;;;;;;;;;;;;;;;:22;:24::i;:::-;26728:31;;26648:118;;;:::o;32937:130::-;32988:4;33012:48;33030:28;33041:15;;;;;;;;;;;33030:9;:28::i;:::-;33012:12;;:16;;:48;;;;:::i;:::-;33005:55;;32937:130;:::o;13983:79::-;14022:13;14050:7;14043:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13983:79;:::o;28459:26::-;;;;;;;;;;;;;:::o;35017:495::-;35113:4;35129:16;35148:13;:27;35163:10;35148:27;;;;;;;;;;;;;;;:38;35177:7;35148:38;;;;;;;;;;;;;;;;35129:57;;35219:8;35200:15;:27;35196:203;;35284:1;35243:13;:27;35258:10;35243:27;;;;;;;;;;;;;;;:38;35272:7;35243:38;;;;;;;;;;;;;;;:42;;;;35196:203;;;35357:31;35371:15;35357:8;:12;;:31;;;;:::i;:::-;35316:13;:27;35331:10;35316:27;;;;;;;;;;;;;;;:38;35345:7;35316:38;;;;;;;;;;;;;;;:72;;;;35196:203;35435:7;35413:71;;35423:10;35413:71;;;35444:13;:27;35459:10;35444:27;;;;;;;;;;;;;;;:38;35473:7;35444:38;;;;;;;;;;;;;;;;35413:71;;;;;;;;;;;;;;;;;;35501:4;35494:11;;;35017:495;;;;:::o;33172:358::-;33244:4;33260:16;33279:29;33290:16;;33279:5;:9;;:29;;;;:::i;:::-;33260:48;;33347:42;33379:8;33347:12;:26;33361:10;33347:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;33318:12;:26;33332:10;33318:26;;;;;;;;;;;;;;;:71;;;;33420:34;33444:8;33420:12;:18;33434:2;33420:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;33399:12;:18;33413:2;33399:18;;;;;;;;;;;;;;;:55;;;;33491:2;33469:33;;33479:10;33469:33;;;33495:5;33469:33;;;;;;;;;;;;;;;;;;33519:4;33512:11;;;33172:358;;;;:::o;29935:471::-;30002:4;30042:11;;;;;;;;;;;30028:25;;:10;:25;;;30019:36;;;;;;30102:1;30074:30;;:16;:30;;;;30065:41;;;;;;30134:16;30116:15;;:34;;;;;;;;;;;;;;;;;;29107:15;29047:1;29038:11;29355:38;;;;;;29047:1;29038:11;29340:54;30160:12;:31;30174:15;;;;;;;;;;;30160:31;;;;;;;;;;;;;;;:44;;;;30244:15;;;;;;;;;;;30220:55;;30238:3;30220:55;;;30261:12;;30220:55;;;;;;;;;;;;;;;;;;30290:45;30317:16;30290:45;;;;;;;;;;;;;;;;;;;;30376:1;30354:11;;:24;;;;;;;;;;;;;;;;;;30395:4;30388:11;;29935:471;;;:::o;25836:749::-;26072:8;26053:15;:27;;26045:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26120:18;25244:66;26174:15;;26191:5;26198:7;26207:6;26215:24;:7;:14;26223:5;26215:14;;;;;;;;;;;;;;;:22;:24::i;:::-;26241:8;26163:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26153:98;;;;;;26120:131;;26262:13;26312:6;26321:16;;26339:10;26288:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26278:73;;;;;;26262:89;;26362:14;26379:25;26389:5;26396:1;26399;26402;26379:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26362:42;;26440:1;26422:20;;:6;:20;;;;:39;;;;;26456:5;26446:15;;:6;:15;;;26422:39;26414:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26510:26;:7;:14;26518:5;26510:14;;;;;;;;;;;;;;;:24;:26::i;:::-;26546:32;26555:5;26562:7;26571:6;26546:8;:32::i;:::-;25836:749;;;;;;;;;;:::o;33536:153::-;33621:7;33648:13;:23;33663:6;33648:23;;;;;;;;;;;;;;;:34;33673:7;33648:34;;;;;;;;;;;;;;;;33641:41;;33536:153;;;;:::o;28423:30::-;;;;;;;;;;;;;:::o;961:130:0:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;1038:46;;961:130;;;;:::o;714:241::-;772:7;800:1;795;:6;791:45;;;824:1;817:8;;;;791:45;846:9;862:1;858;:5;846:17;;890:1;885;881;:5;;;;;;:10;873:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:1;940:8;;;714:241;;;;;:::o;199:176::-;257:7;276:9;292:1;288;:5;276:17;;316:1;311;:6;;303:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:1;360:8;;;199:176;;;;:::o;31809:680:1:-;31906:4;31923:18;31944:47;31969:20;31944:19;31957:4;31944:7;:11;;:19;;;;:::i;:::-;:23;;:47;;;;:::i;:::-;31923:68;;32002:7;32016:311;;;;;;;;32046:6;32016:311;;;;32074:13;32016:311;;;;32135:20;32016:311;;;;32187:19;:17;:19::i;:::-;32016:311;;;;32235:7;32016:311;;;;32263:7;:5;:7::i;:::-;32016:311;;;;32304:12;32016:311;;;32002:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32363:6;32352:50;32371:15;32388:12;;32352:50;;;;;;;;;;;;;;;;;;;;;;;;32428:6;32417:43;32436:13;32451:7;:5;:7::i;:::-;32417:43;;;;;;;;;;;;;;;;;;;;;;;;32478:4;32471:11;;;31809:680;;;;;:::o;381:134:0:-;439:7;465:43;469:1;472;465:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;458:50;;381:134;;;;:::o;23088:112:1:-;23153:7;23179;:14;;;23172:21;;23088:112;;;:::o;23206:178::-;23376:1;23358:7;:14;;;:19;;;;;;;;;;;23206:178;:::o;34492:195::-;34627:5;34595:13;:20;34609:5;34595:20;;;;;;;;;;;;;;;:29;34616:7;34595:29;;;;;;;;;;;;;;;:37;;;;34664:7;34647:33;;34657:5;34647:33;;;34673:5;34647:33;;;;;;;;;;;;;;;;;;34492:195;;;:::o;1097:269:0:-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;521:187::-;607:7;639:1;634;:6;;642:12;626:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:9;681:1;677;:5;665:17;;700:1;693:8;;;521:187;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2328400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"INDEX()": "1073",
								"PERMIT_TYPEHASH()": "301",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22408",
								"balanceForGons(uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"circulatingSupply()": "infinite",
								"decimals()": "1167",
								"decreaseAllowance(address,uint256)": "infinite",
								"gonsForBalance(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"index()": "infinite",
								"initialize(address)": "68507",
								"initializer()": "1114",
								"manager()": "1101",
								"name()": "infinite",
								"nonces(address)": "1334",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"rebase(uint256,uint256)": "infinite",
								"rebases(uint256)": "7042",
								"renounceManagement()": "24353",
								"setIndex(uint256)": "infinite",
								"stakingContract()": "1157",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_storeRebase(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29719,
									"end": 29929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "5374616B6564204F6C796D707573000000000000000000000000000000000000"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "PUSH",
									"source": 1,
									"value": "734F484D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29765,
									"end": 29766,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 13642,
									"end": 13647,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13639,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13634,
									"end": 13647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13663,
									"end": 13670,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13660,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13653,
									"end": 13670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13688,
									"end": 13697,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13685,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 13676,
									"end": 13685,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 13676,
									"end": 13697,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13554,
									"end": 13702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25380,
									"end": 25395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 25439,
									"end": 25448,
									"name": "CHAINID",
									"source": 1
								},
								{
									"begin": 25428,
									"end": 25448,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 25428,
									"end": 25448,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25521,
									"end": 25616,
									"name": "PUSH",
									"source": 1,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 25646,
									"end": 25652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 25646,
									"end": 25650,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 25646,
									"end": 25650,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25646,
									"end": 25650,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 25646,
									"end": 25652,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25646,
									"end": 25652,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 25646,
									"end": 25652,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 25646,
									"end": 25652,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 25646,
									"end": 25652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 25630,
									"end": 25654,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25630,
									"end": 25654,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 25630,
									"end": 25654,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 25630,
									"end": 25654,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25630,
									"end": 25654,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25630,
									"end": 25654,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "PUSH",
									"source": 1,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25678,
									"end": 25688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25668,
									"end": 25689,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25668,
									"end": 25689,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 25668,
									"end": 25689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 25668,
									"end": 25689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25668,
									"end": 25689,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25668,
									"end": 25689,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 25714,
									"end": 25721,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 25743,
									"end": 25747,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 25497,
									"end": 25758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25487,
									"end": 25759,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25487,
									"end": 25759,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 25487,
									"end": 25759,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 25487,
									"end": 25759,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 25487,
									"end": 25759,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 25487,
									"end": 25759,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 25468,
									"end": 25484,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 25468,
									"end": 25759,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 25468,
									"end": 25759,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 25468,
									"end": 25759,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 25468,
									"end": 25759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25355,
									"end": 25766,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27293,
									"end": 27303,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27290,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 27284,
									"end": 27290,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 27284,
									"end": 27303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27347,
									"end": 27353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27343,
									"end": 27344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 27318,
									"end": 27355,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 29806,
									"end": 29816,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29803,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 29792,
									"end": 29803,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29792,
									"end": 29816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29107,
									"end": 29122,
									"name": "PUSH",
									"source": 1,
									"value": "11C37937E08000"
								},
								{
									"begin": 29826,
									"end": 29838,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 29826,
									"end": 29865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29826,
									"end": 29865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29826,
									"end": 29865,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29826,
									"end": 29865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 29909,
									"end": 29921,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 29909,
									"end": 29921,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 29107,
									"end": 29122,
									"name": "PUSH",
									"source": 1,
									"value": "11C37937E08000"
								},
								{
									"begin": 29047,
									"end": 29048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29038,
									"end": 29049,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 29355,
									"end": 29393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29355,
									"end": 29393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 29355,
									"end": 29393,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 29355,
									"end": 29393,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 29355,
									"end": 29393,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 29355,
									"end": 29393,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29355,
									"end": 29393,
									"name": "MOD",
									"source": 1
								},
								{
									"begin": 29047,
									"end": 29048,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 29038,
									"end": 29049,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 29340,
									"end": 29394,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 29894,
									"end": 29908,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29894,
									"end": 29908,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29908,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551740"
								},
								{
									"begin": 29894,
									"end": 29908,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29908,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 29894,
									"end": 29922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29875,
									"end": 29891,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 29875,
									"end": 29922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 29875,
									"end": 29922,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 29875,
									"end": 29922,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 29875,
									"end": 29922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13782,
									"end": 13857,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 13782,
									"end": 13857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13819,
									"end": 13832,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 13847,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13840,
									"end": 13852,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13782,
									"end": 13857,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13782,
									"end": 13857,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1210,
									"end": 1211,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1210,
									"end": 1215,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1217,
									"end": 1229,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1253,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1291,
									"end": 1292,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "MOD",
									"source": 0
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1280,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1292,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1274,
									"end": 1275,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 28236,
									"end": 35514,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fda0a780001bb33e24d208c5ae9bce21e52516f21b720f92feb0467e02d8fcb64736f6c63430007050033",
									".code": [
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "481C6A75"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "C4D66DE8"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "C4D66DE8"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "D505ACCF"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "EE99205C"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "9CE110D7"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "73C69EB7"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "73C69EB7"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "7965D56D"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "7ECEBE00"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "9358928B"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "481C6A75"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "5A96AC0A"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "2986C0E5"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "3644E515"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "3644E515"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "40A5737F"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "46F68EE9"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "2986C0E5"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "2DF75CB1"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "30ADF81F"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "1BD39674"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "58ECDB4"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "89208D8"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28236,
											"end": 35514,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30837,
											"end": 30844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28382,
											"end": 28397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28368,
											"end": 28397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28368,
											"end": 28397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28368,
											"end": 28378,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 28368,
											"end": 28397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28368,
											"end": 28397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28368,
											"end": 28397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28359,
											"end": 28399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 28359,
											"end": 28399,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28359,
											"end": 28399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28359,
											"end": 28399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28359,
											"end": 28399,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28359,
											"end": 28399,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 28359,
											"end": 28399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30857,
											"end": 30877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30887,
											"end": 30913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30916,
											"end": 30935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 30916,
											"end": 30933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 30916,
											"end": 30935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30916,
											"end": 30935,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 30916,
											"end": 30935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30887,
											"end": 30935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30887,
											"end": 30935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30962,
											"end": 30963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30951,
											"end": 30958,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 30951,
											"end": 30963,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30946,
											"end": 31310,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30946,
											"end": 31310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 30946,
											"end": 31310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30996,
											"end": 31002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "PUSH",
											"source": 1,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 31004,
											"end": 31019,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 31021,
											"end": 31033,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31021,
											"end": 31033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30985,
											"end": 31035,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 31065,
											"end": 31071,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "PUSH",
											"source": 1,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 31073,
											"end": 31074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31076,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 31076,
											"end": 31081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 31076,
											"end": 31083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31076,
											"end": 31083,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 31076,
											"end": 31083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31054,
											"end": 31085,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 31106,
											"end": 31118,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31106,
											"end": 31118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31118,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31099,
											"end": 31118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 31099,
											"end": 31118,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30946,
											"end": 31310,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 30946,
											"end": 31310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31161,
											"end": 31162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31140,
											"end": 31158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31140,
											"end": 31162,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 31226,
											"end": 31244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 31206,
											"end": 31218,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31206,
											"end": 31218,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31200,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 31193,
											"end": 31204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 31193,
											"end": 31220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 31193,
											"end": 31224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 31193,
											"end": 31246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31178,
											"end": 31246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31178,
											"end": 31246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31292,
											"end": 31299,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31277,
											"end": 31299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31277,
											"end": 31299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 31135,
											"end": 31310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 31353,
											"end": 31365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31335,
											"end": 31347,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31335,
											"end": 31347,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31335,
											"end": 31351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 31335,
											"end": 31351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 31335,
											"end": 31367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31320,
											"end": 31332,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31320,
											"end": 31367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31320,
											"end": 31367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31320,
											"end": 31367,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 31320,
											"end": 31367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29519,
											"end": 29520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29510,
											"end": 29521,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 31398,
											"end": 31408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31398,
											"end": 31408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31383,
											"end": 31395,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31383,
											"end": 31395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31383,
											"end": 31408,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 31378,
											"end": 31461,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31378,
											"end": 31461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 31378,
											"end": 31461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29519,
											"end": 29520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29510,
											"end": 29521,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 31440,
											"end": 31450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31440,
											"end": 31450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31425,
											"end": 31437,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31425,
											"end": 31450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31425,
											"end": 31450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31425,
											"end": 31450,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 31425,
											"end": 31450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31378,
											"end": 31461,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 31378,
											"end": 31461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 31506,
											"end": 31518,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31506,
											"end": 31518,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 29107,
											"end": 29122,
											"name": "PUSH",
											"source": 1,
											"value": "11C37937E08000"
										},
										{
											"begin": 29047,
											"end": 29048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29038,
											"end": 29049,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 29047,
											"end": 29048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29038,
											"end": 29049,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 29340,
											"end": 29394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31490,
											"end": 31504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 31490,
											"end": 31504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 31490,
											"end": 31520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31471,
											"end": 31487,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 31471,
											"end": 31520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31471,
											"end": 31520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31471,
											"end": 31520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 31471,
											"end": 31520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31531,
											"end": 31582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 31545,
											"end": 31563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31565,
											"end": 31572,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 31574,
											"end": 31580,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 31531,
											"end": 31543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 31531,
											"end": 31582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31531,
											"end": 31582,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 31531,
											"end": 31582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31531,
											"end": 31582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31600,
											"end": 31612,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 31600,
											"end": 31612,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 31593,
											"end": 31612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31593,
											"end": 31612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31593,
											"end": 31612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31593,
											"end": 31612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28409,
											"end": 28410,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 28409,
											"end": 28410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 31619,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13819,
											"end": 13832,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13847,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27514,
											"end": 27524,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27702,
											"end": 27703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27669,
											"end": 27706,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 27733,
											"end": 27734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27716,
											"end": 27722,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27716,
											"end": 27722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 27716,
											"end": 27735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27586,
											"end": 27742,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34304,
											"end": 34308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34362,
											"end": 34367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34334,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34336,
											"end": 34346,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34321,
											"end": 34348,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34350,
											"end": 34357,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34321,
											"end": 34359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34367,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 34321,
											"end": 34367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34405,
											"end": 34412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34393,
											"end": 34403,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34414,
											"end": 34419,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34383,
											"end": 34421,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 34439,
											"end": 34443,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34432,
											"end": 34443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34228,
											"end": 34450,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14905,
											"end": 14917,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 14905,
											"end": 14917,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14898,
											"end": 14917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14898,
											"end": 14917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 14922,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32704,
											"end": 32708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 32740,
											"end": 32756,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 32740,
											"end": 32756,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32728,
											"end": 32734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32728,
											"end": 32738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 32728,
											"end": 32738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 32728,
											"end": 32758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32721,
											"end": 32758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32721,
											"end": 32758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32643,
											"end": 32765,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33786,
											"end": 33790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 33881,
											"end": 33886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33853,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33855,
											"end": 33859,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33840,
											"end": 33861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33863,
											"end": 33873,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33875,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 33840,
											"end": 33879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33815,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33817,
											"end": 33821,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33802,
											"end": 33823,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33825,
											"end": 33835,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33802,
											"end": 33837,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33888,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 33802,
											"end": 33888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33918,
											"end": 33928,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33912,
											"end": 33916,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 33931,
											"end": 33944,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33946,
											"end": 33950,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33931,
											"end": 33952,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33954,
											"end": 33964,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33931,
											"end": 33966,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33902,
											"end": 33968,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 33979,
											"end": 33995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33998,
											"end": 34021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 34014,
											"end": 34019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33998,
											"end": 34012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 33998,
											"end": 34021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33998,
											"end": 34021,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 33998,
											"end": 34021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33979,
											"end": 34021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33979,
											"end": 34021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 34078,
											"end": 34086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34066,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34067,
											"end": 34071,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34072,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 34054,
											"end": 34076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 34054,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34043,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34045,
											"end": 34049,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34031,
											"end": 34051,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34088,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 34031,
											"end": 34088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 34141,
											"end": 34149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34131,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34132,
											"end": 34134,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34135,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 34119,
											"end": 34139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 34119,
											"end": 34151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34110,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34112,
											"end": 34114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34098,
											"end": 34116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34151,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 34098,
											"end": 34151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34182,
											"end": 34184,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34176,
											"end": 34180,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 34186,
											"end": 34191,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34166,
											"end": 34193,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 34211,
											"end": 34215,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34204,
											"end": 34215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34204,
											"end": 34215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34204,
											"end": 34215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33695,
											"end": 34222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33112,
											"end": 33116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33136,
											"end": 33159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 33152,
											"end": 33157,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 33152,
											"end": 33157,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33136,
											"end": 33150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 33136,
											"end": 33159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33136,
											"end": 33159,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 33136,
											"end": 33159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33129,
											"end": 33159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33129,
											"end": 33159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33073,
											"end": 33166,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28975,
											"end": 28992,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25244,
											"end": 25310,
											"name": "PUSH",
											"source": 1,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14721,
											"end": 14726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 14741,
											"end": 14750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14734,
											"end": 14750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14734,
											"end": 14750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25317,
											"end": 25348,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34784,
											"end": 34788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 34885,
											"end": 34895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34854,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34856,
											"end": 34866,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34841,
											"end": 34868,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34870,
											"end": 34877,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34879,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 34841,
											"end": 34883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 34841,
											"end": 34897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34813,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34815,
											"end": 34825,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34800,
											"end": 34827,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34829,
											"end": 34836,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34800,
											"end": 34838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34897,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 34800,
											"end": 34897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34934,
											"end": 34941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34922,
											"end": 34932,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34943,
											"end": 34956,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34958,
											"end": 34968,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34943,
											"end": 34970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34972,
											"end": 34979,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34943,
											"end": 34981,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34912,
											"end": 34983,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 35000,
											"end": 35004,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34993,
											"end": 35004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34993,
											"end": 35004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34693,
											"end": 35011,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30478,
											"end": 30482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27514,
											"end": 27524,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30513,
											"end": 30514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30504,
											"end": 30509,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 30504,
											"end": 30509,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30504,
											"end": 30514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30495,
											"end": 30516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 30495,
											"end": 30516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30495,
											"end": 30516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30495,
											"end": 30516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30495,
											"end": 30516,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30495,
											"end": 30516,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 30495,
											"end": 30516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30534,
											"end": 30558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 30550,
											"end": 30556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30534,
											"end": 30548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 30534,
											"end": 30558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30534,
											"end": 30558,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 30534,
											"end": 30558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30526,
											"end": 30531,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 30526,
											"end": 30558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30526,
											"end": 30558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30526,
											"end": 30558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 30526,
											"end": 30558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30575,
											"end": 30579,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30568,
											"end": 30579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30568,
											"end": 30579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30412,
											"end": 30586,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27514,
											"end": 27524,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 27495,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27871,
											"end": 27872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27850,
											"end": 27873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 27841,
											"end": 27916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27956,
											"end": 27965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27948,
											"end": 27954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27931,
											"end": 27967,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 27989,
											"end": 27998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27986,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 27977,
											"end": 27986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 27977,
											"end": 27998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27748,
											"end": 28005,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27417,
											"end": 27424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27436,
											"end": 27449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27436,
											"end": 27449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27368,
											"end": 27456,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28098,
											"end": 28107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28094,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28084,
											"end": 28107,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH data",
											"source": 1,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 28075,
											"end": 28146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28186,
											"end": 28195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28178,
											"end": 28184,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28161,
											"end": 28197,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28213,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 28207,
											"end": 28213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28015,
											"end": 28232,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32560,
											"end": 32567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 32612,
											"end": 32628,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 32612,
											"end": 32628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32599,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32601,
											"end": 32604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32606,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 32587,
											"end": 32610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 32587,
											"end": 32630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32580,
											"end": 32630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32580,
											"end": 32630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32495,
											"end": 32637,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28945,
											"end": 28968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32830,
											"end": 32834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 32864,
											"end": 32880,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 32864,
											"end": 32880,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32854,
											"end": 32858,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32854,
											"end": 32862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 32854,
											"end": 32862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 32854,
											"end": 32882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32847,
											"end": 32882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32847,
											"end": 32882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32771,
											"end": 32889,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26709,
											"end": 26716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26735,
											"end": 26759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 26735,
											"end": 26742,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26743,
											"end": 26748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26735,
											"end": 26749,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 26735,
											"end": 26757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 26735,
											"end": 26759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26735,
											"end": 26759,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 26735,
											"end": 26759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26728,
											"end": 26759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26728,
											"end": 26759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26648,
											"end": 26766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32988,
											"end": 32992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 33030,
											"end": 33058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33041,
											"end": 33056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33030,
											"end": 33039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 33030,
											"end": 33058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33030,
											"end": 33058,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 33030,
											"end": 33058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33012,
											"end": 33024,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 33012,
											"end": 33024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33012,
											"end": 33028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 33012,
											"end": 33028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 33012,
											"end": 33060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33005,
											"end": 33060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33005,
											"end": 33060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32937,
											"end": 33067,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14035,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14050,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13983,
											"end": 14062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28459,
											"end": 28485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35113,
											"end": 35117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35129,
											"end": 35145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35161,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35163,
											"end": 35173,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35148,
											"end": 35175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35177,
											"end": 35184,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35148,
											"end": 35186,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 35129,
											"end": 35186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35129,
											"end": 35186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35219,
											"end": 35227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35200,
											"end": 35215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35200,
											"end": 35227,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35284,
											"end": 35285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35243,
											"end": 35256,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35258,
											"end": 35268,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35243,
											"end": 35270,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35272,
											"end": 35279,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35243,
											"end": 35281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35285,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 35243,
											"end": 35285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 35371,
											"end": 35386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35357,
											"end": 35365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 35357,
											"end": 35369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 35357,
											"end": 35388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35329,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35331,
											"end": 35341,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35316,
											"end": 35343,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35345,
											"end": 35352,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35316,
											"end": 35354,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 35316,
											"end": 35388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 35196,
											"end": 35399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35435,
											"end": 35442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35423,
											"end": 35433,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 35444,
											"end": 35457,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35459,
											"end": 35469,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35444,
											"end": 35471,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35473,
											"end": 35480,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35444,
											"end": 35482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35413,
											"end": 35484,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 35501,
											"end": 35505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35494,
											"end": 35505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35494,
											"end": 35505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35494,
											"end": 35505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35017,
											"end": 35512,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33244,
											"end": 33248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33260,
											"end": 33276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 33290,
											"end": 33306,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 33290,
											"end": 33306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33284,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 33279,
											"end": 33288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 33279,
											"end": 33308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33260,
											"end": 33308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33260,
											"end": 33308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 33379,
											"end": 33387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33359,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33361,
											"end": 33371,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33373,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 33347,
											"end": 33377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 33347,
											"end": 33389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33330,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33332,
											"end": 33342,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33318,
											"end": 33344,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33389,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 33318,
											"end": 33389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 33444,
											"end": 33452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33432,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33434,
											"end": 33436,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33438,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 33420,
											"end": 33442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 33420,
											"end": 33454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33411,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33413,
											"end": 33415,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33399,
											"end": 33417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33454,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 33399,
											"end": 33454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33491,
											"end": 33493,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33479,
											"end": 33489,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 33495,
											"end": 33500,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33469,
											"end": 33502,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 33519,
											"end": 33523,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33512,
											"end": 33523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33512,
											"end": 33523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33512,
											"end": 33523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33172,
											"end": 33530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30002,
											"end": 30006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30042,
											"end": 30053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30028,
											"end": 30053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30028,
											"end": 30053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30028,
											"end": 30038,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 30028,
											"end": 30053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30028,
											"end": 30053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30028,
											"end": 30053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30019,
											"end": 30055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 30019,
											"end": 30055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30019,
											"end": 30055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30019,
											"end": 30055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30019,
											"end": 30055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30019,
											"end": 30055,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 30019,
											"end": 30055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30102,
											"end": 30103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30074,
											"end": 30104,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30074,
											"end": 30104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30074,
											"end": 30090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30074,
											"end": 30104,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30074,
											"end": 30104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30074,
											"end": 30104,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30074,
											"end": 30104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 30065,
											"end": 30106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 30065,
											"end": 30106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30065,
											"end": 30106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30065,
											"end": 30106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30065,
											"end": 30106,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30065,
											"end": 30106,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 30065,
											"end": 30106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30134,
											"end": 30150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30131,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 30116,
											"end": 30131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29107,
											"end": 29122,
											"name": "PUSH",
											"source": 1,
											"value": "11C37937E08000"
										},
										{
											"begin": 29047,
											"end": 29048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29038,
											"end": 29049,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29355,
											"end": 29393,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 29047,
											"end": 29048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29038,
											"end": 29049,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 29340,
											"end": 29394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30172,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30174,
											"end": 30189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30160,
											"end": 30191,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30204,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30244,
											"end": 30259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30238,
											"end": 30241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30261,
											"end": 30273,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 30261,
											"end": 30273,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30220,
											"end": 30275,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "PUSH",
											"source": 1,
											"value": "817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1"
										},
										{
											"begin": 30317,
											"end": 30333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30290,
											"end": 30335,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 30376,
											"end": 30377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30354,
											"end": 30365,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 30354,
											"end": 30365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 30354,
											"end": 30378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30395,
											"end": 30399,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 30388,
											"end": 30399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30388,
											"end": 30399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29935,
											"end": 30406,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26072,
											"end": 26080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26053,
											"end": 26068,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 26053,
											"end": 26080,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 26053,
											"end": 26080,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "5065726D69743A206578706972656420646561646C696E650000000000000000"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26045,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26120,
											"end": 26138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25244,
											"end": 25310,
											"name": "PUSH",
											"source": 1,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 26174,
											"end": 26189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26174,
											"end": 26189,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26191,
											"end": 26196,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26198,
											"end": 26205,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26207,
											"end": 26213,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 26215,
											"end": 26222,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26223,
											"end": 26228,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26215,
											"end": 26229,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 26215,
											"end": 26237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 26215,
											"end": 26239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26215,
											"end": 26239,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 26215,
											"end": 26239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26241,
											"end": 26249,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26163,
											"end": 26250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26153,
											"end": 26251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26251,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 26120,
											"end": 26251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26120,
											"end": 26251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26262,
											"end": 26275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26312,
											"end": 26318,
											"name": "PUSH",
											"source": 1,
											"value": "1901"
										},
										{
											"begin": 26321,
											"end": 26337,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 26321,
											"end": 26337,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 26339,
											"end": 26349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "F0"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26288,
											"end": 26350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26278,
											"end": 26351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26278,
											"end": 26351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26278,
											"end": 26351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26278,
											"end": 26351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26278,
											"end": 26351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26278,
											"end": 26351,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 26262,
											"end": 26351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26262,
											"end": 26351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26362,
											"end": 26376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26389,
											"end": 26394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26396,
											"end": 26397,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26399,
											"end": 26400,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26402,
											"end": 26403,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26379,
											"end": 26404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26362,
											"end": 26404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26362,
											"end": 26404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26440,
											"end": 26441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26422,
											"end": 26442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26422,
											"end": 26442,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26422,
											"end": 26442,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26442,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26442,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26461,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 26422,
											"end": 26461,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26456,
											"end": 26461,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26446,
											"end": 26452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26422,
											"end": 26461,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 26422,
											"end": 26461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH data",
											"source": 1,
											"value": "5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 26414,
											"end": 26499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 26510,
											"end": 26517,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26518,
											"end": 26523,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26510,
											"end": 26524,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 26510,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 26510,
											"end": 26536,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26510,
											"end": 26536,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 26510,
											"end": 26536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26546,
											"end": 26578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 26555,
											"end": 26560,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 26562,
											"end": 26569,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 26571,
											"end": 26577,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 26546,
											"end": 26554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 26546,
											"end": 26578,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26546,
											"end": 26578,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 26546,
											"end": 26578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 26585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33621,
											"end": 33628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33648,
											"end": 33661,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33663,
											"end": 33669,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33648,
											"end": 33671,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33673,
											"end": 33680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 33648,
											"end": 33682,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33641,
											"end": 33682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33641,
											"end": 33682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33536,
											"end": 33689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28423,
											"end": 28453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 772,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 795,
											"end": 801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 836,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 858,
											"end": 863,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 846,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 846,
											"end": 863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 881,
											"end": 891,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 873,
											"end": 929,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 288,
											"end": 293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 276,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 276,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 311,
											"end": 312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 317,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 311,
											"end": 317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 303,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31906,
											"end": 31910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31923,
											"end": 31941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 31969,
											"end": 31989,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 31957,
											"end": 31961,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 31944,
											"end": 31951,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 31944,
											"end": 31955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 31944,
											"end": 31963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 31944,
											"end": 31967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 31944,
											"end": 31991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31923,
											"end": 31991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31923,
											"end": 31991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32009,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32046,
											"end": 32052,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32074,
											"end": 32087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32135,
											"end": 32155,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32187,
											"end": 32206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 32187,
											"end": 32204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 32187,
											"end": 32206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32187,
											"end": 32206,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 32187,
											"end": 32206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32235,
											"end": 32242,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32263,
											"end": 32270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 32263,
											"end": 32268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 32263,
											"end": 32270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32263,
											"end": 32270,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 32263,
											"end": 32270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32304,
											"end": 32316,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32016,
											"end": 32327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32002,
											"end": 32328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32363,
											"end": 32369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "PUSH",
											"source": 1,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 32371,
											"end": 32386,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 32388,
											"end": 32400,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 32388,
											"end": 32400,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32352,
											"end": 32402,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 32428,
											"end": 32434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "PUSH",
											"source": 1,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 32436,
											"end": 32449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32451,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 32451,
											"end": 32456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 32451,
											"end": 32458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32451,
											"end": 32458,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 32451,
											"end": 32458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32417,
											"end": 32460,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 32478,
											"end": 32482,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 32471,
											"end": 32482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32471,
											"end": 32482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32471,
											"end": 32482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31809,
											"end": 32489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 465,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23088,
											"end": 23200,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 23088,
											"end": 23200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23153,
											"end": 23160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23179,
											"end": 23186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23179,
											"end": 23193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23179,
											"end": 23193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23172,
											"end": 23193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23172,
											"end": 23193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23088,
											"end": 23200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23088,
											"end": 23200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23088,
											"end": 23200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23088,
											"end": 23200,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23206,
											"end": 23384,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 23206,
											"end": 23384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23376,
											"end": 23377,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23358,
											"end": 23365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23358,
											"end": 23372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23358,
											"end": 23377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23206,
											"end": 23384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23206,
											"end": 23384,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34492,
											"end": 34687,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 34492,
											"end": 34687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34627,
											"end": 34632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34608,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34609,
											"end": 34614,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34595,
											"end": 34615,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34616,
											"end": 34623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34595,
											"end": 34624,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34632,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 34595,
											"end": 34632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34664,
											"end": 34671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34657,
											"end": 34662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34673,
											"end": 34678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34647,
											"end": 34680,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 34492,
											"end": 34687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34492,
											"end": 34687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34492,
											"end": 34687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34492,
											"end": 34687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 640,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 634,
											"end": 640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 642,
											"end": 654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 677,
											"end": 682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 665,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 693,
											"end": 701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
										"5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"INDEX()": "2df75cb1",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"circulatingSupply()": "9358928b",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"gonsForBalance(uint256)": "1bd39674",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"initialize(address)": "c4d66de8",
							"initializer()": "9ce110d7",
							"manager()": "481c6a75",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"rebase(uint256,uint256)": "058ecdb4",
							"rebases(uint256)": "73c69eb7",
							"renounceManagement()": "089208d8",
							"setIndex(uint256)": "40a5737f",
							"stakingContract()": "ee99205c",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"}],\"name\":\"LogStakingContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LogSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingContract_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRebased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberOccured\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_INDEX\",\"type\":\"uint256\"}],\"name\":\"setIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"rebase(uint256,uint256)\":{\"params\":{\"profit_\":\"uint256\"},\"returns\":{\"_0\":\"uint256\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rebase(uint256,uint256)\":{\"notice\":\"increases sOHM supply to increase staking balances relative to profit_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"sOlympus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0x12118ba6045b0e6549f6f4c15d947162724c1954414dca0089f59785f47d9ec3\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://01ca9202b69af8a8c6a5370de43af19d8b8cf25b087a211235ed77d43ce662a9\",\"dweb:/ipfs/QmdcZa89Dw3ex5BNjtMbJQGBqvENydXLJqwgN4NT4QsS3a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 875,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 881,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 883,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 885,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 887,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 889,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1436,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)1358_storage)"
							},
							{
								"astId": 1441,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 1611,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1613,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_newOwner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1756,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "stakingContract",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1758,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "initializer",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1796,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "rebases",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_struct(Rebase)1793_storage)dyn_storage"
							},
							{
								"astId": 1798,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "INDEX",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1829,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1833,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1839,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowedValue",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Rebase)1793_storage)dyn_storage": {
								"base": "t_struct(Rebase)1793_storage",
								"encoding": "dynamic_array",
								"label": "struct sOlympus.Rebase[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1358_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1358_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1358_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1357,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Rebase)1793_storage": {
								"encoding": "inplace",
								"label": "struct sOlympus.Rebase",
								"members": [
									{
										"astId": 1780,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "epoch",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1782,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "rebase",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1784,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedBefore",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1786,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedAfter",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1788,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "amountRebased",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1790,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "index",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1792,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "blockNumberOccured",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rebase(uint256,uint256)": {
								"notice": "increases sOHM supply to increase staking balances relative to profit_"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							339
						]
					},
					"id": 340,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "266:109:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 25,
														"src": "276:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "288:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 13,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "292:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "288:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "276:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 17,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "311:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 18,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "316:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "311:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "319:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "303:46:0"
											},
											{
												"expression": {
													"id": 23,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "367:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 24,
												"nodeType": "Return",
												"src": "360:8:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "212:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "257:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:0"
									},
									"scope": 339,
									"src": "199:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "448:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "469:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 37,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "472:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "475:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 35,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															42,
															69
														],
														"referencedDeclaration": 69,
														"src": "465:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 34,
												"id": 40,
												"nodeType": "Return",
												"src": "458:50:0"
											}
										]
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "394:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "405:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:22:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "439:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:0"
									},
									"scope": 339,
									"src": "381:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "616:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "634:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 55,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "634:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 57,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "642:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "626:29:0"
											},
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 68,
														"src": "665:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 60,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 65,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 63,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "677:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "665:17:0"
											},
											{
												"expression": {
													"id": 66,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "700:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 52,
												"id": 67,
												"nodeType": "Return",
												"src": "693:8:0"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "534:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "545:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "556:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:50:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:0"
									},
									"scope": 339,
									"src": "521:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "781:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 78,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "795:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "795:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "791:45:0",
												"trueBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "803:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "824:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 77,
															"id": 82,
															"nodeType": "Return",
															"src": "817:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													86
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "846:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 85,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 90,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 87,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "858:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 88,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "862:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "858:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "846:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 92,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 93,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "885:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "881:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "890:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "881:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "873:56:0"
											},
											{
												"expression": {
													"id": 100,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 86,
													"src": "947:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 77,
												"id": 101,
												"nodeType": "Return",
												"src": "940:8:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "727:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "738:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:22:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "772:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:0"
									},
									"scope": 339,
									"src": "714:241:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1028:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1049:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 114,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1052:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 112,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															158
														],
														"referencedDeclaration": 158,
														"src": "1045:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "1038:46:0"
											}
										]
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "974:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "985:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:22:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 339,
									"src": "961:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1192:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1210:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 134,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1217:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1202:28:0"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1240:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1252:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1256:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1240:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 145,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1279:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 146,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 138,
																		"src": "1283:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1279:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 148,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "1287:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 149,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1291:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1287:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1279:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 143,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1267:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1267:26:0"
											},
											{
												"expression": {
													"id": 155,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "1358:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 156,
												"nodeType": "Return",
												"src": "1351:8:0"
											}
										]
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1110:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1132:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:50:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:0"
									},
									"scope": 339,
									"src": "1097:269:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1476:265:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "1490:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1494:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 205,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "1697:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1697:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 213,
													"nodeType": "IfStatement",
													"src": "1693:42:0",
													"trueBody": {
														"id": 212,
														"nodeType": "Block",
														"src": "1705:30:0",
														"statements": [
															{
																"expression": {
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 208,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "1719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 211,
																"nodeType": "ExpressionStatement",
																"src": "1719:5:0"
															}
														]
													}
												},
												"id": 214,
												"nodeType": "IfStatement",
												"src": "1486:249:0",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "1497:190:0",
													"statements": [
														{
															"expression": {
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 168,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1511:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 169,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "1515:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1511:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 171,
															"nodeType": "ExpressionStatement",
															"src": "1511:5:0"
														},
														{
															"assignments": [
																173
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 173,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 204,
																	"src": "1530:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 172,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 181,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 176,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "1549:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1552:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 175,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				119,
																				158
																			],
																			"referencedDeclaration": 119,
																			"src": "1544:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1544:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1556:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 174,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1539:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1539:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1530:29:0"
														},
														{
															"body": {
																"id": 202,
																"nodeType": "Block",
																"src": "1587:90:0",
																"statements": [
																	{
																		"expression": {
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 185,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "1605:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 186,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 173,
																				"src": "1609:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1605:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 188,
																		"nodeType": "ExpressionStatement",
																		"src": "1605:5:0"
																	},
																	{
																		"expression": {
																			"id": 200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 189,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 173,
																				"src": "1628:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 193,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 160,
																										"src": "1647:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 194,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 173,
																										"src": "1650:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 192,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										119,
																										158
																									],
																									"referencedDeclaration": 119,
																									"src": "1642:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 195,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1642:11:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 196,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 173,
																								"src": "1655:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 191,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 26,
																							"src": "1637:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 197,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1637:20:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 198,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1659:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 190,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						119,
																						158
																					],
																					"referencedDeclaration": 119,
																					"src": "1632:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1632:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1628:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 201,
																		"nodeType": "ExpressionStatement",
																		"src": "1628:34:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 182,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "1580:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 183,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1580:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 203,
															"nodeType": "WhileStatement",
															"src": "1573:104:0"
														}
													]
												}
											}
										]
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:11:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1468:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:8:0"
									},
									"scope": 339,
									"src": "1419:322:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1862:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 227,
																	"name": "total_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1889:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 228,
																	"name": "percentage_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "1897:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 226,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "1884:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1884:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 225,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															158
														],
														"referencedDeclaration": 119,
														"src": "1879:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 232,
												"nodeType": "Return",
												"src": "1872:46:0"
											}
										]
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1777:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "percentage_",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1793:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 219,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:37:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "percentAmount_",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1837:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:26:0"
									},
									"scope": 339,
									"src": "1750:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2105:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2127:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 247,
																			"name": "total_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "2145:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 248,
																			"name": "percentageToSub_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "2153:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 246,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 103,
																		"src": "2140:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2140:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 245,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	119,
																	158
																],
																"referencedDeclaration": 119,
																"src": "2135:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															42,
															69
														],
														"referencedDeclaration": 42,
														"src": "2122:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 253,
												"nodeType": "Return",
												"src": "2115:66:0"
											}
										]
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substractPercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2022:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "percentageToSub_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2038:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 237,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:42:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "result_",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2087:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:19:0"
									},
									"scope": 339,
									"src": "1992:196:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2297:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 266,
																	"name": "part_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2323:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"id": 265,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "2319:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 269,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2337:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 264,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															158
														],
														"referencedDeclaration": 119,
														"src": "2314:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 271,
												"nodeType": "Return",
												"src": "2307:38:0"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageOfTotal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "part_",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2222:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:33:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "percent_",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2278:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:20:0"
									},
									"scope": 339,
									"src": "2194:158:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2620:119:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 283,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "2692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2692:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 286,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 287,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "2702:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2706:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2702:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 290,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2691:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 292,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 276,
																					"src": "2713:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2717:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2713:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 295,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 278,
																					"src": "2721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2725:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2721:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2713:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2712:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2730:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2712:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2711:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 304,
												"nodeType": "Return",
												"src": "2684:48:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2358:186:0",
										"text": " Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2566:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:22:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2611:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:9:0"
									},
									"scope": 339,
									"src": "2549:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "2844:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 317,
																	"name": "multiplier_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "2873:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 318,
																	"name": "payment_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "2886:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 316,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "2868:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2868:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "sqrrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 314,
												"id": 321,
												"nodeType": "Return",
												"src": "2854:44:0"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quadraticPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "payment_",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2772:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2790:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2835:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:0"
									},
									"scope": 339,
									"src": "2745:160:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "3003:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "multiplier_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3023:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 334,
															"name": "supply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "3036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 332,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "3018:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 331,
												"id": 336,
												"nodeType": "Return",
												"src": "3011:34:0"
											}
										]
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondingCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "supply_",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2949:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:40:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2994:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:9:0"
									},
									"scope": 339,
									"src": "2909:141:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 340,
							"src": "175:2877:0"
						}
					],
					"src": "79:2975:0"
				},
				"id": 0
			},
			"contracts/sOHM.sol": {
				"ast": {
					"absolutePath": "contracts/sOHM.sol",
					"exportedSymbols": {
						"Address": [
							786
						],
						"Counters": [
							1398
						],
						"ERC20": [
							1352
						],
						"ERC20Permit": [
							1590
						],
						"IERC20": [
							861
						],
						"IERC2612Permit": [
							1425
						],
						"IOwnable": [
							1607
						],
						"Ownable": [
							1736
						],
						"SafeMath": [
							339
						],
						"sOlympus": [
							2464
						]
					},
					"id": 2465,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 341,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 342,
							"nodeType": "ImportDirective",
							"scope": 2465,
							"sourceUnit": 340,
							"src": "137:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 343,
								"nodeType": "StructuredDocumentation",
								"src": "173:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 786,
							"linearizedBaseContracts": [
								786
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1397:347:1",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "1594:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"nodeType": "VariableDeclarationStatement",
												"src": "1594:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1681:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1683:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1703:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1691:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1683:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 346,
														"isOffset": false,
														"isSlot": false,
														"src": "1703:7:1",
														"valueSize": 1
													},
													{
														"declaration": 352,
														"isOffset": false,
														"isSlot": false,
														"src": "1683:4:1",
														"valueSize": 1
													}
												],
												"id": 354,
												"nodeType": "InlineAssembly",
												"src": "1672:41:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 355,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1729:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1736:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1729:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 350,
												"id": 358,
												"nodeType": "Return",
												"src": "1722:15:1"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "761:565:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1351:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:17:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:6:1"
									},
									"scope": 786,
									"src": "1331:413:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2732:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 371,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2758:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$786",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$786",
																				"typeString": "library Address"
																			}
																		],
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2750:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 369,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2750:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2750:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2750:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 374,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "2775:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2750:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2783:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2742:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2742:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "2742:73:1"
											},
											{
												"assignments": [
													380,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "2904:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 379,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2904:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 387,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2954:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 381,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "2922:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2922:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 383,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "2945:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2922:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2903:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 389,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2975:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2984:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2967:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2967:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "2967:78:1"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1750:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2680:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2680:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2707:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2679:43:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2732:0:1"
									},
									"scope": 786,
									"src": "2661:391:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "3882:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3910:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "3918:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3924:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 404,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															411,
															431
														],
														"referencedDeclaration": 431,
														"src": "3897:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 403,
												"id": 409,
												"nodeType": "Return",
												"src": "3890:67:1"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "3058:730:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3815:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3831:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3831:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:35:1"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3868:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3868:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:14:1"
									},
									"scope": 786,
									"src": "3793:171:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "4303:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4343:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4351:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4357:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 427,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4360:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 423,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "4320:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4320:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 422,
												"id": 429,
												"nodeType": "Return",
												"src": "4313:60:1"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "3970:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4208:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4208:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4224:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4224:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4243:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4243:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4207:63:1"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4289:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4289:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:14:1"
									},
									"scope": 786,
									"src": "4186:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "4855:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 444,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "4894:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "4902:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 446,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "4908:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4915:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 443,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															451,
															501
														],
														"referencedDeclaration": 501,
														"src": "4872:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 442,
												"id": 449,
												"nodeType": "Return",
												"src": "4865:94:1"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "4386:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "4773:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "4789:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "4808:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4772:50:1"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "4841:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4841:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4840:14:1"
									},
									"scope": 786,
									"src": "4742:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "5685:382:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 468,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5711:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$786",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$786",
																				"typeString": "library Address"
																			}
																		],
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5703:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 466,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5703:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5703:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5703:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "5728:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5703:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5735:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5695:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5695:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "5695:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 478,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "5805:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 477,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "5794:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5794:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5814:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5786:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5786:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "5786:60:1"
											},
											{
												"assignments": [
													484,
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "5917:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5917:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "5931:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 485,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"initialValue": {
													"arguments": [
														{
															"id": 491,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5986:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 487,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "5958:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5958:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 489,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "5978:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5958:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5958:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5916:75:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6026:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 496,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "6035:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 497,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6047:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 494,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "6008:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6008:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 464,
												"id": 499,
												"nodeType": "Return",
												"src": "6001:59:1"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "4972:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5575:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5575:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5591:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5591:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5610:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5610:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5625:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5625:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5574:78:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5671:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5671:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5670:14:1"
									},
									"scope": 786,
									"src": "5544:523:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "6217:814:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 516,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "6246:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 515,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "6235:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6235:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6255:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6227:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6227:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "6227:60:1"
											},
											{
												"assignments": [
													522,
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "6358:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 521,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6358:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "6372:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 523,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6372:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [
														{
															"id": 529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6430:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 525,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "6399:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6399:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 527,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "6419:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6399:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6399:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:78:1"
											},
											{
												"condition": {
													"id": 532,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 522,
													"src": "6449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "6506:519:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 536,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "6590:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6590:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6610:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6590:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 546,
																"nodeType": "Block",
																"src": "6962:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 543,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "6987:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 542,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6980:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6980:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 545,
																		"nodeType": "ExpressionStatement",
																		"src": "6980:20:1"
																	}
																]
															},
															"id": 547,
															"nodeType": "IfStatement",
															"src": "6586:429:1",
															"trueBody": {
																"id": 541,
																"nodeType": "Block",
																"src": "6613:343:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6797:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6819:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6848:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6842:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6842:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6823:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6891:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6895:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6887:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6887:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6908:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6880:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6880:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6880:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 524,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6848:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 524,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6895:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 540,
																		"nodeType": "InlineAssembly",
																		"src": "6788:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "6445:580:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "6458:42:1",
													"statements": [
														{
															"expression": {
																"id": 533,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "6479:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 513,
															"id": 534,
															"nodeType": "Return",
															"src": "6472:17:1"
														}
													]
												}
											}
										]
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6105:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6105:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6121:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6121:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6140:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6158:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6158:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6104:81:1"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "6203:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6203:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6202:14:1"
									},
									"scope": 786,
									"src": "6073:958:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "7306:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 562,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "7342:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "7350:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7356:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 561,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															568,
															603
														],
														"referencedDeclaration": 603,
														"src": "7323:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7323:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 560,
												"id": 566,
												"nodeType": "Return",
												"src": "7316:80:1"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "7035:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "7234:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "7250:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7250:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7233:35:1"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "7292:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7292:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7291:14:1"
									},
									"scope": 786,
									"src": "7206:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "7715:288:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 582,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "7744:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 581,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "7733:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7733:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7753:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7725:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7725:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "7725:67:1"
											},
											{
												"assignments": [
													588,
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "7863:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7863:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "7877:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 589,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7877:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "7922:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 591,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "7904:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7904:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7904:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7862:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "7962:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 598,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "7971:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 599,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "7983:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 596,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "7944:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7944:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 579,
												"id": 601,
												"nodeType": "Return",
												"src": "7937:59:1"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "7409:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "7615:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "7631:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7631:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "7650:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 574,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7650:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7614:63:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "7701:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7701:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7700:14:1"
									},
									"scope": 786,
									"src": "7587:416:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "8279:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "8317:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "8325:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8331:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 613,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															620,
															655
														],
														"referencedDeclaration": 655,
														"src": "8296:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8296:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 612,
												"id": 618,
												"nodeType": "Return",
												"src": "8289:84:1"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "8009:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "8212:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "8228:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8228:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8211:35:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "8265:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8265:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:14:1"
									},
									"scope": 786,
									"src": "8182:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "8691:292:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 634,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "8720:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 633,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "8709:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8709:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8729:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8701:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8701:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "8701:69:1"
											},
											{
												"assignments": [
													640,
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 640,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "8841:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 639,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8841:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "8855:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 641,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"arguments": [
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "8902:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 643,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8882:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8882:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8882:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8840:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "8942:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 650,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8951:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 651,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "8963:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 648,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "8924:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8924:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 631,
												"id": 653,
												"nodeType": "Return",
												"src": "8917:59:1"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "8386:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "8596:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "8612:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8612:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "8631:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 626,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8631:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8595:63:1"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "8677:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:1"
									},
									"scope": 786,
									"src": "8566:417:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "9118:596:1",
										"statements": [
											{
												"condition": {
													"id": 666,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "9132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 682,
													"nodeType": "Block",
													"src": "9189:519:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 670,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "9273:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9273:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9293:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9273:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 680,
																"nodeType": "Block",
																"src": "9645:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 677,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "9670:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 676,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9663:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9663:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 679,
																		"nodeType": "ExpressionStatement",
																		"src": "9663:20:1"
																	}
																]
															},
															"id": 681,
															"nodeType": "IfStatement",
															"src": "9269:429:1",
															"trueBody": {
																"id": 675,
																"nodeType": "Block",
																"src": "9296:343:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "9480:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "9502:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "9531:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "9525:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9525:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "9506:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9574:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "9578:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9570:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9570:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9591:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9563:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9563:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9563:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 659,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9531:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 659,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "9578:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 674,
																		"nodeType": "InlineAssembly",
																		"src": "9471:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "9128:580:1",
												"trueBody": {
													"id": 669,
													"nodeType": "Block",
													"src": "9141:42:1",
													"statements": [
														{
															"expression": {
																"id": 667,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "9162:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 665,
															"id": 668,
															"nodeType": "Return",
															"src": "9155:17:1"
														}
													]
												}
											}
										]
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "9016:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "9030:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 658,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9030:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "9055:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9055:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9015:67:1"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "9104:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9104:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9103:14:1"
									},
									"scope": 786,
									"src": "8989:725:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "9800:407:1",
										"statements": [
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "_bytes",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "9810:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 692,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9810:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 698,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "9843:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9835:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 696,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9835:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9835:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9827:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 694,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9827:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9827:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9810:43:1"
											},
											{
												"assignments": [
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "HEX",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "9863:16:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 702,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9863:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 705,
												"initialValue": {
													"hexValue": "30313233343536373839616263646566",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9882:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
														"typeString": "literal_string \"0123456789abcdef\""
													},
													"value": "0123456789abcdef"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9863:37:1"
											},
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "_addr",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "9910:18:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 706,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9910:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3432",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9941:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															},
															"value": "42"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															}
														],
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9931:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9935:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9910:34:1"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 713,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "9955:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 715,
														"indexExpression": {
															"hexValue": "30",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9961:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9955:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9966:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "9955:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "9955:14:1"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 719,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "9979:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 721,
														"indexExpression": {
															"hexValue": "31",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9979:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9990:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "9979:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9979:14:1"
											},
											{
												"body": {
													"id": 777,
													"nodeType": "Block",
													"src": "10036:133:1",
													"statements": [
														{
															"expression": {
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 735,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10050:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 741,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "32",
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10056:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 737,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "10058:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10060:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10058:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10056:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10050:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 742,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "10065:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 753,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 745,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 693,
																						"src": "10075:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 749,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 748,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 746,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 726,
																							"src": "10082:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 747,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10086:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "10082:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10075:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 750,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10093:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "10075:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10069:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "10069:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10069:26:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10065:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "10050:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "10050:46:1"
														},
														{
															"expression": {
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 756,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 762,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10116:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 758,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "10118:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10120:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10118:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10116:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10110:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 763,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "10125:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 774,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 766,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 693,
																						"src": "10135:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 770,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 769,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 767,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 726,
																							"src": "10142:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 768,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10146:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "10142:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10135:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"hexValue": "30783066",
																					"id": 771,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10152:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0x0f"
																				},
																				"src": "10135:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10129:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 764,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "10129:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10129:28:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10125:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "10110:48:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 776,
															"nodeType": "ExpressionStatement",
															"src": "10110:48:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10023:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3230",
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10027:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "10023:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"initializationExpression": {
													"assignments": [
														726
													],
													"declarations": [
														{
															"constant": false,
															"id": 726,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 778,
															"src": "10008:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 725,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 728,
													"initialValue": {
														"hexValue": "30",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10020:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10008:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10031:3:1",
														"subExpression": {
															"id": 732,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "10031:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 734,
													"nodeType": "ExpressionStatement",
													"src": "10031:3:1"
												},
												"nodeType": "ForStatement",
												"src": "10004:165:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10193:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10186:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 779,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10186:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10186:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 691,
												"id": 783,
												"nodeType": "Return",
												"src": "10179:20:1"
											}
										]
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "9745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9744:18:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "9785:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9785:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9784:15:1"
									},
									"scope": 786,
									"src": "9720:487:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2465,
							"src": "739:9470:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "10232:62:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10317:2:1"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "10343:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:9:1"
									},
									"scope": 861,
									"src": "10297:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "10356:68:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "10446:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10446:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10445:17:1"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "10486:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10486:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10485:9:1"
									},
									"scope": 861,
									"src": "10427:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "10499:197:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10717:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10717:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10736:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10736:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10716:35:1"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10769:6:1"
									},
									"scope": 861,
									"src": "10699:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10780:252:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "11054:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "11069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11053:32:1"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "11109:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11108:9:1"
									},
									"scope": 861,
									"src": "11035:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "11122:616:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "11758:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "11775:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11757:33:1"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "11809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11808:6:1"
									},
									"scope": 861,
									"src": "11741:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "11819:280:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "12124:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12124:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "12140:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "12159:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12159:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12123:51:1"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "12193:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12193:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12192:6:1"
									},
									"scope": 861,
									"src": "12102:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "12203:148:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 851,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "12369:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "12391:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "12411:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12368:57:1"
									},
									"src": "12354:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "12430:142:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 860,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "12590:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12590:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "12613:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12613:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "12638:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12589:63:1"
									},
									"src": "12575:78:1"
								}
							],
							"scope": 2465,
							"src": "10211:2444:1"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 862,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 861,
										"src": "12691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$861",
											"typeString": "contract IERC20"
										}
									},
									"id": 863,
									"nodeType": "InheritanceSpecifier",
									"src": "12691:6:1"
								}
							],
							"contractDependencies": [
								861
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								861
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 866,
									"libraryName": {
										"id": 864,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 339,
										"src": "12711:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$339",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "12705:27:1",
									"typeName": {
										"id": 865,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12724:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 871,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "12773:84:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 867,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "12773:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 869,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12843:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 868,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "12832:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 870,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "12832:25:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 875,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "12889:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 874,
										"keyType": {
											"id": 872,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12889:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 873,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12909:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 881,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "12964:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 880,
										"keyType": {
											"id": 876,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12973:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12964:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 879,
											"keyType": {
												"id": 877,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12993:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12984:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 878,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13004:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 883,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "13062:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 882,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13062:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 885,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "13119:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 884,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "13119:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 887,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "13172:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 886,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "13172:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1352,
									"src": "13227:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 888,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "13227:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "13628:74:1",
										"statements": [
											{
												"expression": {
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "13634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 900,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "13642:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13634:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13634:13:1"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 903,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "13653:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 904,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "13663:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "13653:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "13653:17:1"
											},
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 907,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13676:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 908,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "13688:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "13676:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "13676:21:1"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "13256:295:1",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 912,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13567:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 891,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13567:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13588:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "13611:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 895,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13611:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13566:61:1"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13628:0:1"
									},
									"scope": 1352,
									"src": "13554:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "13834:23:1",
										"statements": [
											{
												"expression": {
													"id": 918,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 885,
													"src": "13847:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 917,
												"id": 919,
												"nodeType": "Return",
												"src": "13840:12:1"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "13706:50:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13795:2:1"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "13819:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13819:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13818:15:1"
									},
									"scope": 1352,
									"src": "13782:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "14037:25:1",
										"statements": [
											{
												"expression": {
													"id": 927,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 887,
													"src": "14050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 926,
												"id": 928,
												"nodeType": "Return",
												"src": "14043:14:1"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "13861:96:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13998:2:1"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "14022:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14022:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14021:15:1"
									},
									"scope": 1352,
									"src": "13983:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "14728:27:1",
										"statements": [
											{
												"expression": {
													"id": 936,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "14741:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 935,
												"id": 937,
												"nodeType": "Return",
												"src": "14734:16:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "14066:588:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14697:2:1"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "14721:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 933,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14721:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14720:7:1"
									},
									"scope": 1352,
									"src": "14680:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "14892:30:1",
										"statements": [
											{
												"expression": {
													"id": 946,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "14905:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 947,
												"nodeType": "Return",
												"src": "14898:19:1"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "14759:45:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 942,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14865:8:1"
									},
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14850:2:1"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "14883:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14883:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14882:9:1"
									},
									"scope": 1352,
									"src": "14830:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "15078:36:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 958,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "15091:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 960,
													"indexExpression": {
														"id": 959,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "15101:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15091:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 957,
												"id": 961,
												"nodeType": "Return",
												"src": "15084:25:1"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "14926:43:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 954,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15051:8:1"
									},
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "15014:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15013:17:1"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "15069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15068:9:1"
									},
									"scope": 1352,
									"src": "14995:119:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										810
									],
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "15458:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 975,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15474:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15474:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 977,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "15486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "15497:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "15464:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15464:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "15464:40:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15517:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 973,
												"id": 982,
												"nodeType": "Return",
												"src": "15510:11:1"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "15118:178:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 970,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15434:8:1"
									},
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "15384:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "15403:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15403:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15383:35:1"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "15452:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15452:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15451:6:1"
									},
									"scope": 1352,
									"src": "15366:160:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										820
									],
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "15707:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 995,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "15724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 997,
														"indexExpression": {
															"id": 996,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "15736:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15724:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 999,
													"indexExpression": {
														"id": 998,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "15743:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15724:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 994,
												"id": 1000,
												"nodeType": "Return",
												"src": "15717:34:1"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "15532:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 991,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15680:8:1"
									},
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "15628:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "15643:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15643:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15627:32:1"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "15698:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15697:9:1"
									},
									"scope": 1352,
									"src": "15609:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "16010:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1014,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16029:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16029:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1016,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "16041:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "16050:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1013,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "16020:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16020:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "16020:37:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16074:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1012,
												"id": 1021,
												"nodeType": "Return",
												"src": "16067:11:1"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "15764:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1009,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15986:8:1"
									},
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "15938:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "15955:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15937:33:1"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "16004:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1010,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16004:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16003:6:1"
									},
									"scope": 1352,
									"src": "15921:164:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "16689:201:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1037,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "16709:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "16717:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "16728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "16699:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16699:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "16699:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "16754:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1044,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16762:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16762:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1053,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "16810:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16818:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1046,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "16774:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1048,
																		"indexExpression": {
																			"id": 1047,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "16786:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16774:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1051,
																	"indexExpression": {
																		"expression": {
																			"id": 1049,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "16794:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "16794:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16774:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 69,
																"src": "16774:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16774:87:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1042,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "16745:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16745:117:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "16745:117:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16879:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1035,
												"id": 1059,
												"nodeType": "Return",
												"src": "16872:11:1"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "16091:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1032,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16665:8:1"
									},
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "16599:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16599:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "16615:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "16634:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16634:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16598:51:1"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "16683:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1033,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16683:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16682:6:1"
									},
									"scope": 1352,
									"src": "16577:313:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "17379:117:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "17398:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17398:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1074,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "17410:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1082,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "17456:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1075,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "17419:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1078,
																		"indexExpression": {
																			"expression": {
																				"id": 1076,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "17431:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "17431:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17419:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1080,
																	"indexExpression": {
																		"id": 1079,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "17443:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17419:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "17419:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17419:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "17389:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17389:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "17389:79:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17485:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1070,
												"id": 1087,
												"nodeType": "Return",
												"src": "17478:11:1"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "16896:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "17312:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17312:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "17329:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17329:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17311:37:1"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "17373:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17373:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17372:6:1"
									},
									"scope": 1352,
									"src": "17285:211:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "18082:163:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "18101:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18101:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1102,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "18113:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1110,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "18159:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18176:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1103,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "18122:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1106,
																		"indexExpression": {
																			"expression": {
																				"id": 1104,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "18134:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "18134:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18122:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1108,
																	"indexExpression": {
																		"id": 1107,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "18146:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18122:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 69,
																"src": "18122:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18122:94:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1099,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "18092:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18092:125:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "18092:125:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18234:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1098,
												"id": 1116,
												"nodeType": "Return",
												"src": "18227:11:1"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "17502:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "18010:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "18027:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18009:42:1"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "18076:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18076:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18075:6:1"
									},
									"scope": 1352,
									"src": "17983:262:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "18776:417:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "18790:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18800:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18800:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18800:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18790:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18812:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18782:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18782:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "18782:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1139,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "18866:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18887:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18879:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1140,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18879:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18879:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18866:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18891:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18858:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18858:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "18858:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "18957:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "18965:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "18976:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "18936:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18936:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "18936:47:1"
											},
											{
												"expression": {
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1154,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "18990:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1156,
														"indexExpression": {
															"id": 1155,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "19000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18990:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1161,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "19032:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19040:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1157,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "19010:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1159,
																"indexExpression": {
																	"id": 1158,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "19020:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19010:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "19010:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19010:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18990:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "18990:91:1"
											},
											{
												"expression": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1166,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "19087:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1168,
														"indexExpression": {
															"id": 1167,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "19097:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19087:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1173,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "19135:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1169,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "19110:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1171,
																"indexExpression": {
																	"id": 1170,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "19120:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19110:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "19110:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19110:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19087:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "19087:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1178,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "19162:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "19170:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "19181:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1177,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "19153:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19153:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "EmitStatement",
												"src": "19148:40:1"
											}
										]
									},
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "18249:437:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "18708:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "18724:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "18743:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18743:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18707:51:1"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18776:0:1"
									},
									"scope": 1352,
									"src": "18689:504:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "19557:326:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1193,
																"name": "account_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "19575:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19595:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19587:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19587:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19587:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19575:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19599:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19567:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19567:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "19567:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1205,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "19673:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1352",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$1352",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19664:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19664:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19664:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "19681:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "19691:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "19643:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19643:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "19643:57:1"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "19710:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1214,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "19742:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1212,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19725:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "19725:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19725:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19710:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "19710:41:1"
											},
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1218,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "19761:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1219,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "19771:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19761:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1225,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "19807:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1221,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "19783:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1223,
																"indexExpression": {
																	"id": 1222,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "19793:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19783:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "19783:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19783:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19761:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "19761:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1232,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "19849:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1352",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$1352",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19840:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1230,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19840:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19840:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "19857:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "19867:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "19831:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19831:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "EmitStatement",
												"src": "19826:50:1"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "19199:260:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "19504:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "ammount_",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "19522:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19503:36:1"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19557:0:1"
									},
									"scope": 1352,
									"src": "19489:394:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "20293:345:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1248,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "20311:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20330:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20322:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1249,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20322:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20322:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20311:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20334:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20303:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20303:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "20303:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1258,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "20402:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20419:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20411:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1259,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20411:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20411:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "20423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "20381:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20381:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "20381:49:1"
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1266,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "20441:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1268,
														"indexExpression": {
															"id": 1267,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "20451:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20441:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1273,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "20485:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20493:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1269,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "20462:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1271,
																"indexExpression": {
																	"id": 1270,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "20472:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20462:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "20462:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20462:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20441:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "20441:89:1"
											},
											{
												"expression": {
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1278,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "20540:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1281,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "20572:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1279,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "20555:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "20555:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20555:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20540:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "20540:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1286,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "20603:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20620:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20612:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1287,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20612:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20612:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "20624:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "20594:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20594:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "EmitStatement",
												"src": "20589:42:1"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "19889:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "20243:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "20260:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20260:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20242:33:1"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20293:0:1"
									},
									"scope": 1352,
									"src": "20228:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "21169:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "21187:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21204:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21196:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1307,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21196:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21196:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21187:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21208:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21179:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21179:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "21179:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1316,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "21265:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21284:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21276:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1317,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21276:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21276:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21265:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21288:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21257:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21257:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "21257:68:1"
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1325,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "21336:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1328,
															"indexExpression": {
																"id": 1326,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "21348:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21336:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1329,
														"indexExpression": {
															"id": 1327,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "21355:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21336:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "21366:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21336:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "21336:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1334,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "21396:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "21403:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "21412:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1333,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "21387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21387:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "EmitStatement",
												"src": "21382:37:1"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "20644:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "21104:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "21119:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21119:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "21136:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21103:48:1"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21169:0:1"
									},
									"scope": 1352,
									"src": "21086:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "22645:3:1",
										"statements": []
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "21975:550:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "22582:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "22597:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "22610:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22610:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22580:47:1"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22645:0:1"
									},
									"scope": 1352,
									"src": "22551:97:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2465,
							"src": "12657:9993:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1398,
							"linearizedBaseContracts": [
								1398
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1355,
									"libraryName": {
										"id": 1353,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 339,
										"src": "22681:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$339",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "22675:27:1",
									"typeName": {
										"id": 1354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22694:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 1358,
									"members": [
										{
											"constant": false,
											"id": 1357,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 1358,
											"src": "23047:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1356,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23047:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "22708:374:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "23162:38:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1365,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "23179:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1357,
													"src": "23179:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1364,
												"id": 1367,
												"nodeType": "Return",
												"src": "23172:21:1"
											}
										]
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "23105:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1359,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1358,
													"src": "23105:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23104:25:1"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "23153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23152:9:1"
									},
									"scope": 1398,
									"src": "23088:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "23259:125:1",
										"statements": [
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1374,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "23358:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1357,
														"src": "23358:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23376:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "23358:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "23358:19:1"
											}
										]
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "23225:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1370,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1358,
													"src": "23225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23224:25:1"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23259:0:1"
									},
									"scope": 1398,
									"src": "23206:178:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "23443:55:1",
										"statements": [
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1386,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "23453:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1357,
														"src": "23453:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23489:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 1389,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "23470:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1357,
																"src": "23470:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "23470:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23470:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23453:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "23453:38:1"
											}
										]
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "23409:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1382,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1358,
													"src": "23409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23408:25:1"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23443:0:1"
									},
									"scope": 1398,
									"src": "23390:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2465,
							"src": "22652:848:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1425,
							"linearizedBaseContracts": [
								1425
							],
							"name": "IERC2612Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "23533:834:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "24397:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24397:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "24420:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24420:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "24445:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "24469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24469:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "24495:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1408,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24495:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "24512:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "24531:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1412,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24531:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24387:159:1"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24555:0:1"
									},
									"scope": 1425,
									"src": "24372:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "24562:302:1",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "24885:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24884:15:1"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "24923:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24923:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24922:9:1"
									},
									"scope": 1425,
									"src": "24869:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2465,
							"src": "23502:1432:1"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1426,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1352,
										"src": "24969:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1352",
											"typeString": "contract ERC20"
										}
									},
									"id": 1427,
									"nodeType": "InheritanceSpecifier",
									"src": "24969:5:1"
								},
								{
									"baseName": {
										"id": 1428,
										"name": "IERC2612Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1425,
										"src": "24976:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612Permit_$1425",
											"typeString": "contract IERC2612Permit"
										}
									},
									"id": 1429,
									"nodeType": "InheritanceSpecifier",
									"src": "24976:14:1"
								}
							],
							"contractDependencies": [
								861,
								1352,
								1425
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1590,
							"linearizedBaseContracts": [
								1590,
								1425,
								1352,
								861
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1432,
									"libraryName": {
										"id": 1430,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1398,
										"src": "25003:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$1398",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "24997:36:1",
									"typeName": {
										"id": 1431,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1358,
										"src": "25016:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1436,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1590,
									"src": "25039:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1358_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1435,
										"keyType": {
											"id": 1433,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25047:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25039:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1358_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 1434,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1358,
											"src": "25058:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$1358_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 1439,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1590,
									"src": "25202:108:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1437,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "25202:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 1438,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "25244:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 1441,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 1590,
									"src": "25317:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1440,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "25317:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "25369:397:1",
										"statements": [
											{
												"assignments": [
													1445
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "25380:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25380:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1446,
												"nodeType": "VariableDeclarationStatement",
												"src": "25380:15:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "25414:44:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25428:20:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "25439:7:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25439:9:1"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "25428:7:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "25428:7:1",
														"valueSize": 1
													}
												],
												"id": 1447,
												"nodeType": "InlineAssembly",
												"src": "25405:53:1"
											},
											{
												"expression": {
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1448,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "25468:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25531:84:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 1452,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "25521:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25521:95:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1458,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 921,
																							"src": "25646:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 1459,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "25646:6:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1457,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "25640:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1456,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "25640:5:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25640:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1455,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "25630:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25630:24:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1465,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25684:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 1464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "25678:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1463,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "25678:5:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25678:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1462,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "25668:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25668:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1468,
																		"name": "chainID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "25714:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1471,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "25743:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Permit_$1590",
																					"typeString": "contract ERC20Permit"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Permit_$1590",
																					"typeString": "contract ERC20Permit"
																				}
																			],
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25735:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1469,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25735:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25735:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1450,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "25497:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "25497:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25497:261:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1449,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "25487:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25487:272:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "25468:291:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "25468:291:1"
											}
										]
									},
									"id": 1478,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25366:2:1"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25369:0:1"
									},
									"scope": 1590,
									"src": "25355:411:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1416
									],
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "26035:550:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1498,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "26053:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "26053:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1500,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "26072:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26053:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5065726d69743a206578706972656420646561646c696e65",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26082:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															},
															"value": "Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															}
														],
														"id": 1497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26045:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "26045:64:1"
											},
											{
												"assignments": [
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "hashStruct",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "26120:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1505,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "26120:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1522,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1510,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "26174:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1511,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "26191:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1512,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "26198:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1513,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "26207:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"baseExpression": {
																				"id": 1514,
																				"name": "_nonces",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "26215:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1358_storage_$",
																					"typeString": "mapping(address => struct Counters.Counter storage ref)"
																				}
																			},
																			"id": 1516,
																			"indexExpression": {
																				"id": 1515,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "26223:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "26215:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$1358_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1369,
																		"src": "26215:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1358_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1358_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26215:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1519,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "26241:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1508,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "26163:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "26163:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26163:87:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1507,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "26153:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26153:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26120:131:1"
											},
											{
												"assignments": [
													1524
												],
												"declarations": [
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "_hash",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "26262:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1523,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "26262:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "307831393031",
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26312:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			},
																			"value": "0x1901"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			}
																		],
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26305:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1528,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "26305:6:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26305:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 1532,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "26321:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1533,
																	"name": "hashStruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "26339:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1526,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "26288:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "26288:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26288:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1525,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "26278:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26278:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26262:89:1"
											},
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "26362:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1537,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26362:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"arguments": [
														{
															"id": 1540,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "26389:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1541,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "26396:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1542,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "26399:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1543,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "26402:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1539,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "26379:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26379:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26362:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1547,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "26422:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26440:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26432:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1548,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26432:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26432:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "26422:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1553,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "26446:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1554,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "26456:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "26446:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "26422:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26463:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															},
															"value": "ZeroSwapPermit: Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "26414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26414:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "26414:85:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1560,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "26510:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1358_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1562,
															"indexExpression": {
																"id": 1561,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "26518:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26510:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1358_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1381,
														"src": "26510:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1358_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1358_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26510:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "26510:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1567,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "26555:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "26562:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "26571:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1566,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "26546:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26546:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "26546:32:1"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "25772:59:1",
										"text": " @dev See {IERC2612Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26026:8:1"
									},
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "25861:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "25884:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "25909:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "25933:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25933:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "25959:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1488,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "25959:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "25976:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "25995:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1492,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25995:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25851:159:1"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26035:0:1"
									},
									"scope": 1590,
									"src": "25836:749:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1424
									],
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "26718:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1582,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "26735:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1358_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1584,
															"indexExpression": {
																"id": 1583,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "26743:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26735:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1358_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1369,
														"src": "26735:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1358_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1358_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26735:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1587,
												"nodeType": "Return",
												"src": "26728:31:1"
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "26591:52:1",
										"text": " @dev See {IERC2612Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26691:8:1"
									},
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "26664:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26663:15:1"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "26709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26709:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26708:9:1"
									},
									"scope": 1590,
									"src": "26648:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2465,
							"src": "24936:1832:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1607,
							"linearizedBaseContracts": [
								1607
							],
							"name": "IOwnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "481c6a75",
									"id": 1595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26809:2:1"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "26835:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26834:9:1"
									},
									"scope": 1607,
									"src": "26793:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "089208d8",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26875:2:1"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26886:0:1"
									},
									"scope": 1607,
									"src": "26848:39:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46f68ee9",
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "26918:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26918:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:21:1"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26946:0:1"
									},
									"scope": 1607,
									"src": "26893:54:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a96ac0a",
									"id": 1606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26976:2:1"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26987:0:1"
									},
									"scope": 1607,
									"src": "26953:35:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2465,
							"src": "26770:220:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1608,
										"name": "IOwnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1607,
										"src": "27012:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwnable_$1607",
											"typeString": "contract IOwnable"
										}
									},
									"id": 1609,
									"nodeType": "InheritanceSpecifier",
									"src": "27012:8:1"
								}
							],
							"contractDependencies": [
								1607
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736,
								1607
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1611,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "27028:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1610,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27028:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1613,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "27057:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1612,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27057:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1619,
									"name": "OwnershipPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "27112:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27112:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "27143:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27111:57:1"
									},
									"src": "27090:79:1"
								},
								{
									"anonymous": false,
									"id": 1625,
									"name": "OwnershipPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "27196:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "27227:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27195:57:1"
									},
									"src": "27174:79:1"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "27274:88:1",
										"statements": [
											{
												"expression": {
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1628,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "27284:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1629,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "27293:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "27293:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "27284:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "27284:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27343:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27335:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1634,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27335:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27335:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1638,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "27347:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1633,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "27318:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27318:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "EmitStatement",
												"src": "27313:42:1"
											}
										]
									},
									"id": 1642,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27271:2:1"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27274:0:1"
									},
									"scope": 1736,
									"src": "27259:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1595
									],
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "27426:30:1",
										"statements": [
											{
												"expression": {
													"id": 1648,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1611,
													"src": "27443:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1647,
												"id": 1649,
												"nodeType": "Return",
												"src": "27436:13:1"
											}
										]
									},
									"functionSelector": "481c6a75",
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1644,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27399:8:1"
									},
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27384:2:1"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "27417:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27417:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27416:9:1"
									},
									"scope": 1736,
									"src": "27368:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "27485:95:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "27504:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1655,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "27514:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "27514:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27504:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27526:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27495:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27495:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "27495:67:1"
											},
											{
												"id": 1661,
												"nodeType": "PlaceholderStatement",
												"src": "27572:1:1"
											}
										]
									},
									"id": 1663,
									"name": "onlyManager",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27482:2:1"
									},
									"src": "27462:118:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1598
									],
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "27654:88:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1670,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "27686:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27702:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27694:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27694:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27694:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1669,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "27669:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27669:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "EmitStatement",
												"src": "27664:42:1"
											},
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1677,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "27716:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27725:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1678,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "27725:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27725:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "27716:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "27716:19:1"
											}
										]
									},
									"functionSelector": "089208d8",
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1667,
											"modifierName": {
												"id": 1666,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1663,
												"src": "27640:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "27640:13:1"
										}
									],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1665,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27631:8:1"
									},
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27613:2:1"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27654:0:1"
									},
									"scope": 1736,
									"src": "27586:156:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1603
									],
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "27831:174:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1694,
																"name": "newOwner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "27850:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27871:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27863:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1695,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27863:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27863:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27850:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27875:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27841:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27841:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "27841:75:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1704,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "27948:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1705,
															"name": "newOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "27956:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1703,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "27931:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27931:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "EmitStatement",
												"src": "27926:41:1"
											},
											{
												"expression": {
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1708,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "27977:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1709,
														"name": "newOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "27989:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27977:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "27977:21:1"
											}
										]
									},
									"functionSelector": "46f68ee9",
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1691,
											"modifierName": {
												"id": 1690,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1663,
												"src": "27817:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "27817:13:1"
										}
									],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1689,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27808:8:1"
									},
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "27773:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27771:21:1"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27831:0:1"
									},
									"scope": 1736,
									"src": "27748:257:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1606
									],
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "28065:167:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1718,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "28084:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "28084:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1720,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "28098:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28084:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28109:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															},
															"value": "Ownable: must be new owner to pull"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															}
														],
														"id": 1717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28075:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "28075:71:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1726,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "28178:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1727,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "28186:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1725,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "28161:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28161:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "EmitStatement",
												"src": "28156:41:1"
											},
											{
												"expression": {
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1730,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "28207:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1731,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "28216:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28207:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "28207:18:1"
											}
										]
									},
									"functionSelector": "5a96ac0a",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1715,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28056:8:1"
									},
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28038:2:1"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28065:0:1"
									},
									"scope": 1736,
									"src": "28015:217:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2465,
							"src": "26992:1242:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1737,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1590,
										"src": "28257:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$1590",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1738,
									"nodeType": "InheritanceSpecifier",
									"src": "28257:11:1"
								},
								{
									"baseName": {
										"id": 1739,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1736,
										"src": "28270:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1736",
											"typeString": "contract Ownable"
										}
									},
									"id": 1740,
									"nodeType": "InheritanceSpecifier",
									"src": "28270:7:1"
								}
							],
							"contractDependencies": [
								861,
								1352,
								1425,
								1590,
								1607,
								1736
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2464,
							"linearizedBaseContracts": [
								2464,
								1736,
								1607,
								1590,
								1425,
								1352,
								861
							],
							"name": "sOlympus",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1743,
									"libraryName": {
										"id": 1741,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 339,
										"src": "28291:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$339",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "28285:27:1",
									"typeName": {
										"id": 1742,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28304:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "28349:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1746,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "28368:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "28368:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1748,
																"name": "stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "28382:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28368:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28359:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28359:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "28359:40:1"
											},
											{
												"id": 1752,
												"nodeType": "PlaceholderStatement",
												"src": "28409:1:1"
											}
										]
									},
									"id": 1754,
									"name": "onlyStakingContract",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28346:2:1"
									},
									"src": "28318:99:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 1756,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "28423:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1755,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28423:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ce110d7",
									"id": 1758,
									"mutability": "mutable",
									"name": "initializer",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "28459:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1757,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28459:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1766,
									"name": "LogSupply",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "28508:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "28531:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28531:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "28550:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28507:64:1"
									},
									"src": "28492:80:1"
								},
								{
									"anonymous": false,
									"id": 1774,
									"name": "LogRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "28594:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebase",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "28617:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "28633:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28633:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28592:56:1"
									},
									"src": "28577:72:1"
								},
								{
									"anonymous": false,
									"id": 1778,
									"name": "LogStakingContractUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "28687:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28687:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28685:27:1"
									},
									"src": "28654:59:1"
								},
								{
									"canonicalName": "sOlympus.Rebase",
									"id": 1793,
									"members": [
										{
											"constant": false,
											"id": 1780,
											"mutability": "mutable",
											"name": "epoch",
											"nodeType": "VariableDeclaration",
											"scope": 1793,
											"src": "28743:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1779,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "28743:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1782,
											"mutability": "mutable",
											"name": "rebase",
											"nodeType": "VariableDeclaration",
											"scope": 1793,
											"src": "28763:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1781,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "28763:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1784,
											"mutability": "mutable",
											"name": "totalStakedBefore",
											"nodeType": "VariableDeclaration",
											"scope": 1793,
											"src": "28799:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1783,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "28799:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1786,
											"mutability": "mutable",
											"name": "totalStakedAfter",
											"nodeType": "VariableDeclaration",
											"scope": 1793,
											"src": "28831:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1785,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "28831:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1788,
											"mutability": "mutable",
											"name": "amountRebased",
											"nodeType": "VariableDeclaration",
											"scope": 1793,
											"src": "28862:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1787,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "28862:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1790,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1793,
											"src": "28890:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1789,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "28890:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1792,
											"mutability": "mutable",
											"name": "blockNumberOccured",
											"nodeType": "VariableDeclaration",
											"scope": 1793,
											"src": "28910:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1791,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "28910:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Rebase",
									"nodeType": "StructDefinition",
									"scope": 2464,
									"src": "28719:221:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73c69eb7",
									"id": 1796,
									"mutability": "mutable",
									"name": "rebases",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "28945:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Rebase_$1793_storage_$dyn_storage",
										"typeString": "struct sOlympus.Rebase[]"
									},
									"typeName": {
										"baseType": {
											"id": 1794,
											"name": "Rebase",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1793,
											"src": "28945:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Rebase_$1793_storage_ptr",
												"typeString": "struct sOlympus.Rebase"
											}
										},
										"id": 1795,
										"nodeType": "ArrayTypeName",
										"src": "28945:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Rebase_$1793_storage_$dyn_storage_ptr",
											"typeString": "struct sOlympus.Rebase[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2df75cb1",
									"id": 1798,
									"mutability": "mutable",
									"name": "INDEX",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "28975:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "28975:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1805,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "28999:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1799,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28999:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "29038:11:1",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29047:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1801,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "29039:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29039:7:1",
													"typeDescriptions": {}
												}
											},
											"id": 1803,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "29039:10:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1812,
									"mutability": "constant",
									"name": "INITIAL_FRAGMENTS_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "29055:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1806,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29055:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"id": 1811,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35303030303030",
											"id": 1807,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "29107:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000000_by_1",
												"typeString": "int_const 5000000"
											},
											"value": "5000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 1810,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1808,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "29117:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 1809,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "29121:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "29117:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "29107:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1820,
									"mutability": "constant",
									"name": "TOTAL_GONS",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "29302:92:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1813,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29302:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1819,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1814,
											"name": "MAX_UINT256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1805,
											"src": "29340:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1815,
														"name": "MAX_UINT256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "29355:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1816,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "29369:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29355:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1818,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "29354:40:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "29340:54:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1827,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "29472:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29472:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1826,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "29510:11:1",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29519:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1823,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "29511:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 1822,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "29511:7:1",
													"typeDescriptions": {}
												}
											},
											"id": 1825,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "29511:10:1",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1829,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "29544:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1828,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29544:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1833,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "29582:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1832,
										"keyType": {
											"id": 1830,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29590:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29582:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1831,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29601:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1839,
									"mutability": "mutable",
									"name": "_allowedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "29637:75:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1838,
										"keyType": {
											"id": 1834,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29647:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29637:53:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1837,
											"keyType": {
												"id": 1835,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29668:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "29658:30:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1836,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29679:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "29782:147:1",
										"statements": [
											{
												"expression": {
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1849,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "29792:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1850,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "29806:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "29806:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "29792:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "29792:24:1"
											},
											{
												"expression": {
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1854,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "29826:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1855,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "29841:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29826:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "29826:39:1"
											},
											{
												"expression": {
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1858,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "29875:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1861,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "29909:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1859,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "29894:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "29894:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29894:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29875:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "29875:47:1"
											}
										]
									},
									"id": 1866,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b6564204f6c796d707573",
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29739:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_160563d5e45bd2d38a59e1d8c9b2de3959abd8b5800722606b884bf092f59dd7",
														"typeString": "literal_string \"Staked Olympus\""
													},
													"value": "Staked Olympus"
												},
												{
													"hexValue": "734f484d",
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29757:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7e7eb95bb3e87e8dfaa679c27e8e813bf0f9c0b9b260e19a0ebfd934d15679b",
														"typeString": "literal_string \"sOHM\""
													},
													"value": "sOHM"
												},
												{
													"hexValue": "39",
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29765:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 1845,
											"modifierName": {
												"id": 1841,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1352,
												"src": "29733:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$1352_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29733:34:1"
										},
										{
											"arguments": [],
											"id": 1847,
											"modifierName": {
												"id": 1846,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1590,
												"src": "29768:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1590_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29768:13:1"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29730:2:1"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29782:0:1"
									},
									"scope": 2464,
									"src": "29719:210:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "30009:397:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1874,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "30028:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "30028:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1876,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1758,
																"src": "30042:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30028:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30019:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30019:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "30019:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1881,
																"name": "stakingContract_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "30074:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30102:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30094:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1882,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30094:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30094:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "30074:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30065:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30065:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "30065:41:1"
											},
											{
												"expression": {
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1889,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "30116:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1890,
														"name": "stakingContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "30134:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30116:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "30116:34:1"
											},
											{
												"expression": {
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1893,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "30160:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1895,
														"indexExpression": {
															"id": 1894,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "30174:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30160:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1896,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "30194:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30160:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "30160:44:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30238:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30230:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1900,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30230:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30230:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1904,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "30244:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1905,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "30261:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1899,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "30220:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30220:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1907,
												"nodeType": "EmitStatement",
												"src": "30215:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1909,
															"name": "stakingContract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "30317:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1908,
														"name": "LogStakingContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "30290:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30290:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1911,
												"nodeType": "EmitStatement",
												"src": "30285:50:1"
											},
											{
												"expression": {
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1912,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "30354:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1913,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "30354:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "30354:24:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30395:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1872,
												"id": 1920,
												"nodeType": "Return",
												"src": "30388:11:1"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "stakingContract_",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "29956:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29956:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29954:28:1"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "30002:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1870,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30002:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30000:8:1"
									},
									"scope": 2464,
									"src": "29935:471:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "30485:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1932,
																"name": "INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "30504:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30513:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30504:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1931,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30495:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30495:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "30495:21:1"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1937,
														"name": "INDEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "30526:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1939,
																"name": "_INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "30550:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1938,
															"name": "gonsForBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "30534:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30534:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30526:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "30526:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30575:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1930,
												"id": 1944,
												"nodeType": "Return",
												"src": "30568:11:1"
											}
										]
									},
									"functionSelector": "40a5737f",
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1927,
											"modifierName": {
												"id": 1926,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1663,
												"src": "30454:11:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30454:13:1"
										}
									],
									"name": "setIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "_INDEX",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "30431:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30431:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30429:15:1"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "30478:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1928,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30478:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30476:8:1"
									},
									"scope": 2464,
									"src": "30412:174:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "30847:772:1",
										"statements": [
											{
												"assignments": [
													1959
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "rebaseAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2038,
														"src": "30857:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30857:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"nodeType": "VariableDeclarationStatement",
												"src": "30857:20:1"
											},
											{
												"assignments": [
													1962
												],
												"declarations": [
													{
														"constant": false,
														"id": 1962,
														"mutability": "mutable",
														"name": "circulatingSupply_",
														"nodeType": "VariableDeclaration",
														"scope": 2038,
														"src": "30887:26:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30887:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1963,
														"name": "circulatingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "30916:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30916:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30887:48:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1966,
														"name": "profit_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "30951:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30962:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30951:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1986,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "31140:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31161:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "31140:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2004,
														"nodeType": "Block",
														"src": "31263:47:1",
														"statements": [
															{
																"expression": {
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2000,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "31277:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2001,
																		"name": "profit_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1949,
																		"src": "31292:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "31277:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2003,
																"nodeType": "ExpressionStatement",
																"src": "31277:22:1"
															}
														]
													},
													"id": 2005,
													"nodeType": "IfStatement",
													"src": "31135:175:1",
													"trueBody": {
														"id": 1999,
														"nodeType": "Block",
														"src": "31164:93:1",
														"statements": [
															{
																"expression": {
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1989,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "31178:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1995,
																				"name": "circulatingSupply_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "31226:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1992,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 883,
																						"src": "31206:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1990,
																						"name": "profit_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1949,
																						"src": "31193:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1991,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "31193:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31193:27:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "31193:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31193:53:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "31178:68:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1998,
																"nodeType": "ExpressionStatement",
																"src": "31178:68:1"
															}
														]
													}
												},
												"id": 2006,
												"nodeType": "IfStatement",
												"src": "30946:364:1",
												"trueBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "30966:163:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1970,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "30996:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1971,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "31004:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "31004:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1973,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "31021:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1969,
																	"name": "LogSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "30985:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30985:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1975,
															"nodeType": "EmitStatement",
															"src": "30980:55:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1977,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "31065:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31073:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1979,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "31076:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31076:7:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1976,
																	"name": "LogRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "31054:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31054:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1982,
															"nodeType": "EmitStatement",
															"src": "31049:36:1"
														},
														{
															"expression": {
																"id": 1983,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "31106:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1984,
															"nodeType": "Return",
															"src": "31099:19:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2007,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "31320:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2010,
																"name": "rebaseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "31353:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2008,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "31335:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "31335:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31335:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31320:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "31320:47:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2014,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "31383:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2015,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "31398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31383:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2022,
												"nodeType": "IfStatement",
												"src": "31378:83:1",
												"trueBody": {
													"id": 2021,
													"nodeType": "Block",
													"src": "31411:50:1",
													"statements": [
														{
															"expression": {
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2017,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "31425:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2018,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "31440:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31425:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2020,
															"nodeType": "ExpressionStatement",
															"src": "31425:25:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2023,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "31471:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2026,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "31506:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2024,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "31490:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "31490:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31490:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31471:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "31471:49:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2031,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "31545:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2032,
															"name": "profit_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "31565:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2033,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "31574:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2030,
														"name": "_storeRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "31531:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,uint256) returns (bool)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31531:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "31531:51:1"
											},
											{
												"expression": {
													"id": 2036,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "31600:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1957,
												"id": 2037,
												"nodeType": "Return",
												"src": "31593:19:1"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "30592:153:1",
										"text": "@notice increases sOHM supply to increase staking balances relative to profit_\n@param profit_ uint256\n@return uint256"
									},
									"functionSelector": "058ecdb4",
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1954,
											"modifierName": {
												"id": 1953,
												"name": "onlyStakingContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1754,
												"src": "30805:19:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30805:21:1"
										}
									],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "30767:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30767:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "30784:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30784:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30765:32:1"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "30837:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30837:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30835:11:1"
									},
									"scope": 2464,
									"src": "30750:869:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "31913:576:1",
										"statements": [
											{
												"assignments": [
													2052
												],
												"declarations": [
													{
														"constant": false,
														"id": 2052,
														"mutability": "mutable",
														"name": "rebasePercent",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "31923:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2051,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "31923:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2060,
												"initialValue": {
													"arguments": [
														{
															"id": 2058,
															"name": "previousCirculating_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "31969:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31957:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 2053,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "31944:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "31944:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31944:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "31944:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31944:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31923:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2065,
																	"name": "epoch_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "32046:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2066,
																	"name": "rebasePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "32074:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2067,
																	"name": "previousCirculating_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "32135:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2068,
																		"name": "circulatingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2150,
																		"src": "32187:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32187:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2070,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "32235:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2071,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2160,
																		"src": "32263:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32263:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2073,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "32304:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "32304:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2064,
																"name": "Rebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "32016:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Rebase_$1793_storage_ptr_$",
																	"typeString": "type(struct sOlympus.Rebase storage pointer)"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"epoch",
																"rebase",
																"totalStakedBefore",
																"totalStakedAfter",
																"amountRebased",
																"index",
																"blockNumberOccured"
															],
															"nodeType": "FunctionCall",
															"src": "32016:311:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Rebase_$1793_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Rebase_$1793_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														],
														"expression": {
															"id": 2061,
															"name": "rebases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "32002:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Rebase_$1793_storage_$dyn_storage",
																"typeString": "struct sOlympus.Rebase storage ref[] storage ref"
															}
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "32002:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Rebase_$1793_storage_$returns$__$",
															"typeString": "function (struct sOlympus.Rebase storage ref)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32002:326:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "32002:326:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2079,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "32363:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2080,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "32371:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "32371:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2082,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "32388:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2078,
														"name": "LogSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "32352:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32352:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2084,
												"nodeType": "EmitStatement",
												"src": "32347:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2086,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "32428:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2087,
															"name": "rebasePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "32436:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2088,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "32451:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32451:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2085,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "32417:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32417:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2091,
												"nodeType": "EmitStatement",
												"src": "32412:48:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32478:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2050,
												"id": 2093,
												"nodeType": "Return",
												"src": "32471:11:1"
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "31625:179:1",
										"text": "@notice emits event with data about rebase\n@param previousCirculating_ uint\n@param profit_ uint\n@param epoch_ uint\n@return bool"
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeRebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "previousCirculating_",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "31832:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "31832:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "31859:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "31859:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "31873:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "31873:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31830:56:1"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "31906:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31906:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31904:8:1"
									},
									"scope": 2464,
									"src": "31809:680:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										963
									],
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "32570:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2107,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "32612:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2103,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "32587:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2105,
															"indexExpression": {
																"id": 2104,
																"name": "who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "32601:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32587:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "32587:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32587:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2102,
												"id": 2109,
												"nodeType": "Return",
												"src": "32580:50:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2099,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32541:8:1"
									},
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "32515:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32515:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32513:15:1"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "32560:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32558:11:1"
									},
									"scope": 2464,
									"src": "32495:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "32711:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2120,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "32740:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "32728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "32728:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32728:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2122,
												"nodeType": "Return",
												"src": "32721:37:1"
											}
										]
									},
									"functionSelector": "1bd39674",
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "32668:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32666:15:1"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "32704:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32704:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32702:8:1"
									},
									"scope": 2464,
									"src": "32643:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "32837:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2133,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "32864:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2131,
															"name": "gons",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "32854:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "32854:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32854:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2135,
												"nodeType": "Return",
												"src": "32847:35:1"
											}
										]
									},
									"functionSelector": "7965d56d",
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "32796:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32796:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32794:13:1"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "32830:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32830:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32828:8:1"
									},
									"scope": 2464,
									"src": "32771:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "32995:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2145,
																	"name": "stakingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "33041:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2144,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2111
																],
																"referencedDeclaration": 2111,
																"src": "33030:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33030:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2142,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "33012:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "33012:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33012:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2148,
												"nodeType": "Return",
												"src": "33005:55:1"
											}
										]
									},
									"functionSelector": "9358928b",
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32963:2:1"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "32988:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "32988:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32986:8:1"
									},
									"scope": 2464,
									"src": "32937:130:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "33119:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2156,
															"name": "INDEX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "33152:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2155,
														"name": "balanceForGons",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "33136:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33136:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2158,
												"nodeType": "Return",
												"src": "33129:30:1"
											}
										]
									},
									"functionSelector": "2986c0e5",
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33087:2:1"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "33112:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "33112:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33110:8:1"
									},
									"scope": 2464,
									"src": "33073:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "33250:280:1",
										"statements": [
											{
												"assignments": [
													2171
												],
												"declarations": [
													{
														"constant": false,
														"id": 2171,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 2210,
														"src": "33260:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33260:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2176,
												"initialValue": {
													"arguments": [
														{
															"id": 2174,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "33290:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2172,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "33279:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "33279:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33279:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33260:48:1"
											},
											{
												"expression": {
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2177,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "33318:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2180,
														"indexExpression": {
															"expression": {
																"id": 2178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "33332:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33332:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33318:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2186,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "33379:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2181,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "33347:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2184,
																"indexExpression": {
																	"expression": {
																		"id": 2182,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "33361:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "33361:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33347:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "33347:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33347:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33318:71:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2189,
												"nodeType": "ExpressionStatement",
												"src": "33318:71:1"
											},
											{
												"expression": {
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2190,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "33399:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2192,
														"indexExpression": {
															"id": 2191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "33413:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33399:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2197,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "33444:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2193,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "33420:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2195,
																"indexExpression": {
																	"id": 2194,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "33434:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33420:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "33420:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33420:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33399:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "33399:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2202,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "33479:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33479:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2204,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "33491:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2205,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "33495:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2201,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "33469:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33469:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2207,
												"nodeType": "EmitStatement",
												"src": "33464:38:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33519:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2169,
												"id": 2209,
												"nodeType": "Return",
												"src": "33512:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2166,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33226:8:1"
									},
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "33191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33191:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "33203:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33189:29:1"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "33244:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33244:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33243:6:1"
									},
									"scope": 2464,
									"src": "33172:358:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1002
									],
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "33631:58:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2221,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "33648:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2223,
														"indexExpression": {
															"id": 2222,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "33663:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33648:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2225,
													"indexExpression": {
														"id": 2224,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "33673:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33648:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2220,
												"id": 2226,
												"nodeType": "Return",
												"src": "33641:41:1"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33602:8:1"
									},
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "33556:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33556:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "33572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33554:35:1"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "33621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33619:11:1"
									},
									"scope": 2464,
									"src": "33536:153:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1061
									],
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "33793:429:1",
										"statements": [
											{
												"expression": {
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2240,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "33802:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2244,
															"indexExpression": {
																"id": 2241,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "33817:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33802:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2245,
														"indexExpression": {
															"expression": {
																"id": 2242,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "33825:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33825:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33802:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2253,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "33881:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2246,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "33840:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2248,
																	"indexExpression": {
																		"id": 2247,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2230,
																		"src": "33855:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33840:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2251,
																"indexExpression": {
																	"expression": {
																		"id": 2249,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "33863:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "33863:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33840:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "33840:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33840:48:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33802:86:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "33802:86:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2258,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "33912:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2259,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "33918:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33918:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2261,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "33931:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2263,
																"indexExpression": {
																	"id": 2262,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2230,
																	"src": "33946:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33931:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2266,
															"indexExpression": {
																"expression": {
																	"id": 2264,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "33954:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33954:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33931:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2257,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "33902:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33902:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2268,
												"nodeType": "EmitStatement",
												"src": "33897:71:1"
											},
											{
												"assignments": [
													2270
												],
												"declarations": [
													{
														"constant": false,
														"id": 2270,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 2305,
														"src": "33979:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33979:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2274,
												"initialValue": {
													"arguments": [
														{
															"id": 2272,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "34014:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2271,
														"name": "gonsForBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "33998:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33998:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33979:42:1"
											},
											{
												"expression": {
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2275,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "34031:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2277,
														"indexExpression": {
															"id": 2276,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "34045:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34031:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2282,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "34078:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2278,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "34054:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2280,
																"indexExpression": {
																	"id": 2279,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2230,
																	"src": "34067:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34054:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 42,
															"src": "34054:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34054:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34031:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "34031:57:1"
											},
											{
												"expression": {
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2286,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "34098:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2288,
														"indexExpression": {
															"id": 2287,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "34112:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34098:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2293,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "34141:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2289,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "34119:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2291,
																"indexExpression": {
																	"id": 2290,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "34132:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34119:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "34119:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34119:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34098:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "34098:53:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "34176:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2299,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "34182:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "34186:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2297,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "34166:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34166:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "EmitStatement",
												"src": "34161:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34211:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2239,
												"id": 2304,
												"nodeType": "Return",
												"src": "34204:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2236,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33767:8:1"
									},
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "33718:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "33732:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "33744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33716:43:1"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "33786:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33786:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33784:8:1"
									},
									"scope": 2464,
									"src": "33695:527:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1023
									],
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "34310:140:1",
										"statements": [
											{
												"expression": {
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2316,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "34321:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2320,
															"indexExpression": {
																"expression": {
																	"id": 2317,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "34336:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34336:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34321:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2321,
														"indexExpression": {
															"id": 2319,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "34350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34321:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2322,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "34362:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34321:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "34321:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2326,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "34393:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34393:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2328,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "34405:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2329,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "34414:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2325,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "34383:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34383:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2331,
												"nodeType": "EmitStatement",
												"src": "34378:43:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34439:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2315,
												"id": 2333,
												"nodeType": "Return",
												"src": "34432:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2312,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34286:8:1"
									},
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "34246:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34246:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "34263:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34244:34:1"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "34304:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34304:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34303:6:1"
									},
									"scope": 2464,
									"src": "34228:222:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "34585:102:1",
										"statements": [
											{
												"expression": {
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2345,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "34595:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2348,
															"indexExpression": {
																"id": 2346,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2337,
																"src": "34609:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34595:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2349,
														"indexExpression": {
															"id": 2347,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "34616:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34595:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2350,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "34627:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34595:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2352,
												"nodeType": "ExpressionStatement",
												"src": "34595:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2354,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "34657:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2355,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "34664:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2356,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "34673:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2353,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "34647:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34647:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2358,
												"nodeType": "EmitStatement",
												"src": "34642:38:1"
											}
										]
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34568:8:1"
									},
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "34511:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "34526:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "34543:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34509:49:1"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34585:0:1"
									},
									"scope": 2464,
									"src": "34492:195:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1089
									],
									"body": {
										"id": 2401,
										"nodeType": "Block",
										"src": "34790:221:1",
										"statements": [
											{
												"expression": {
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2370,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "34800:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2374,
															"indexExpression": {
																"expression": {
																	"id": 2371,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "34815:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34815:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34800:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2375,
														"indexExpression": {
															"id": 2373,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "34829:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34800:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2383,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "34885:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2376,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "34841:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2379,
																	"indexExpression": {
																		"expression": {
																			"id": 2377,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "34856:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "34856:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34841:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2381,
																"indexExpression": {
																	"id": 2380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "34870:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34841:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "34841:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34841:56:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34800:97:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "34800:97:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "34922:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34922:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2390,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "34934:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2391,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "34943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2394,
																"indexExpression": {
																	"expression": {
																		"id": 2392,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "34958:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "34958:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34943:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2396,
															"indexExpression": {
																"id": 2395,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "34972:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34943:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2387,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "34912:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34912:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2398,
												"nodeType": "EmitStatement",
												"src": "34907:76:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35000:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2369,
												"id": 2400,
												"nodeType": "Return",
												"src": "34993:11:1"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 2402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34766:8:1"
									},
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "34721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34721:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "34738:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34719:39:1"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "34784:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34784:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34783:6:1"
									},
									"scope": 2464,
									"src": "34693:318:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1118
									],
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "35119:393:1",
										"statements": [
											{
												"assignments": [
													2413
												],
												"declarations": [
													{
														"constant": false,
														"id": 2413,
														"mutability": "mutable",
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 2462,
														"src": "35129:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35129:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2420,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2414,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "35148:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2417,
														"indexExpression": {
															"expression": {
																"id": 2415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "35163:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35163:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35148:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2419,
													"indexExpression": {
														"id": 2418,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "35177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35148:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35129:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2421,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2406,
														"src": "35200:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2422,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "35219:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35200:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2446,
													"nodeType": "Block",
													"src": "35302:97:1",
													"statements": [
														{
															"expression": {
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2434,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "35316:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2438,
																		"indexExpression": {
																			"expression": {
																				"id": 2435,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "35331:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "35331:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "35316:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2439,
																	"indexExpression": {
																		"id": 2437,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2404,
																		"src": "35345:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "35316:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2442,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2406,
																			"src": "35371:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2440,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "35357:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 42,
																		"src": "35357:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35357:31:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35316:72:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2445,
															"nodeType": "ExpressionStatement",
															"src": "35316:72:1"
														}
													]
												},
												"id": 2447,
												"nodeType": "IfStatement",
												"src": "35196:203:1",
												"trueBody": {
													"id": 2433,
													"nodeType": "Block",
													"src": "35229:67:1",
													"statements": [
														{
															"expression": {
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2424,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1839,
																			"src": "35243:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2428,
																		"indexExpression": {
																			"expression": {
																				"id": 2425,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "35258:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "35258:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "35243:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2429,
																	"indexExpression": {
																		"id": 2427,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2404,
																		"src": "35272:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "35243:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35284:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "35243:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2432,
															"nodeType": "ExpressionStatement",
															"src": "35243:42:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2449,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "35423:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35423:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2451,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "35435:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2452,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "35444:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2455,
																"indexExpression": {
																	"expression": {
																		"id": 2453,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "35459:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "35459:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "35444:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2457,
															"indexExpression": {
																"id": 2456,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "35473:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "35444:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2448,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "35413:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35413:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2459,
												"nodeType": "EmitStatement",
												"src": "35408:76:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35501:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2411,
												"id": 2461,
												"nodeType": "Return",
												"src": "35494:11:1"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2408,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35095:8:1"
									},
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "35045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "35062:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35062:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35043:44:1"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "35113:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35113:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35112:6:1"
									},
									"scope": 2464,
									"src": "35017:495:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2465,
							"src": "28236:7278:1"
						}
					],
					"src": "113:35401:1"
				},
				"id": 1
			}
		}
	}
}