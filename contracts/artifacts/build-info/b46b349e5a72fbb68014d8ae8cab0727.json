{
	"id": "b46b349e5a72fbb68014d8ae8cab0727",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.5",
	"solcLongVersion": "0.7.5+commit.eb77ed08",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sOHM.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2021-06-12\n*/\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\nimport \"./libraries/SafeMath.sol\";\nimport \"./libraries/Address.sol\";\nimport \"./interfaces/IERC20.sol\";\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\n\n\nabstract contract ERC20\n  is \n    IERC20\n  {\n\n  using SafeMath for uint256;\n\n  // TODO comment actual hash value.\n  bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\n    \n  // Present in ERC777\n  mapping (address => uint256) internal _balances;\n\n  // Present in ERC777\n  mapping (address => mapping (address => uint256)) internal _allowances;\n\n  // Present in ERC777\n  uint256 internal _totalSupply;\n\n  // Present in ERC777\n  string internal _name;\n    \n  // Present in ERC777\n  string internal _symbol;\n    \n  // Present in ERC777\n  uint8 internal _decimals;\n\n  /**\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n   * a default value of 18.\n   *\n   * To select a different value for {decimals}, use {_setupDecimals}.\n   *\n   * All three of these values are immutable: they can only be set once during\n   * construction.\n   */\n  constructor (string memory name_, string memory symbol_, uint8 decimals_) {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n  }\n\n  /**\n   * @dev Returns the name of the token.\n   */\n  // Present in ERC777\n  function name() public view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev Returns the symbol of the token, usually a shorter version of the\n   * name.\n   */\n  // Present in ERC777\n  function symbol() public view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n   * @dev Returns the number of decimals used to get its user representation.\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n   *\n   * Tokens usually opt for a value of 18, imitating the relationship between\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n   * called.\n   *\n   * NOTE: This information is only used for _display_ purposes: it in\n   * no way affects any of the arithmetic of the contract, including\n   * {IERC20-balanceOf} and {IERC20-transfer}.\n   */\n  // Present in ERC777\n  function decimals() public view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev See {IERC20-totalSupply}.\n   */\n  // Present in ERC777\n  function totalSupply() public view override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {IERC20-balanceOf}.\n   */\n  // Present in ERC777\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {IERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  // Overrideen in ERC777\n  // Confirm that this behavior changes \n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _transfer(msg.sender, recipient, amount);\n    return true;\n  }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    // Present in ERC777\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    // Present in ERC777\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    _beforeTokenTransfer(sender, recipient, amount);\n\n    _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _mint(address account_, uint256 ammount_) internal virtual {\n        require(account_ != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address( this ), account_, ammount_);\n        _totalSupply = _totalSupply.add(ammount_);\n        _balances[account_] = _balances[account_].add(ammount_);\n        emit Transfer(address( this ), account_, ammount_);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    // Present in ERC777\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    // Present in ERC777\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    // Considering deprication to reduce size of bytecode as changing _decimals to internal acheived the same functionality.\n    // function _setupDecimals(uint8 decimals_) internal {\n    //     _decimals = decimals_;\n    // }\n\n  /**\n   * @dev Hook that is called before any transfer of tokens. This includes\n   * minting and burning.\n   *\n   * Calling conditions:\n   *\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n   * will be to transferred to `to`.\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n   * - `from` and `to` are never both zero.\n   *\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n   */\n  // Present in ERC777\n  function _beforeTokenTransfer( address from_, address to_, uint256 amount_ ) internal virtual { }\n}\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n\ninterface IERC2612Permit {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n}\n\nabstract contract ERC20Permit is ERC20, IERC2612Permit {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    bytes32 public DOMAIN_SEPARATOR;\n\n    constructor() {\n\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\n            keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n            keccak256(bytes(name())),\n            keccak256(bytes(\"1\")), // Version\n            chainID,\n            address(this)\n        ));\n    }\n\n    /**\n     * @dev See {IERC2612Permit-permit}.\n     *\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"Permit: expired deadline\");\n\n        bytes32 hashStruct =\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline));\n\n        bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct));\n\n        address signer = ecrecover(_hash, v, r, s);\n        require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\");\n\n        _nonces[owner].increment();\n        _approve(owner, spender, amount);\n    }\n\n    /**\n     * @dev See {IERC2612Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n}\n\ninterface IOwnable {\n  function manager() external view returns (address);\n\n  function renounceManagement() external;\n  \n  function pushManagement( address newOwner_ ) external;\n  \n  function pullManagement() external;\n}\n\ncontract Ownable is IOwnable {\n\n    address internal _owner;\n    address internal _newOwner;\n\n    event OwnershipPushed(address indexed previousOwner, address indexed newOwner);\n    event OwnershipPulled(address indexed previousOwner, address indexed newOwner);\n\n    constructor () {\n        _owner = msg.sender;\n        emit OwnershipPushed( address(0), _owner );\n    }\n\n    function manager() public view override returns (address) {\n        return _owner;\n    }\n\n    modifier onlyManager() {\n        require( _owner == msg.sender, \"Ownable: caller is not the owner\" );\n        _;\n    }\n\n    function renounceManagement() public virtual override onlyManager() {\n        emit OwnershipPushed( _owner, address(0) );\n        _owner = address(0);\n    }\n\n    function pushManagement( address newOwner_ ) public virtual override onlyManager() {\n        require( newOwner_ != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipPushed( _owner, newOwner_ );\n        _newOwner = newOwner_;\n    }\n    \n    function pullManagement() public virtual override {\n        require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n        emit OwnershipPulled( _owner, _newOwner );\n        _owner = _newOwner;\n    }\n}\n\ncontract sOlympus is ERC20Permit, Ownable {\n\n    using SafeMath for uint256;\n\n    modifier onlyStakingContract() {\n        require( msg.sender == stakingContract );\n        _;\n    }\n\n    address public stakingContract;\n    address public initializer;\n\n    event LogSupply(uint256 indexed epoch, uint256 timestamp, uint256 totalSupply );\n    event LogRebase( uint256 indexed epoch, uint256 rebase, uint256 index );\n    event LogStakingContractUpdated( address stakingContract );\n\n    struct Rebase {\n        uint epoch;\n        uint rebase; // 18 decimals\n        uint totalStakedBefore;\n        uint totalStakedAfter;\n        uint amountRebased;\n        uint index;\n        uint blockNumberOccured;\n    }\n    Rebase[] public rebases;\n\n    uint public INDEX;\n\n    uint256 private constant MAX_UINT256 = ~uint256(0);\n    uint256 private constant INITIAL_FRAGMENTS_SUPPLY = 5000000 * 10**9;\n\n    // TOTAL_GONS is a multiple of INITIAL_FRAGMENTS_SUPPLY so that _gonsPerFragment is an integer.\n    // Use the highest value that fits in a uint256 for max granularity.\n    uint256 private constant TOTAL_GONS = MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY);\n\n    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_GONS + 1) - 1) / 2\n    uint256 private constant MAX_SUPPLY = ~uint128(0);  // (2^128) - 1\n\n    uint256 private _gonsPerFragment;\n    mapping(address => uint256) private _gonBalances;\n\n    mapping ( address => mapping ( address => uint256 ) ) private _allowedValue;\n\n    constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {\n        initializer = msg.sender;\n        _totalSupply = INITIAL_FRAGMENTS_SUPPLY;\n        _gonsPerFragment = TOTAL_GONS.div(_totalSupply);\n    }\n\n    function initialize( address stakingContract_ ) external returns ( bool ) {\n        require( msg.sender == initializer );\n        require( stakingContract_ != address(0) );\n        stakingContract = stakingContract_;\n        _gonBalances[ stakingContract ] = TOTAL_GONS;\n\n        emit Transfer( address(0x0), stakingContract, _totalSupply );\n        emit LogStakingContractUpdated( stakingContract_ );\n        \n        initializer = address(0);\n        return true;\n    }\n\n    function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {\n        require( INDEX == 0 );\n        INDEX = gonsForBalance( _INDEX );\n        return true;\n    }\n\n    /**\n        @notice increases sOHM supply to increase staking balances relative to profit_\n        @param profit_ uint256\n        @return uint256\n     */\n    function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {\n        uint256 rebaseAmount;\n        uint256 circulatingSupply_ = circulatingSupply();\n\n        if ( profit_ == 0 ) {\n            emit LogSupply( epoch_, block.timestamp, _totalSupply );\n            emit LogRebase( epoch_, 0, index() );\n            return _totalSupply;\n        } else if ( circulatingSupply_ > 0 ){\n            rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ );\n        } else {\n            rebaseAmount = profit_;\n        }\n\n        _totalSupply = _totalSupply.add( rebaseAmount );\n\n        if ( _totalSupply > MAX_SUPPLY ) {\n            _totalSupply = MAX_SUPPLY;\n        }\n\n        _gonsPerFragment = TOTAL_GONS.div( _totalSupply );\n\n        _storeRebase( circulatingSupply_, profit_, epoch_ );\n\n        return _totalSupply;\n    }\n\n    /**\n        @notice emits event with data about rebase\n        @param previousCirculating_ uint\n        @param profit_ uint\n        @param epoch_ uint\n        @return bool\n     */\n    function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {\n        uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ );\n\n        rebases.push( Rebase ( {\n            epoch: epoch_,\n            rebase: rebasePercent, // 18 decimals\n            totalStakedBefore: previousCirculating_,\n            totalStakedAfter: circulatingSupply(),\n            amountRebased: profit_,\n            index: index(),\n            blockNumberOccured: block.number\n        }));\n        \n        emit LogSupply( epoch_, block.timestamp, _totalSupply );\n        emit LogRebase( epoch_, rebasePercent, index() );\n\n        return true;\n    }\n\n    function balanceOf( address who ) public view override returns ( uint256 ) {\n        return _gonBalances[ who ].div( _gonsPerFragment );\n    }\n\n    function gonsForBalance( uint amount ) public view returns ( uint ) {\n        return amount.mul( _gonsPerFragment );\n    }\n\n    function balanceForGons( uint gons ) public view returns ( uint ) {\n        return gons.div( _gonsPerFragment );\n    }\n\n    // Staking contract holds excess sOHM\n    function circulatingSupply() public view returns ( uint ) {\n        return _totalSupply.sub( balanceOf( stakingContract ) );\n    }\n\n    function index() public view returns ( uint ) {\n        return balanceForGons( INDEX );\n    }\n\n    function transfer( address to, uint256 value ) public override returns (bool) {\n        uint256 gonValue = value.mul( _gonsPerFragment );\n        _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[ to ].add( gonValue );\n        emit Transfer( msg.sender, to, value );\n        return true;\n    }\n\n    function allowance( address owner_, address spender ) public view override returns ( uint256 ) {\n        return _allowedValue[ owner_ ][ spender ];\n    }\n\n    function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {\n       _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value );\n       emit Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] );\n\n        uint256 gonValue = gonsForBalance( value );\n        _gonBalances[ from ] = _gonBalances[from].sub( gonValue );\n        _gonBalances[ to ] = _gonBalances[to].add( gonValue );\n        emit Transfer( from, to, value );\n\n        return true;\n    }\n\n    function approve( address spender, uint256 value ) public override returns (bool) {\n         _allowedValue[ msg.sender ][ spender ] = value;\n         emit Approval( msg.sender, spender, value );\n         return true;\n    }\n\n    // What gets called in a permit\n    function _approve( address owner, address spender, uint256 value ) internal override virtual {\n        _allowedValue[owner][spender] = value;\n        emit Approval( owner, spender, value );\n    }\n\n    function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {\n        _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue );\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n\n    function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {\n        uint256 oldValue = _allowedValue[ msg.sender ][ spender ];\n        if (subtractedValue >= oldValue) {\n            _allowedValue[ msg.sender ][ spender ] = 0;\n        } else {\n            _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue );\n        }\n        emit Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] );\n        return true;\n    }\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\n// File: interfaces/IERC20.sol\n\n\npragma solidity ^0.7.5;\n\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"contracts/libraries/Address.sol": {
				"content": "// File: libraries/Address.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): replace with OZ implementation.\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    // function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n    //     require(address(this).balance >= value, \"Address: insufficient balance for call\");\n    //     return _functionCallWithValue(target, data, value, errorMessage);\n    // }\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n  /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.3._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n\n    function addressToString(address _address) internal pure returns(string memory) {\n        bytes32 _bytes = bytes32(uint256(_address));\n        bytes memory HEX = \"0123456789abcdef\";\n        bytes memory _addr = new bytes(42);\n\n        _addr[0] = '0';\n        _addr[1] = 'x';\n\n        for(uint256 i = 0; i < 20; i++) {\n            _addr[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\n            _addr[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\n        }\n\n        return string(_addr);\n\n    }\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// File: libraries/SafeMath.sol\n\n// SPDX-License-Identifier: AGPL-3.0-or-later\npragma solidity ^0.7.5;\n\n\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\nlibrary SafeMath {\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    // Only used in the  BondingCalculator.sol\n    function sqrrt(uint256 a) internal pure returns (uint c) {\n        if (a > 3) {\n            c = a;\n            uint b = add( div( a, 2), 1 );\n            while (b < c) {\n                c = b;\n                b = div( add( div( a, b ), b), 2 );\n            }\n        } else if (a != 0) {\n            c = 1;\n        }\n    }   \n\n    function percentageAmount( uint256 total_, uint8 percentage_ ) internal pure returns ( uint256 percentAmount_ ) {\n        return div( mul( total_, percentage_ ), 1000 );\n    }\n\n    /*\n     * Expects percentage to be trailed by 00,\n    */\n    function substractPercentage( uint256 total_, uint8 percentageToSub_ ) internal pure returns ( uint256 result_ ) {\n        return sub( total_, div( mul( total_, percentageToSub_ ), 1000 ) );\n    }\n\n    function percentageOfTotal( uint256 part_, uint256 total_ ) internal pure returns ( uint256 percent_ ) {\n        return div( mul(part_, 100) , total_ );\n    }\n\n    /**\n     * Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n\n    function quadraticPricing( uint256 payment_, uint256 multiplier_ ) internal pure returns (uint256) {\n        return sqrrt( mul( multiplier_, payment_ ) );\n    }\n\n  function bondingCurve( uint256 supply_, uint256 multiplier_ ) internal pure returns (uint256) {\n      return mul( multiplier_, supply_ );\n  }\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Address.sol\":149:9619  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x5FE0C6F99DEA5E 0xAA CHAINID PUSH13 0xCD5A2E5C35138FB5FE40169983 0xC1 ORIGIN 0x1E 0x4E RETURNDATASIZE PUSH13 0xEC7A64736F6C63430007050033 ",
							"sourceMap": "149:9470:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"addressToString(address)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 149,
									"end": 9619,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220665fe0c6f99dea5eaa466ccd5a2e5c35138fb5fe40169983c1321e4e3d6cec7a64736f6c63430007050033",
									".code": [
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 9619,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":175:3052  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 0x4C 0x4C PUSH14 0xFF67B13F174443E5BDD67E29FD1D 0xE3 0xDA CALLDATACOPY PUSH16 0x2A96F1346627D2D79E64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "175:2877:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"bondingCurve(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"percentageAmount(uint256,uint8)": "infinite",
								"percentageOfTotal(uint256,uint256)": "infinite",
								"quadraticPricing(uint256,uint256)": "infinite",
								"sqrrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"substractPercentage(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 175,
									"end": 3052,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdd04c4c6dff67b13f174443e5bdd67e29fd1de3da376f2a96f1346627d2d79e64736f6c63430007050033",
									".code": [
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 175,
											"end": 3052,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/sOHM.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":10802:11650  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":10802:11650  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206172e493563e325bd9a91c012276bee2ef2445683a0cad4c60b266558a3052cf64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206172e493563e325bd9a91c012276bee2ef2445683a0cad4c60b266558a3052cf64736f6c63430007050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x72E4 SWAP4 JUMP RETURNDATACOPY ORIGIN JUMPDEST 0xD9 0xA9 SHR ADD 0x22 PUSH23 0xBEE2EF2445683A0CAD4C60B266558A3052CF64736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "10802:848:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206172e493563e325bd9a91c012276bee2ef2445683a0cad4c60b266558a3052cf64736f6c63430007050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x72E4 SWAP4 JUMP RETURNDATACOPY ORIGIN JUMPDEST 0xD9 0xA9 SHR ADD 0x22 PUSH23 0xBEE2EF2445683A0CAD4C60B266558A3052CF64736F6C63 NUMBER STOP SMOD SDIV STOP CALLER ",
							"sourceMap": "10802:848:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 10802,
									"end": 11650,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206172e493563e325bd9a91c012276bee2ef2445683a0cad4c60b266558a3052cf64736f6c63430007050033",
									".code": [
										{
											"begin": 10802,
											"end": 11650,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 11650,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xd6e42f13272800809eeaaeb2ea1e645df73e950c1e6776e2a460ee0b712e89ca\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8ececdb358bb433ff02f75067ff9c70e19a11ad981f101c57581db9b6eec7db\",\"dweb:/ipfs/QmZLk6UUauA6FSHMLtZSh97MHHNGKtWLG32G9xBidBDiqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xd6e42f13272800809eeaaeb2ea1e645df73e950c1e6776e2a460ee0b712e89ca\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8ececdb358bb433ff02f75067ff9c70e19a11ad981f101c57581db9b6eec7db\",\"dweb:/ipfs/QmZLk6UUauA6FSHMLtZSh97MHHNGKtWLG32G9xBidBDiqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 881,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 887,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 889,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 891,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 893,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 895,
								"contract": "contracts/sOHM.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xd6e42f13272800809eeaaeb2ea1e645df73e950c1e6776e2a460ee0b712e89ca\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8ececdb358bb433ff02f75067ff9c70e19a11ad981f101c57581db9b6eec7db\",\"dweb:/ipfs/QmZLk6UUauA6FSHMLtZSh97MHHNGKtWLG32G9xBidBDiqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 881,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 887,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 889,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 891,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 893,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 895,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1442,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)1364_storage)"
							},
							{
								"astId": 1447,
								"contract": "contracts/sOHM.sol:ERC20Permit",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1364_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1364_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1364_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1363,
										"contract": "contracts/sOHM.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC2612Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IERC2612Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xd6e42f13272800809eeaaeb2ea1e645df73e950c1e6776e2a460ee0b712e89ca\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8ececdb358bb433ff02f75067ff9c70e19a11ad981f101c57581db9b6eec7db\",\"dweb:/ipfs/QmZLk6UUauA6FSHMLtZSh97MHHNGKtWLG32G9xBidBDiqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"IOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xd6e42f13272800809eeaaeb2ea1e645df73e950c1e6776e2a460ee0b712e89ca\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8ececdb358bb433ff02f75067ff9c70e19a11ad981f101c57581db9b6eec7db\",\"dweb:/ipfs/QmZLk6UUauA6FSHMLtZSh97MHHNGKtWLG32G9xBidBDiqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":15142:16384  contract Ownable is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":15409:15512  constructor () {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sOHM.sol\":15443:15453  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":15434:15440  _owner */\n  0x00\n  dup1\n    /* \"contracts/sOHM.sol\":15434:15453  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":15497:15503  _owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":15468:15505  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":15493:15494  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":15468:15505  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":15142:16384  contract Ownable is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":15142:16384  contract Ownable is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x089208d8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x481c6a75\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":15736:15892  function renounceManagement() public virtual override onlyManager() {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/sOHM.sol\":15898:16155  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/sOHM.sol\":15518:15606  function manager() public view override returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":16165:16382  function pullManagement() public virtual override {... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/sOHM.sol\":15736:15892  function renounceManagement() public virtual override onlyManager() {... */\n    tag_8:\n        /* \"contracts/sOHM.sol\":15664:15674  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15660  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":15645:15712  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/sOHM.sol\":15852:15853  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":15819:15856  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15836:15842  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15819:15856  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":15883:15884  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":15866:15872  _owner */\n      dup1\n      0x00\n        /* \"contracts/sOHM.sol\":15866:15885  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":15736:15892  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":15898:16155  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_11:\n        /* \"contracts/sOHM.sol\":15664:15674  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15660  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":15645:15712  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/sOHM.sol\":16021:16022  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":16000:16023  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16000:16009  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":16000:16023  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":15991:16066  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/sOHM.sol\":16106:16115  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":16081:16117  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16098:16104  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16081:16117  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":16139:16148  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":16127:16136  _newOwner */\n      0x01\n      0x00\n        /* \"contracts/sOHM.sol\":16127:16148  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":15898:16155  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":15518:15606  function manager() public view override returns (address) {... */\n    tag_13:\n        /* \"contracts/sOHM.sol\":15567:15574  address */\n      0x00\n        /* \"contracts/sOHM.sol\":15593:15599  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15586:15599  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":15518:15606  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":16165:16382  function pullManagement() public virtual override {... */\n    tag_15:\n        /* \"contracts/sOHM.sol\":16248:16257  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16234:16257  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16234:16244  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":16234:16257  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":16225:16296  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/sOHM.sol\":16336:16345  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16311:16347  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16328:16334  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16311:16347  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":16366:16375  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16357:16363  _owner */\n      0x00\n      dup1\n        /* \"contracts/sOHM.sol\":16357:16375  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":16165:16382  function pullManagement() public virtual override {... */\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n\n    auxdata: 0xa26469706673582212206ec7f2e7449eb13c67e96e3d88e3dce5e5c3eed9cc05e37093bebbacaffc438b64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36106ae806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca26469706673582212206ec7f2e7449eb13c67e96e3d88e3dce5e5c3eed9cc05e37093bebbacaffc438b64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6AE DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA26469706673582212206EC7F2 0xE7 DIFFICULTY SWAP15 0xB1 EXTCODECOPY PUSH8 0xE96E3D88E3DCE5E5 0xC3 0xEE 0xD9 0xCC SDIV 0xE3 PUSH17 0x93BEBBACAFFC438B64736F6C6343000705 STOP CALLER ",
							"sourceMap": "15142:1242:3:-:0;;;15409:103;;;;;;;;;;15443:10;15434:6;;:19;;;;;;;;;;;;;;;;;;15497:6;;;;;;;;;;15468:37;;15493:1;15468:37;;;;;;;;;;;;15142:1242;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461009f5780635a96ac0a146100d3575b600080fd5b6100596100dd565b005b61009d6004803603602081101561007157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b005b6100a7610461565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100db61048a565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461019e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106316026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106576022913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca26469706673582212206ec7f2e7449eb13c67e96e3d88e3dce5e5c3eed9cc05e37093bebbacaffc438b64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x48A JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x631 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x657 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0xA26469706673582212206EC7F2 0xE7 DIFFICULTY SWAP15 0xB1 EXTCODECOPY PUSH8 0xE96E3D88E3DCE5E5 0xC3 0xEE 0xD9 0xCC SDIV 0xE3 PUSH17 0x93BEBBACAFFC438B64736F6C6343000705 STOP CALLER ",
							"sourceMap": "15142:1242:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15736:156;;;:::i;:::-;;15898:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15518:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16165:217;;;:::i;:::-;;15736:156;15664:10;15654:20;;:6;;;;;;;;;;:20;;;15645:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15852:1:::1;15819:37;;15836:6;::::0;::::1;;;;;;;;15819:37;;;;;;;;;;;;15883:1;15866:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;15736:156::o:0;15898:257::-;15664:10;15654:20;;:6;;;;;;;;;;:20;;;15645:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16021:1:::1;16000:23;;:9;:23;;;;15991:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16106:9;16081:36;;16098:6;::::0;::::1;;;;;;;;16081:36;;;;;;;;;;;;16139:9;16127;;:21;;;;;;;;;;;;;;;;;;15898:257:::0;:::o;15518:88::-;15567:7;15593:6;;;;;;;;;;;15586:13;;15518:88;:::o;16165:217::-;16248:9;;;;;;;;;;;16234:23;;:10;:23;;;16225:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16336:9;;;;;;;;;;;16311:36;;16328:6;;;;;;;;;;16311:36;;;;;;;;;;;;16366:9;;;;;;;;;;;16357:6;;:18;;;;;;;;;;;;;;;;;;16165:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "342000",
								"executionCost": "23624",
								"totalCost": "365624"
							},
							"external": {
								"manager()": "1077",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"renounceManagement()": "24234"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15142,
									"end": 16384,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 15409,
									"end": 15512,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15443,
									"end": 15453,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15440,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15434,
									"end": 15440,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15493,
									"end": 15494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15142,
									"end": 16384,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ec7f2e7449eb13c67e96e3d88e3dce5e5c3eed9cc05e37093bebbacaffc438b64736f6c63430007050033",
									".code": [
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "89208D8"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "46F68EE9"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "481C6A75"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "5A96AC0A"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15142,
											"end": 16384,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15852,
											"end": 15853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15883,
											"end": 15884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15866,
											"end": 15872,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15872,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16021,
											"end": 16022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH data",
											"source": 3,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16106,
											"end": 16115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 16139,
											"end": 16148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16136,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16127,
											"end": 16136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15567,
											"end": 15574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16244,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH data",
											"source": 3,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"manager()": "481c6a75",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"renounceManagement()": "089208d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xd6e42f13272800809eeaaeb2ea1e645df73e950c1e6776e2a460ee0b712e89ca\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8ececdb358bb433ff02f75067ff9c70e19a11ad981f101c57581db9b6eec7db\",\"dweb:/ipfs/QmZLk6UUauA6FSHMLtZSh97MHHNGKtWLG32G9xBidBDiqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1617,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1619,
								"contract": "contracts/sOHM.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"sOlympus": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "LogRebase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakingContract",
									"type": "address"
								}
							],
							"name": "LogStakingContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"name": "LogSupply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPulled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipPushed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gons",
									"type": "uint256"
								}
							],
							"name": "balanceForGons",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "gonsForBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingContract_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initializer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pullManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner_",
									"type": "address"
								}
							],
							"name": "pushManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "profit_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epoch_",
									"type": "uint256"
								}
							],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rebases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rebase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAfter",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountRebased",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockNumberOccured",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_INDEX",
									"type": "uint256"
								}
							],
							"name": "setIndex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}."
							},
							"rebase(uint256,uint256)": {
								"params": {
									"profit_": "uint256"
								},
								"returns": {
									"_0": "uint256"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sOHM.sol\":16386:23664  contract sOlympus is ERC20Permit, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/sOHM.sol\":17869:18079  constructor() ERC20(\"Staked Olympus\", \"sOHM\", 9) ERC20Permit() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sOHM.sol\":1704:1852  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x5374616b6564204f6c796d707573000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x734f484d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":17915:17916  9 */\n  0x09\n    /* \"contracts/sOHM.sol\":1792:1797  name_ */\n  dup3\n    /* \"contracts/sOHM.sol\":1784:1789  _name */\n  0x03\n    /* \"contracts/sOHM.sol\":1784:1797  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/sOHM.sol\":1813:1820  symbol_ */\n  dup2\n    /* \"contracts/sOHM.sol\":1803:1810  _symbol */\n  0x04\n    /* \"contracts/sOHM.sol\":1803:1820  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/sOHM.sol\":1838:1847  decimals_ */\n  dup1\n    /* \"contracts/sOHM.sol\":1826:1835  _decimals */\n  0x05\n  0x00\n    /* \"contracts/sOHM.sol\":1826:1847  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":1704:1852  constructor (string memory name_, string memory symbol_, uint8 decimals_) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/sOHM.sol\":13530:13545  uint256 chainID */\n  0x00\n    /* \"contracts/sOHM.sol\":13589:13598  chainid() */\n  chainid\n    /* \"contracts/sOHM.sol\":13578:13598  chainID := chainid() */\n  swap1\n  pop\n    /* \"contracts/sOHM.sol\":13671:13766  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/sOHM.sol\":13796:13802  name() */\n  tag_11\n    /* \"contracts/sOHM.sol\":13796:13800  name */\n  shl(0x20, tag_12)\n    /* \"contracts/sOHM.sol\":13796:13802  name() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/sOHM.sol\":13780:13804  keccak256(bytes(name())) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":13828:13838  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/sOHM.sol\":13818:13839  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":13864:13871  chainID */\n  dup4\n    /* \"contracts/sOHM.sol\":13893:13897  this */\n  address\n    /* \"contracts/sOHM.sol\":13647:13908  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/sOHM.sol\":13637:13909  keccak256(abi.encode(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/sOHM.sol\":13618:13634  DOMAIN_SEPARATOR */\n  0x07\n    /* \"contracts/sOHM.sol\":13618:13909  DOMAIN_SEPARATOR = keccak256(abi.encode(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":13505:13916  constructor() {... */\n  pop\n    /* \"contracts/sOHM.sol\":15443:15453  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":15434:15440  _owner */\n  0x08\n  0x00\n    /* \"contracts/sOHM.sol\":15434:15453  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":15497:15503  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":15468:15505  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/sOHM.sol\":15493:15494  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":15468:15505  OwnershipPushed( address(0), _owner ) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/sOHM.sol\":17956:17966  msg.sender */\n  caller\n    /* \"contracts/sOHM.sol\":17942:17953  initializer */\n  0x0b\n  0x00\n    /* \"contracts/sOHM.sol\":17942:17966  initializer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":17257:17272  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":17976:17988  _totalSupply */\n  0x02\n    /* \"contracts/sOHM.sol\":17976:18015  _totalSupply = INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":18044:18072  TOTAL_GONS.div(_totalSupply) */\n  tag_15\n    /* \"contracts/sOHM.sol\":18059:18071  _totalSupply */\n  sload(0x02)\n    /* \"contracts/sOHM.sol\":17257:17272  5000000 * 10**9 */\n  0x11c37937e08000\n    /* \"contracts/sOHM.sol\":17197:17198  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":17188:17199  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":17505:17543  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n  dup2\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  mod\n    /* \"contracts/sOHM.sol\":17197:17198  0 */\n  0x00\n    /* \"contracts/sOHM.sol\":17188:17199  ~uint256(0) */\n  not\n    /* \"contracts/sOHM.sol\":17490:17544  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n  sub\n    /* \"contracts/sOHM.sol\":18044:18058  TOTAL_GONS.div */\n  or(tag_0_124, shl(0x20, tag_17))\n  swap1\n    /* \"contracts/sOHM.sol\":18044:18072  TOTAL_GONS.div(_totalSupply) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/sOHM.sol\":18025:18041  _gonsPerFragment */\n  0x0e\n    /* \"contracts/sOHM.sol\":18025:18072  _gonsPerFragment = TOTAL_GONS.div(_totalSupply) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/sOHM.sol\":16386:23664  contract sOlympus is ERC20Permit, Ownable {... */\n  jump(tag_18)\n    /* \"contracts/sOHM.sol\":1932:2007  function name() public view returns (string memory) {... */\ntag_12:\n    /* \"contracts/sOHM.sol\":1969:1982  string memory */\n  0x60\n    /* \"contracts/sOHM.sol\":1997:2002  _name */\n  0x03\n    /* \"contracts/sOHM.sol\":1990:2002  return _name */\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_20\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_21\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_20)\ntag_21:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_22:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_22\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_20:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"contracts/sOHM.sol\":1932:2007  function name() public view returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_17:\n    /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  tag_24\n    /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1a\n  dup2\n  mstore\n  0x20\n  add\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n  shl(0x20, tag_25)\n    /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\ntag_25:\n    /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n  gt\n    /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n  dup3\n    /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n  swap1\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  dup4\n  dup2\n  dup2\n  mload\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_28:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_30\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_28)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_31\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_31:\n  pop\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n  dup2\n  tag_32\n  jumpi\n  invalid\ntag_32:\n  div\n    /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n  dup2\n  tag_33\n  jumpi\n  invalid\ntag_33:\n  mod\n    /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n  dup2\n    /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n  mul\n    /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n  add\n    /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n  dup6\n    /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n  eq\n    /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n  tag_34\n  jumpi\n  invalid\ntag_34:\n    /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n  dup1\n    /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n  swap2\n  pop\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/sOHM.sol\":16386:23664  contract sOlympus is ERC20Permit, Ownable {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_36\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_35)\ntag_36:\n  dup3\n  0x1f\n  lt\n  tag_37\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_35)\ntag_37:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  dup3\n  add\ntag_38:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_38)\ntag_39:\ntag_35:\n  pop\n  swap1\n  pop\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  pop\n  swap1\n  jump\t// out\ntag_41:\ntag_42:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_42)\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sOHM.sol\":16386:23664  contract sOlympus is ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x481c6a75\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc4d66de8\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xee99205c\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9ce110d7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x73c69eb7\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x73c69eb7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7965d56d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x481c6a75\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5a96ac0a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2986c0e5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40a5737f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x46f68ee9\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2986c0e5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2df75cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x095ea7b3\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1bd39674\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x058ecdb4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x089208d8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sOHM.sol\":18900:19769  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":1932:2007  function name() public view returns (string memory) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_45:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_45)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_48:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":15736:15892  function renounceManagement() public virtual override onlyManager() {... */\n    tag_5:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/sOHM.sol\":22378:22600  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_6:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":2980:3072  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":20793:20915  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_8:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":21845:22372  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":21223:21316  function index() public view returns ( uint ) {... */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":17125:17142  uint public INDEX */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":13352:13460  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":2830:2905  function decimals() public view returns (uint8) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":13467:13498  bytes32 public DOMAIN_SEPARATOR */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":22843:23161  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18562:18736  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":15898:16155  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/sOHM.sol\":15518:15606  function manager() public view override returns (address) {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":16165:16382  function pullManagement() public virtual override {... */\n    tag_19:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sOHM.sol\":20645:20787  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_20:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":17095:17118  Rebase[] public rebases */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":20921:21039  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_22:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":14798:14916  function nonces(address owner) public view override returns (uint256) {... */\n    tag_23:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":21087:21217  function circulatingSupply() public view returns ( uint ) {... */\n    tag_24:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":2133:2212  function symbol() public view returns (string memory) {... */\n    tag_25:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_101:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_101)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":16609:16635  address public initializer */\n    tag_26:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":23167:23662  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_27:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":21322:21680  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18085:18556  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_29:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":13986:14735  function permit(... */\n    tag_30:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/sOHM.sol\":21686:21839  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_31:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":16573:16603  address public stakingContract */\n    tag_32:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sOHM.sol\":18900:19769  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n    tag_42:\n        /* \"contracts/sOHM.sol\":18987:18994  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":16532:16547  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16518:16547  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16518:16528  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":16518:16547  msg.sender == stakingContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":16509:16549  require( msg.sender == stakingContract ) */\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n        /* \"contracts/sOHM.sol\":19007:19027  uint256 rebaseAmount */\n      0x00\n        /* \"contracts/sOHM.sol\":19037:19063  uint256 circulatingSupply_ */\n      dup1\n        /* \"contracts/sOHM.sol\":19066:19085  circulatingSupply() */\n      tag_128\n        /* \"contracts/sOHM.sol\":19066:19083  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":19066:19085  circulatingSupply() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/sOHM.sol\":19037:19085  uint256 circulatingSupply_ = circulatingSupply() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":19112:19113  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":19101:19108  profit_ */\n      dup6\n        /* \"contracts/sOHM.sol\":19101:19113  profit_ == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":19096:19460  if ( profit_ == 0 ) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/sOHM.sol\":19146:19152  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":19135:19185  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":19154:19169  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":19171:19183  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":19135:19185  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":19215:19221  epoch_ */\n      dup4\n        /* \"contracts/sOHM.sol\":19204:19235  LogRebase( epoch_, 0, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":19223:19224  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":19226:19233  index() */\n      tag_130\n        /* \"contracts/sOHM.sol\":19226:19231  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":19226:19233  index() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/sOHM.sol\":19204:19235  LogRebase( epoch_, 0, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":19256:19268  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":19249:19268  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_127)\n        /* \"contracts/sOHM.sol\":19096:19460  if ( profit_ == 0 ) {... */\n    tag_129:\n        /* \"contracts/sOHM.sol\":19311:19312  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":19290:19308  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":19290:19312  circulatingSupply_ > 0 */\n      gt\n        /* \"contracts/sOHM.sol\":19285:19460  if ( circulatingSupply_ > 0 ){... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/sOHM.sol\":19343:19396  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      tag_133\n        /* \"contracts/sOHM.sol\":19376:19394  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":19343:19370  profit_.mul( _totalSupply ) */\n      tag_134\n        /* \"contracts/sOHM.sol\":19356:19368  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":19343:19350  profit_ */\n      dup9\n        /* \"contracts/sOHM.sol\":19343:19354  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":19343:19370  profit_.mul( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/sOHM.sol\":19343:19374  profit_.mul( _totalSupply ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":19343:19396  profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/sOHM.sol\":19328:19396  rebaseAmount = profit_.mul( _totalSupply ).div( circulatingSupply_ ) */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":19285:19460  if ( circulatingSupply_ > 0 ){... */\n      jump(tag_136)\n    tag_132:\n        /* \"contracts/sOHM.sol\":19442:19449  profit_ */\n      dup5\n        /* \"contracts/sOHM.sol\":19427:19449  rebaseAmount = profit_ */\n      swap2\n      pop\n        /* \"contracts/sOHM.sol\":19285:19460  if ( circulatingSupply_ > 0 ){... */\n    tag_136:\n        /* \"contracts/sOHM.sol\":19485:19517  _totalSupply.add( rebaseAmount ) */\n      tag_137\n        /* \"contracts/sOHM.sol\":19503:19515  rebaseAmount */\n      dup3\n        /* \"contracts/sOHM.sol\":19485:19497  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":19485:19501  _totalSupply.add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":19485:19517  _totalSupply.add( rebaseAmount ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/sOHM.sol\":19470:19482  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":19470:19517  _totalSupply = _totalSupply.add( rebaseAmount ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":17669:17670  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":17660:17671  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":19548:19558  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":19533:19545  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":19533:19558  _totalSupply > MAX_SUPPLY */\n      gt\n        /* \"contracts/sOHM.sol\":19528:19611  if ( _totalSupply > MAX_SUPPLY ) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/sOHM.sol\":17669:17670  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":17660:17671  ~uint128(0) */\n      not\n        /* \"contracts/sOHM.sol\":19590:19600  MAX_SUPPLY */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":19575:19587  _totalSupply */\n      0x02\n        /* \"contracts/sOHM.sol\":19575:19600  _totalSupply = MAX_SUPPLY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":19528:19611  if ( _totalSupply > MAX_SUPPLY ) {... */\n    tag_139:\n        /* \"contracts/sOHM.sol\":19640:19670  TOTAL_GONS.div( _totalSupply ) */\n      tag_140\n        /* \"contracts/sOHM.sol\":19656:19668  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":17257:17272  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":17197:17198  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":17188:17199  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":17505:17543  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_141\n      jumpi\n      invalid\n    tag_141:\n      mod\n        /* \"contracts/sOHM.sol\":17197:17198  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":17188:17199  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":17490:17544  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":19640:19654  TOTAL_GONS.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":19640:19670  TOTAL_GONS.div( _totalSupply ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/sOHM.sol\":19621:19637  _gonsPerFragment */\n      0x0e\n        /* \"contracts/sOHM.sol\":19621:19670  _gonsPerFragment = TOTAL_GONS.div( _totalSupply ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":19681:19732  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      tag_142\n        /* \"contracts/sOHM.sol\":19695:19713  circulatingSupply_ */\n      dup2\n        /* \"contracts/sOHM.sol\":19715:19722  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":19724:19730  epoch_ */\n      dup7\n        /* \"contracts/sOHM.sol\":19681:19693  _storeRebase */\n      tag_143\n        /* \"contracts/sOHM.sol\":19681:19732  _storeRebase( circulatingSupply_, profit_, epoch_ ) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/sOHM.sol\":19750:19762  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":19743:19762  return _totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":16559:16560  _ */\n    tag_127:\n        /* \"contracts/sOHM.sol\":18900:19769  function rebase( uint256 profit_, uint epoch_ ) public onlyStakingContract() returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":1932:2007  function name() public view returns (string memory) {... */\n    tag_44:\n        /* \"contracts/sOHM.sol\":1969:1982  string memory */\n      0x60\n        /* \"contracts/sOHM.sol\":1997:2002  _name */\n      0x03\n        /* \"contracts/sOHM.sol\":1990:2002  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":1932:2007  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":15736:15892  function renounceManagement() public virtual override onlyManager() {... */\n    tag_50:\n        /* \"contracts/sOHM.sol\":15664:15674  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15660  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":15645:15712  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/sOHM.sol\":15852:15853  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":15819:15856  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15836:15842  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15819:15856  OwnershipPushed( _owner, address(0) ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":15883:15884  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":15866:15872  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":15866:15885  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":15736:15892  function renounceManagement() public virtual override onlyManager() {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":22378:22600  function approve( address spender, uint256 value ) public override returns (bool) {... */\n    tag_53:\n        /* \"contracts/sOHM.sol\":22454:22458  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":22512:22517  value */\n      dup2\n        /* \"contracts/sOHM.sol\":22471:22484  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":22471:22498  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22486:22496  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":22471:22498  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22471:22509  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22500:22507  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":22471:22509  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22471:22517  _allowedValue[ msg.sender ][ spender ] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":22555:22562  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":22533:22571  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":22543:22553  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":22533:22571  Approval( msg.sender, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":22564:22569  value */\n      dup5\n        /* \"contracts/sOHM.sol\":22533:22571  Approval( msg.sender, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":22589:22593  true */\n      0x01\n        /* \"contracts/sOHM.sol\":22582:22593  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":22378:22600  function approve( address spender, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":2980:3072  function totalSupply() public view override returns (uint256) {... */\n    tag_55:\n        /* \"contracts/sOHM.sol\":3033:3040  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":3055:3067  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":3048:3067  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":2980:3072  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":20793:20915  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n    tag_58:\n        /* \"contracts/sOHM.sol\":20854:20858  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":20878:20908  amount.mul( _gonsPerFragment ) */\n      tag_154\n        /* \"contracts/sOHM.sol\":20890:20906  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":20878:20884  amount */\n      dup4\n        /* \"contracts/sOHM.sol\":20878:20888  amount.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":20878:20908  amount.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/sOHM.sol\":20871:20908  return amount.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":20793:20915  function gonsForBalance( uint amount ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":21845:22372  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n    tag_61:\n        /* \"contracts/sOHM.sol\":21936:21940  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":21990:22038  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      tag_156\n        /* \"contracts/sOHM.sol\":22031:22036  value */\n      dup3\n        /* \"contracts/sOHM.sol\":21990:22003  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":21990:22011  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22005:22009  from */\n      dup8\n        /* \"contracts/sOHM.sol\":21990:22011  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":21990:22025  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22013:22023  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":21990:22025  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":21990:22029  _allowedValue[ from ][ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":21990:22038  _allowedValue[ from ][ msg.sender ].sub( value ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/sOHM.sol\":21952:21965  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":21952:21973  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21967:21971  from */\n      dup7\n        /* \"contracts/sOHM.sol\":21952:21973  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":21952:21987  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21975:21985  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":21952:21987  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":21952:22038  _allowedValue[ from ][ msg.sender ] = _allowedValue[ from ][ msg.sender ].sub( value ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":22068:22078  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":22052:22118  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":22062:22066  from */\n      dup5\n        /* \"contracts/sOHM.sol\":22052:22118  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":22081:22094  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":22081:22102  _allowedValue[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22096:22100  from */\n      dup9\n        /* \"contracts/sOHM.sol\":22081:22102  _allowedValue[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22081:22116  _allowedValue[ from ][ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22104:22114  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":22081:22116  _allowedValue[ from ][ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":22052:22118  Approval( from, msg.sender,  _allowedValue[ from ][ msg.sender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":22129:22145  uint256 gonValue */\n      0x00\n        /* \"contracts/sOHM.sol\":22148:22171  gonsForBalance( value ) */\n      tag_158\n        /* \"contracts/sOHM.sol\":22164:22169  value */\n      dup4\n        /* \"contracts/sOHM.sol\":22148:22162  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":22148:22171  gonsForBalance( value ) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sOHM.sol\":22129:22171  uint256 gonValue = gonsForBalance( value ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":22204:22238  _gonBalances[from].sub( gonValue ) */\n      tag_159\n        /* \"contracts/sOHM.sol\":22228:22236  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":22204:22216  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":22204:22222  _gonBalances[from] */\n      0x00\n        /* \"contracts/sOHM.sol\":22217:22221  from */\n      dup9\n        /* \"contracts/sOHM.sol\":22204:22222  _gonBalances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":22204:22226  _gonBalances[from].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":22204:22238  _gonBalances[from].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"contracts/sOHM.sol\":22181:22193  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":22181:22201  _gonBalances[ from ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22195:22199  from */\n      dup8\n        /* \"contracts/sOHM.sol\":22181:22201  _gonBalances[ from ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22181:22238  _gonBalances[ from ] = _gonBalances[from].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":22269:22301  _gonBalances[to].add( gonValue ) */\n      tag_160\n        /* \"contracts/sOHM.sol\":22291:22299  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":22269:22281  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":22269:22285  _gonBalances[to] */\n      0x00\n        /* \"contracts/sOHM.sol\":22282:22284  to */\n      dup8\n        /* \"contracts/sOHM.sol\":22269:22285  _gonBalances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":22269:22289  _gonBalances[to].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":22269:22301  _gonBalances[to].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"contracts/sOHM.sol\":22248:22260  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":22248:22266  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22262:22264  to */\n      dup7\n        /* \"contracts/sOHM.sol\":22248:22266  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22248:22301  _gonBalances[ to ] = _gonBalances[to].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":22332:22334  to */\n      dup4\n        /* \"contracts/sOHM.sol\":22316:22343  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":22326:22330  from */\n      dup6\n        /* \"contracts/sOHM.sol\":22316:22343  Transfer( from, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":22336:22341  value */\n      dup6\n        /* \"contracts/sOHM.sol\":22316:22343  Transfer( from, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":22361:22365  true */\n      0x01\n        /* \"contracts/sOHM.sol\":22354:22365  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":21845:22372  function transferFrom( address from, address to, uint256 value ) public override returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":21223:21316  function index() public view returns ( uint ) {... */\n    tag_63:\n        /* \"contracts/sOHM.sol\":21262:21266  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":21286:21309  balanceForGons( INDEX ) */\n      tag_162\n        /* \"contracts/sOHM.sol\":21302:21307  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":21286:21300  balanceForGons */\n      tag_93\n        /* \"contracts/sOHM.sol\":21286:21309  balanceForGons( INDEX ) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/sOHM.sol\":21279:21309  return balanceForGons( INDEX ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":21223:21316  function index() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":17125:17142  uint public INDEX */\n    tag_65:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":13352:13460  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_67:\n        /* \"contracts/sOHM.sol\":13394:13460  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/sOHM.sol\":13352:13460  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":2830:2905  function decimals() public view returns (uint8) {... */\n    tag_69:\n        /* \"contracts/sOHM.sol\":2871:2876  uint8 */\n      0x00\n        /* \"contracts/sOHM.sol\":2891:2900  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/sOHM.sol\":2884:2900  return _decimals */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":2830:2905  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":13467:13498  bytes32 public DOMAIN_SEPARATOR */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":22843:23161  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n    tag_74:\n        /* \"contracts/sOHM.sol\":22934:22938  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":22991:23047  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      tag_165\n        /* \"contracts/sOHM.sol\":23035:23045  addedValue */\n      dup3\n        /* \"contracts/sOHM.sol\":22991:23004  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":22991:23018  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23006:23016  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":22991:23018  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22991:23029  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23020:23027  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":22991:23029  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":22991:23033  _allowedValue[ msg.sender ][ spender ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":22991:23047  _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/sOHM.sol\":22950:22963  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":22950:22977  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22965:22975  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":22950:22977  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22950:22988  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":22979:22986  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":22950:22988  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22950:23047  _allowedValue[ msg.sender ][ spender ] = _allowedValue[ msg.sender ][ spender ].add( addedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":23084:23091  spender */\n      dup3\n        /* \"contracts/sOHM.sol\":23062:23133  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":23072:23082  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23062:23133  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":23093:23106  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":23093:23120  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23108:23118  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23093:23120  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23093:23131  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23122:23129  spender */\n      dup8\n        /* \"contracts/sOHM.sol\":23093:23131  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":23062:23133  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":23150:23154  true */\n      0x01\n        /* \"contracts/sOHM.sol\":23143:23154  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":22843:23161  function increaseAllowance( address spender, uint256 addedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18562:18736  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n    tag_77:\n        /* \"contracts/sOHM.sol\":18628:18632  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":15664:15674  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15660  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":15645:15712  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/sOHM.sol\":18663:18664  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18654:18659  INDEX */\n      sload(0x0d)\n        /* \"contracts/sOHM.sol\":18654:18664  INDEX == 0 */\n      eq\n        /* \"contracts/sOHM.sol\":18645:18666  require( INDEX == 0 ) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/sOHM.sol\":18684:18708  gonsForBalance( _INDEX ) */\n      tag_170\n        /* \"contracts/sOHM.sol\":18700:18706  _INDEX */\n      dup3\n        /* \"contracts/sOHM.sol\":18684:18698  gonsForBalance */\n      tag_58\n        /* \"contracts/sOHM.sol\":18684:18708  gonsForBalance( _INDEX ) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/sOHM.sol\":18676:18681  INDEX */\n      0x0d\n        /* \"contracts/sOHM.sol\":18676:18708  INDEX = gonsForBalance( _INDEX ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18725:18729  true */\n      0x01\n        /* \"contracts/sOHM.sol\":18718:18729  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":18562:18736  function setIndex( uint _INDEX ) external onlyManager() returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":15898:16155  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n    tag_80:\n        /* \"contracts/sOHM.sol\":15664:15674  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15660  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15654:15674  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":15645:15712  require( _owner == msg.sender, \"Ownable: caller is not the owner\" ) */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/sOHM.sol\":16021:16022  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":16000:16023  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16000:16009  newOwner_ */\n      dup2\n        /* \"contracts/sOHM.sol\":16000:16023  newOwner_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":15991:16066  require( newOwner_ != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/sOHM.sol\":16106:16115  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":16081:16117  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16098:16104  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16081:16117  OwnershipPushed( _owner, newOwner_ ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":16139:16148  newOwner_ */\n      dup1\n        /* \"contracts/sOHM.sol\":16127:16136  _newOwner */\n      0x09\n      0x00\n        /* \"contracts/sOHM.sol\":16127:16148  _newOwner = newOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":15898:16155  function pushManagement( address newOwner_ ) public virtual override onlyManager() {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":15518:15606  function manager() public view override returns (address) {... */\n    tag_82:\n        /* \"contracts/sOHM.sol\":15567:15574  address */\n      0x00\n        /* \"contracts/sOHM.sol\":15593:15599  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":15586:15599  return _owner */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":15518:15606  function manager() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":16165:16382  function pullManagement() public virtual override {... */\n    tag_84:\n        /* \"contracts/sOHM.sol\":16248:16257  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16234:16257  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16234:16244  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":16234:16257  msg.sender == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":16225:16296  require( msg.sender == _newOwner, \"Ownable: must be new owner to pull\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/sOHM.sol\":16336:16345  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16311:16347  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16328:16334  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16311:16347  OwnershipPulled( _owner, _newOwner ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":16366:16375  _newOwner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":16357:16363  _owner */\n      0x08\n      0x00\n        /* \"contracts/sOHM.sol\":16357:16375  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":16165:16382  function pullManagement() public virtual override {... */\n      jump\t// out\n        /* \"contracts/sOHM.sol\":20645:20787  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n    tag_87:\n        /* \"contracts/sOHM.sol\":20710:20717  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":20737:20780  _gonBalances[ who ].div( _gonsPerFragment ) */\n      tag_179\n        /* \"contracts/sOHM.sol\":20762:20778  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":20737:20749  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":20737:20756  _gonBalances[ who ] */\n      0x00\n        /* \"contracts/sOHM.sol\":20751:20754  who */\n      dup6\n        /* \"contracts/sOHM.sol\":20737:20756  _gonBalances[ who ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":20737:20760  _gonBalances[ who ].div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":20737:20780  _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/sOHM.sol\":20730:20780  return _gonBalances[ who ].div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":20645:20787  function balanceOf( address who ) public view override returns ( uint256 ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":17095:17118  Rebase[] public rebases */\n    tag_90:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/sOHM.sol\":20921:21039  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n    tag_93:\n        /* \"contracts/sOHM.sol\":20980:20984  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":21004:21032  gons.div( _gonsPerFragment ) */\n      tag_183\n        /* \"contracts/sOHM.sol\":21014:21030  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":21004:21008  gons */\n      dup4\n        /* \"contracts/sOHM.sol\":21004:21012  gons.div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":21004:21032  gons.div( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/sOHM.sol\":20997:21032  return gons.div( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":20921:21039  function balanceForGons( uint gons ) public view returns ( uint ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":14798:14916  function nonces(address owner) public view override returns (uint256) {... */\n    tag_96:\n        /* \"contracts/sOHM.sol\":14859:14866  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":14885:14909  _nonces[owner].current() */\n      tag_185\n        /* \"contracts/sOHM.sol\":14885:14892  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":14885:14899  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":14893:14898  owner */\n      dup5\n        /* \"contracts/sOHM.sol\":14885:14899  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":14885:14907  _nonces[owner].current */\n      tag_186\n        /* \"contracts/sOHM.sol\":14885:14909  _nonces[owner].current() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/sOHM.sol\":14878:14909  return _nonces[owner].current() */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":14798:14916  function nonces(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":21087:21217  function circulatingSupply() public view returns ( uint ) {... */\n    tag_98:\n        /* \"contracts/sOHM.sol\":21138:21142  uint */\n      0x00\n        /* \"contracts/sOHM.sol\":21162:21210  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      tag_188\n        /* \"contracts/sOHM.sol\":21180:21208  balanceOf( stakingContract ) */\n      tag_189\n        /* \"contracts/sOHM.sol\":21191:21206  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":21180:21189  balanceOf */\n      tag_87\n        /* \"contracts/sOHM.sol\":21180:21208  balanceOf( stakingContract ) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/sOHM.sol\":21162:21174  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":21162:21178  _totalSupply.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":21162:21210  _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"contracts/sOHM.sol\":21155:21210  return _totalSupply.sub( balanceOf( stakingContract ) ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":21087:21217  function circulatingSupply() public view returns ( uint ) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":2133:2212  function symbol() public view returns (string memory) {... */\n    tag_100:\n        /* \"contracts/sOHM.sol\":2172:2185  string memory */\n      0x60\n        /* \"contracts/sOHM.sol\":2200:2207  _symbol */\n      0x04\n        /* \"contracts/sOHM.sol\":2193:2207  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":2133:2212  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sOHM.sol\":16609:16635  address public initializer */\n    tag_106:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sOHM.sol\":23167:23662  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n    tag_109:\n        /* \"contracts/sOHM.sol\":23263:23267  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":23279:23295  uint256 oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":23298:23311  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":23298:23325  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23313:23323  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23298:23325  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23298:23336  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23327:23334  spender */\n      dup6\n        /* \"contracts/sOHM.sol\":23298:23336  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":23279:23336  uint256 oldValue = _allowedValue[ msg.sender ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":23369:23377  oldValue */\n      dup1\n        /* \"contracts/sOHM.sol\":23350:23365  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":23350:23377  subtractedValue >= oldValue */\n      lt\n        /* \"contracts/sOHM.sol\":23346:23549  if (subtractedValue >= oldValue) {... */\n      tag_195\n      jumpi\n        /* \"contracts/sOHM.sol\":23434:23435  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":23393:23406  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":23393:23420  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23408:23418  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23393:23420  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23393:23431  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23422:23429  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":23393:23431  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23393:23435  _allowedValue[ msg.sender ][ spender ] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":23346:23549  if (subtractedValue >= oldValue) {... */\n      jump(tag_196)\n    tag_195:\n        /* \"contracts/sOHM.sol\":23507:23538  oldValue.sub( subtractedValue ) */\n      tag_197\n        /* \"contracts/sOHM.sol\":23521:23536  subtractedValue */\n      dup4\n        /* \"contracts/sOHM.sol\":23507:23515  oldValue */\n      dup3\n        /* \"contracts/sOHM.sol\":23507:23519  oldValue.sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":23507:23538  oldValue.sub( subtractedValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/sOHM.sol\":23466:23479  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":23466:23493  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23481:23491  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23466:23493  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23466:23504  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23495:23502  spender */\n      dup7\n        /* \"contracts/sOHM.sol\":23466:23504  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23466:23538  _allowedValue[ msg.sender ][ spender ] = oldValue.sub( subtractedValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":23346:23549  if (subtractedValue >= oldValue) {... */\n    tag_196:\n        /* \"contracts/sOHM.sol\":23585:23592  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":23563:23634  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":23573:23583  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23563:23634  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":23594:23607  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":23594:23621  _allowedValue[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23609:23619  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":23594:23621  _allowedValue[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":23594:23632  _allowedValue[ msg.sender ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":23623:23630  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":23594:23632  _allowedValue[ msg.sender ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":23563:23634  Approval( msg.sender, spender, _allowedValue[ msg.sender ][ spender ] ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":23651:23655  true */\n      0x01\n        /* \"contracts/sOHM.sol\":23644:23655  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":23167:23662  function decreaseAllowance( address spender, uint256 subtractedValue ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":21322:21680  function transfer( address to, uint256 value ) public override returns (bool) {... */\n    tag_112:\n        /* \"contracts/sOHM.sol\":21394:21398  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":21410:21426  uint256 gonValue */\n      dup1\n        /* \"contracts/sOHM.sol\":21429:21458  value.mul( _gonsPerFragment ) */\n      tag_199\n        /* \"contracts/sOHM.sol\":21440:21456  _gonsPerFragment */\n      sload(0x0e)\n        /* \"contracts/sOHM.sol\":21429:21434  value */\n      dup5\n        /* \"contracts/sOHM.sol\":21429:21438  value.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":21429:21458  value.mul( _gonsPerFragment ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/sOHM.sol\":21410:21458  uint256 gonValue = value.mul( _gonsPerFragment ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":21497:21539  _gonBalances[ msg.sender ].sub( gonValue ) */\n      tag_200\n        /* \"contracts/sOHM.sol\":21529:21537  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":21497:21509  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":21497:21523  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21511:21521  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":21497:21523  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":21497:21527  _gonBalances[ msg.sender ].sub */\n      tag_157\n      swap1\n        /* \"contracts/sOHM.sol\":21497:21539  _gonBalances[ msg.sender ].sub( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/sOHM.sol\":21468:21480  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":21468:21494  _gonBalances[ msg.sender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21482:21492  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":21468:21494  _gonBalances[ msg.sender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":21468:21539  _gonBalances[ msg.sender ] = _gonBalances[ msg.sender ].sub( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":21570:21604  _gonBalances[ to ].add( gonValue ) */\n      tag_201\n        /* \"contracts/sOHM.sol\":21594:21602  gonValue */\n      dup2\n        /* \"contracts/sOHM.sol\":21570:21582  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":21570:21588  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21584:21586  to */\n      dup8\n        /* \"contracts/sOHM.sol\":21570:21588  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":21570:21592  _gonBalances[ to ].add */\n      tag_138\n      swap1\n        /* \"contracts/sOHM.sol\":21570:21604  _gonBalances[ to ].add( gonValue ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/sOHM.sol\":21549:21561  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":21549:21567  _gonBalances[ to ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21563:21565  to */\n      dup7\n        /* \"contracts/sOHM.sol\":21549:21567  _gonBalances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":21549:21604  _gonBalances[ to ] = _gonBalances[ to ].add( gonValue ) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":21641:21643  to */\n      dup4\n        /* \"contracts/sOHM.sol\":21619:21652  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":21629:21639  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":21619:21652  Transfer( msg.sender, to, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":21645:21650  value */\n      dup6\n        /* \"contracts/sOHM.sol\":21619:21652  Transfer( msg.sender, to, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":21669:21673  true */\n      0x01\n        /* \"contracts/sOHM.sol\":21662:21673  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":21322:21680  function transfer( address to, uint256 value ) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":18085:18556  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n    tag_115:\n        /* \"contracts/sOHM.sol\":18152:18156  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":18192:18203  initializer */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18178:18203  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18178:18188  msg.sender */\n      caller\n        /* \"contracts/sOHM.sol\":18178:18203  msg.sender == initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":18169:18205  require( msg.sender == initializer ) */\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n        /* \"contracts/sOHM.sol\":18252:18253  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18224:18254  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18224:18240  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":18224:18254  stakingContract_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":18215:18256  require( stakingContract_ != address(0) ) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/sOHM.sol\":18284:18300  stakingContract_ */\n      dup2\n        /* \"contracts/sOHM.sol\":18266:18281  stakingContract */\n      0x0a\n      0x00\n        /* \"contracts/sOHM.sol\":18266:18300  stakingContract = stakingContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":17257:17272  5000000 * 10**9 */\n      0x11c37937e08000\n        /* \"contracts/sOHM.sol\":17197:17198  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":17188:17199  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":17505:17543  MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY */\n      dup2\n      tag_205\n      jumpi\n      invalid\n    tag_205:\n      mod\n        /* \"contracts/sOHM.sol\":17197:17198  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":17188:17199  ~uint256(0) */\n      not\n        /* \"contracts/sOHM.sol\":17490:17544  MAX_UINT256 - (MAX_UINT256 % INITIAL_FRAGMENTS_SUPPLY) */\n      sub\n        /* \"contracts/sOHM.sol\":18310:18322  _gonBalances */\n      0x0f\n        /* \"contracts/sOHM.sol\":18310:18341  _gonBalances[ stakingContract ] */\n      0x00\n        /* \"contracts/sOHM.sol\":18324:18339  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18310:18341  _gonBalances[ stakingContract ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":18310:18354  _gonBalances[ stakingContract ] = TOTAL_GONS */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18394:18409  stakingContract */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18370:18425  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":18388:18391  0x0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18370:18425  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/sOHM.sol\":18411:18423  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":18370:18425  Transfer( address(0x0), stakingContract, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":18440:18485  LogStakingContractUpdated( stakingContract_ ) */\n      0x817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a1\n        /* \"contracts/sOHM.sol\":18467:18483  stakingContract_ */\n      dup3\n        /* \"contracts/sOHM.sol\":18440:18485  LogStakingContractUpdated( stakingContract_ ) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sOHM.sol\":18526:18527  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":18504:18515  initializer */\n      0x0b\n      0x00\n        /* \"contracts/sOHM.sol\":18504:18528  initializer = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":18545:18549  true */\n      0x01\n        /* \"contracts/sOHM.sol\":18538:18549  return true */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":18085:18556  function initialize( address stakingContract_ ) external returns ( bool ) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":13986:14735  function permit(... */\n    tag_118:\n        /* \"contracts/sOHM.sol\":14222:14230  deadline */\n      dup4\n        /* \"contracts/sOHM.sol\":14203:14218  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":14203:14230  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"contracts/sOHM.sol\":14195:14259  require(block.timestamp <= deadline, \"Permit: expired deadline\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5065726d69743a206578706972656420646561646c696e650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/sOHM.sol\":14270:14288  bytes32 hashStruct */\n      0x00\n        /* \"contracts/sOHM.sol\":13394:13460  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/sOHM.sol\":14324:14339  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/sOHM.sol\":14341:14346  owner */\n      dup9\n        /* \"contracts/sOHM.sol\":14348:14355  spender */\n      dup9\n        /* \"contracts/sOHM.sol\":14357:14363  amount */\n      dup9\n        /* \"contracts/sOHM.sol\":14365:14389  _nonces[owner].current() */\n      tag_208\n        /* \"contracts/sOHM.sol\":14365:14372  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":14365:14379  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":14373:14378  owner */\n      dup15\n        /* \"contracts/sOHM.sol\":14365:14379  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":14365:14387  _nonces[owner].current */\n      tag_186\n        /* \"contracts/sOHM.sol\":14365:14389  _nonces[owner].current() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/sOHM.sol\":14391:14399  deadline */\n      dup10\n        /* \"contracts/sOHM.sol\":14313:14400  abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sOHM.sol\":14303:14401  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, amount, _nonces[owner].current(), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sOHM.sol\":14270:14401  bytes32 hashStruct =... */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":14412:14425  bytes32 _hash */\n      0x00\n        /* \"contracts/sOHM.sol\":14462:14468  0x1901 */\n      0x1901\n        /* \"contracts/sOHM.sol\":14471:14487  DOMAIN_SEPARATOR */\n      sload(0x07)\n        /* \"contracts/sOHM.sol\":14489:14499  hashStruct */\n      dup4\n        /* \"contracts/sOHM.sol\":14438:14500  abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffff\n      and\n      0xf0\n      shl\n      dup2\n      mstore\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sOHM.sol\":14428:14501  keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sOHM.sol\":14412:14501  bytes32 _hash = keccak256(abi.encodePacked(uint16(0x1901), DOMAIN_SEPARATOR, hashStruct)) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":14512:14526  address signer */\n      0x00\n        /* \"contracts/sOHM.sol\":14529:14554  ecrecover(_hash, v, r, s) */\n      0x01\n        /* \"contracts/sOHM.sol\":14539:14544  _hash */\n      dup3\n        /* \"contracts/sOHM.sol\":14546:14547  v */\n      dup8\n        /* \"contracts/sOHM.sol\":14549:14550  r */\n      dup8\n        /* \"contracts/sOHM.sol\":14552:14553  s */\n      dup8\n        /* \"contracts/sOHM.sol\":14529:14554  ecrecover(_hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/sOHM.sol\":14512:14554  address signer = ecrecover(_hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":14590:14591  0 */\n      0x00\n        /* \"contracts/sOHM.sol\":14572:14592  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":14572:14578  signer */\n      dup2\n        /* \"contracts/sOHM.sol\":14572:14592  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/sOHM.sol\":14572:14611  signer != address(0) && signer == owner */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/sOHM.sol\":14606:14611  owner */\n      dup10\n        /* \"contracts/sOHM.sol\":14596:14611  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":14596:14602  signer */\n      dup2\n        /* \"contracts/sOHM.sol\":14596:14611  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/sOHM.sol\":14572:14611  signer != address(0) && signer == owner */\n    tag_211:\n        /* \"contracts/sOHM.sol\":14564:14649  require(signer != address(0) && signer == owner, \"ZeroSwapPermit: Invalid signature\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/sOHM.sol\":14660:14686  _nonces[owner].increment() */\n      tag_213\n        /* \"contracts/sOHM.sol\":14660:14667  _nonces */\n      0x06\n        /* \"contracts/sOHM.sol\":14660:14674  _nonces[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":14668:14673  owner */\n      dup13\n        /* \"contracts/sOHM.sol\":14660:14674  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":14660:14684  _nonces[owner].increment */\n      tag_214\n        /* \"contracts/sOHM.sol\":14660:14686  _nonces[owner].increment() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/sOHM.sol\":14696:14728  _approve(owner, spender, amount) */\n      tag_215\n        /* \"contracts/sOHM.sol\":14705:14710  owner */\n      dup11\n        /* \"contracts/sOHM.sol\":14712:14719  spender */\n      dup11\n        /* \"contracts/sOHM.sol\":14721:14727  amount */\n      dup11\n        /* \"contracts/sOHM.sol\":14696:14704  _approve */\n      tag_216\n        /* \"contracts/sOHM.sol\":14696:14728  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/sOHM.sol\":13986:14735  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":21686:21839  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n    tag_121:\n        /* \"contracts/sOHM.sol\":21771:21778  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":21798:21811  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":21798:21821  _allowedValue[ owner_ ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21813:21819  owner_ */\n      dup5\n        /* \"contracts/sOHM.sol\":21798:21821  _allowedValue[ owner_ ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":21798:21832  _allowedValue[ owner_ ][ spender ] */\n      0x00\n        /* \"contracts/sOHM.sol\":21823:21830  spender */\n      dup4\n        /* \"contracts/sOHM.sol\":21798:21832  _allowedValue[ owner_ ][ spender ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sOHM.sol\":21791:21832  return _allowedValue[ owner_ ][ spender ] */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":21686:21839  function allowance( address owner_, address spender ) public view override returns ( uint256 ) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":16573:16603  address public stakingContract */\n    tag_123:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"contracts/libraries/SafeMath.sol\":1019:1026  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      tag_219\n        /* \"contracts/libraries/SafeMath.sol\":1049:1050  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1052:1053  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1045:1048  div */\n      tag_220\n        /* \"contracts/libraries/SafeMath.sol\":1045:1084  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_219:\n        /* \"contracts/libraries/SafeMath.sol\":1038:1084  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":961:1091  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"contracts/libraries/SafeMath.sol\":772:779  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":800:801  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":795:796  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":795:801  a == 0 */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/libraries/SafeMath.sol\":824:825  0 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":817:825  return 0 */\n      swap1\n      pop\n      jump(tag_221)\n        /* \"contracts/libraries/SafeMath.sol\":791:836  if (a == 0) {... */\n    tag_222:\n        /* \"contracts/libraries/SafeMath.sol\":846:855  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":862:863  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":858:859  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":858:863  a * b */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":846:863  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":890:891  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":885:886  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":881:882  c */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":881:886  c / a */\n      dup2\n      tag_223\n      jumpi\n      invalid\n    tag_223:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":881:891  c / a == b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":873:929  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/libraries/SafeMath.sol\":947:948  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":940:948  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":714:955  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"contracts/libraries/SafeMath.sol\":257:264  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":276:285  uint256 c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":292:293  b */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":288:289  a */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":288:293  a + b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":276:293  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":316:317  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":311:312  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":311:317  c >= a */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":303:349  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"contracts/libraries/SafeMath.sol\":367:368  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":360:368  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":199:375  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":19959:20639  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n    tag_143:\n        /* \"contracts/sOHM.sol\":20056:20060  bool */\n      0x00\n        /* \"contracts/sOHM.sol\":20073:20091  uint rebasePercent */\n      dup1\n        /* \"contracts/sOHM.sol\":20094:20141  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      tag_228\n        /* \"contracts/sOHM.sol\":20119:20139  previousCirculating_ */\n      dup6\n        /* \"contracts/sOHM.sol\":20094:20113  profit_.mul( 1e18 ) */\n      tag_229\n        /* \"contracts/sOHM.sol\":20107:20111  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/sOHM.sol\":20094:20101  profit_ */\n      dup8\n        /* \"contracts/sOHM.sol\":20094:20105  profit_.mul */\n      tag_135\n      swap1\n        /* \"contracts/sOHM.sol\":20094:20113  profit_.mul( 1e18 ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/sOHM.sol\":20094:20117  profit_.mul( 1e18 ).div */\n      tag_124\n      swap1\n        /* \"contracts/sOHM.sol\":20094:20141  profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/sOHM.sol\":20073:20141  uint rebasePercent = profit_.mul( 1e18 ).div( previousCirculating_ ) */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":20152:20159  rebases */\n      0x0c\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sOHM.sol\":20196:20202  epoch_ */\n      dup6\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":20224:20237  rebasePercent */\n      dup4\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":20285:20305  previousCirculating_ */\n      dup8\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":20337:20356  circulatingSupply() */\n      tag_230\n        /* \"contracts/sOHM.sol\":20337:20354  circulatingSupply */\n      tag_98\n        /* \"contracts/sOHM.sol\":20337:20356  circulatingSupply() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":20385:20392  profit_ */\n      dup7\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":20413:20420  index() */\n      tag_231\n        /* \"contracts/sOHM.sol\":20413:20418  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":20413:20420  index() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sOHM.sol\":20454:20466  block.number */\n      number\n        /* \"contracts/sOHM.sol\":20166:20477  Rebase ( {... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sOHM.sol\":20152:20478  rebases.push( Rebase ( {... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":20513:20519  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":20502:20552  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      0x917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da4\n        /* \"contracts/sOHM.sol\":20521:20536  block.timestamp */\n      timestamp\n        /* \"contracts/sOHM.sol\":20538:20550  _totalSupply */\n      sload(0x02)\n        /* \"contracts/sOHM.sol\":20502:20552  LogSupply( epoch_, block.timestamp, _totalSupply ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":20578:20584  epoch_ */\n      dup3\n        /* \"contracts/sOHM.sol\":20567:20610  LogRebase( epoch_, rebasePercent, index() ) */\n      0x6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb2\n        /* \"contracts/sOHM.sol\":20586:20599  rebasePercent */\n      dup3\n        /* \"contracts/sOHM.sol\":20601:20608  index() */\n      tag_233\n        /* \"contracts/sOHM.sol\":20601:20606  index */\n      tag_63\n        /* \"contracts/sOHM.sol\":20601:20608  index() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/sOHM.sol\":20567:20610  LogRebase( epoch_, rebasePercent, index() ) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sOHM.sol\":20628:20632  true */\n      0x01\n        /* \"contracts/sOHM.sol\":20621:20632  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/sOHM.sol\":19959:20639  function _storeRebase( uint previousCirculating_, uint profit_, uint epoch_ ) internal returns ( bool ) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"contracts/libraries/SafeMath.sol\":439:446  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_235\n        /* \"contracts/libraries/SafeMath.sol\":469:470  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":472:473  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":465:468  sub */\n      tag_236\n        /* \"contracts/libraries/SafeMath.sol\":465:508  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_235:\n        /* \"contracts/libraries/SafeMath.sol\":458:508  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":381:515  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":11238:11350  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_186:\n        /* \"contracts/sOHM.sol\":11303:11310  uint256 */\n      0x00\n        /* \"contracts/sOHM.sol\":11329:11336  counter */\n      dup2\n        /* \"contracts/sOHM.sol\":11329:11343  counter._value */\n      0x00\n      add\n      sload\n        /* \"contracts/sOHM.sol\":11322:11343  return counter._value */\n      swap1\n      pop\n        /* \"contracts/sOHM.sol\":11238:11350  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":11356:11534  function increment(Counter storage counter) internal {... */\n    tag_214:\n        /* \"contracts/sOHM.sol\":11526:11527  1 */\n      0x01\n        /* \"contracts/sOHM.sol\":11508:11515  counter */\n      dup2\n        /* \"contracts/sOHM.sol\":11508:11522  counter._value */\n      0x00\n      add\n      0x00\n        /* \"contracts/sOHM.sol\":11508:11527  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":11356:11534  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/sOHM.sol\":22642:22837  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n    tag_216:\n        /* \"contracts/sOHM.sol\":22777:22782  value */\n      dup1\n        /* \"contracts/sOHM.sol\":22745:22758  _allowedValue */\n      0x10\n        /* \"contracts/sOHM.sol\":22745:22765  _allowedValue[owner] */\n      0x00\n        /* \"contracts/sOHM.sol\":22759:22764  owner */\n      dup6\n        /* \"contracts/sOHM.sol\":22745:22765  _allowedValue[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22745:22774  _allowedValue[owner][spender] */\n      0x00\n        /* \"contracts/sOHM.sol\":22766:22773  spender */\n      dup5\n        /* \"contracts/sOHM.sol\":22745:22774  _allowedValue[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sOHM.sol\":22745:22782  _allowedValue[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sOHM.sol\":22814:22821  spender */\n      dup2\n        /* \"contracts/sOHM.sol\":22797:22830  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sOHM.sol\":22807:22812  owner */\n      dup4\n        /* \"contracts/sOHM.sol\":22797:22830  Approval( owner, spender, value ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/sOHM.sol\":22823:22828  value */\n      dup4\n        /* \"contracts/sOHM.sol\":22797:22830  Approval( owner, spender, value ) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sOHM.sol\":22642:22837  function _approve( address owner, address spender, uint256 value ) internal override virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"contracts/libraries/SafeMath.sol\":1183:1190  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1214:1215  0 */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1210:1211  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1210:1215  b > 0 */\n      gt\n        /* \"contracts/libraries/SafeMath.sol\":1217:1229  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":1202:1230  require(b > 0, errorMessage) */\n      swap1\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_242:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_244\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_242)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_245:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1240:1249  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":1256:1257  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1252:1253  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1252:1257  a / b */\n      dup2\n      tag_246\n      jumpi\n      invalid\n    tag_246:\n      div\n        /* \"contracts/libraries/SafeMath.sol\":1240:1257  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1291:1292  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":1287:1288  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1287:1292  a % b */\n      dup2\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      mod\n        /* \"contracts/libraries/SafeMath.sol\":1283:1284  c */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":1279:1280  b */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1279:1284  b * c */\n      mul\n        /* \"contracts/libraries/SafeMath.sol\":1279:1292  b * c + a % b */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":1274:1275  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":1274:1292  a == b * c + a % b */\n      eq\n        /* \"contracts/libraries/SafeMath.sol\":1267:1293  assert(a == b * c + a % b) */\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n        /* \"contracts/libraries/SafeMath.sol\":1358:1359  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":1351:1359  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":1097:1366  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_236:\n        /* \"contracts/libraries/SafeMath.sol\":607:614  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":639:640  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:635  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":634:640  b <= a */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":642:654  errorMessage */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":626:655  require(b <= a, errorMessage) */\n      swap1\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_251:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_253\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_251)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_254:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":665:674  uint256 c */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":681:682  b */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":677:678  a */\n      dup6\n        /* \"contracts/libraries/SafeMath.sol\":677:682  a - b */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":665:682  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":700:701  c */\n      dup1\n        /* \"contracts/libraries/SafeMath.sol\":693:701  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":521:708  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c 4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c\n    data_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee 5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa264697066735822122096970f30cbcae0bfea1e705dfbd46c3ed27c128aec88a529eeff8828698e1bfb64736f6c63430007050033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f5374616b6564204f6c796d7075730000000000000000000000000000000000008152506040518060400160405280600481526020017f734f484d000000000000000000000000000000000000000000000000000000008152506009826003908051906020019062000098929190620004d2565b508160049080519060200190620000b1929190620004d2565b5080600560006101000a81548160ff021916908360ff16021790555050505060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f62000106620002f760201b60201c565b805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206007819055505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a333600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e08000600281905550620002eb6002546611c37937e0800060001981620002d257fe5b06600019036200039d60201b620026f21790919060201c565b600e8190555062000588565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620003935780601f10620003675761010080835404028352916020019162000393565b820191906000526020600020905b8154815290600101906020018083116200037557829003601f168201915b5050505050905090565b6000620003e783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620003ef60201b60201c565b905092915050565b600080831182906200049f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200046357808201518184015260208101905062000446565b50505050905090810190601f168015620004915780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620004ac57fe5b049050838581620004b957fe5b06818502018514620004c757fe5b809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200050a576000855562000556565b82601f106200052557805160ff191683800117855562000556565b8280016001018555821562000556579182015b828111156200055557825182559160200191906001019062000538565b5b50905062000565919062000569565b5090565b5b80821115620005845760008160009055506001016200056a565b5090565b612d7a80620005986000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122096970f30cbcae0bfea1e705dfbd46c3ed27c128aec88a529eeff8828698e1bfb64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B6564204F6C796D707573000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x734F484D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x98 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB1 SWAP3 SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH1 0x0 CHAINID SWAP1 POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x106 PUSH3 0x2F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x2EB PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH3 0x2D2 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH3 0x39D PUSH1 0x20 SHL PUSH3 0x26F2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH3 0x588 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH3 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x367 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x375 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH3 0x3EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH3 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x463 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x446 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x491 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH3 0x4AC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH3 0x4B9 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH3 0x4C7 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x50A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x525 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x556 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x556 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x555 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x538 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x565 SWAP2 SWAP1 PUSH3 0x569 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x584 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x56A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2D7A DUP1 PUSH3 0x598 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 SWAP7 SWAP8 0xF ADDRESS 0xCB 0xCA 0xE0 0xBF 0xEA 0x1E PUSH17 0x5DFBD46C3ED27C128AEC88A529EEFF8828 PUSH10 0x8E1BFB64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "16386:7278:3:-:0;;;17869:210;;;;;;;;;;1704:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17915:1;1792:5;1784;:13;;;;;;;;;;;;:::i;:::-;;1813:7;1803;:17;;;;;;;;;;;;:::i;:::-;;1838:9;1826;;:21;;;;;;;;;;;;;;;;;;1704:148;;;13530:15;13589:9;13578:20;;13671:95;13796:6;:4;;;:6;;:::i;:::-;13780:24;;;;;;13828:10;;;;;;;;;;;;;;;;;13818:21;;;;;;13864:7;13893:4;13647:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13637:272;;;;;;13618:16;:291;;;;13505:411;15443:10;15434:6;;:19;;;;;;;;;;;;;;;;;;15497:6;;;;;;;;;;;15468:37;;15493:1;15468:37;;;;;;;;;;;;17956:10:::2;17942:11;;:24;;;;;;;;;;;;;;;;;;17257:15;17976:12;:39;;;;18044:28;18059:12;;17257:15;17197:1;17188:11;17505:38;;;;;;17197:1;17188:11;17490:54;18044:14;;;;;;:28;;;;:::i;:::-;18025:16;:47;;;;16386:7278:::0;;1932:75;1969:13;1997:5;1990:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1932:75;:::o;961:130:2:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;1038:46;;961:130;;;;:::o;1097:269::-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;16386:7278:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063481c6a751161010457806395d89b41116100a2578063c4d66de811610071578063c4d66de8146108be578063d505accf14610918578063dd62ed3e146109b1578063ee99205c14610a29576101da565b806395d89b411461073f5780639ce110d7146107c2578063a457c2d7146107f6578063a9059cbb1461085a576101da565b806373c69eb7116100de57806373c69eb71461061b5780637965d56d146106875780637ecebe00146106c95780639358928b14610721576101da565b8063481c6a75146105855780635a96ac0a146105b957806370a08231146105c3576101da565b80632986c0e51161017c5780633644e5151161014b5780633644e5151461047b578063395093511461049957806340a5737f146104fd57806346f68ee914610541576101da565b80632986c0e5146104005780632df75cb11461041e57806330adf81f1461043c578063313ce5671461045a576101da565b8063095ea7b3116101b8578063095ea7b3146102b857806318160ddd1461031c5780631bd396741461033a57806323b872dd1461037c576101da565b8063058ecdb4146101df57806306fdde031461022b578063089208d8146102ae575b600080fd5b610215600480360360408110156101f557600080fd5b810190808035906020019092919080359060200190929190505050610a5d565b6040518082815260200191505060405180910390f35b610233610c40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610273578082015181840152602081019050610258565b50505050905090810190601f1680156102a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6610ce2565b005b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e66565b60405180821515815260200191505060405180910390f35b610324610f58565b6040518082815260200191505060405180910390f35b6103666004803603602081101561035057600080fd5b8101908080359060200190929190505050610f62565b6040518082815260200191505060405180910390f35b6103e86004803603606081101561039257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f80565b60405180821515815260200191505060405180910390f35b61040861131a565b6040518082815260200191505060405180910390f35b61042661132c565b6040518082815260200191505060405180910390f35b610444611332565b6040518082815260200191505060405180910390f35b610462611359565b604051808260ff16815260200191505060405180910390f35b610483611370565b6040518082815260200191505060405180910390f35b6104e5600480360360408110156104af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611376565b60405180821515815260200191505060405180910390f35b6105296004803603602081101561051357600080fd5b8101908080359060200190929190505050611572565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165e565b005b61058d611867565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105c1611891565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b6040518082815260200191505060405180910390f35b6106476004803603602081101561063157600080fd5b8101908080359060200190929190505050611a97565b6040518088815260200187815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b6106b36004803603602081101561069d57600080fd5b8101908080359060200190929190505050611ae9565b6040518082815260200191505060405180910390f35b61070b600480360360208110156106df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b6040518082815260200191505060405180910390f35b610729611b57565b6040518082815260200191505060405180910390f35b610747611b9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078757808201518184015260208101905061076c565b50505050905090810190601f1680156107b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ca611c3f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108426004803603604081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c65565b60405180821515815260200191505060405180910390f35b6108a66004803603604081101561087057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef5565b60405180821515815260200191505060405180910390f35b610900600480360360208110156108d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a9565b60405180821515815260200191505060405180910390f35b6109af600480360360e081101561092e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061231e565b005b610a13600480360360408110156109c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612645565b6040518082815260200191505060405180910390f35b610a316126cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab957600080fd5b600080610ac4611b57565b90506000851415610b6557837f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2837f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb26000610b3d61131a565b604051808381526020018281526020019250505060405180910390a260025492505050610c3a565b6000811115610b9c57610b9581610b876002548861273c90919063ffffffff16565b6126f290919063ffffffff16565b9150610ba0565b8491505b610bb5826002546127c290919063ffffffff16565b6002819055506000196fffffffffffffffffffffffffffffffff166002541115610bf5576000196fffffffffffffffffffffffffffffffff166002819055505b610c206002546611c37937e0800060001981610c0d57fe5b06600019036126f290919063ffffffff16565b600e81905550610c3181868661284a565b50600254925050505b92915050565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b6000610f79600e548361273c90919063ffffffff16565b9050919050565b600061101182601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b601060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600061117d83610f62565b90506111d181600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b6000611327600d54611ae9565b905090565b600d5481565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b600061140782601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600d541461164657600080fd5b61164f82610f62565b600d8190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cbb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba60405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611937576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ce16022913960400191505060405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d60405160405180910390a3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611a90600e54600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f290919063ffffffff16565b9050919050565b600c8181548110611aa757600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6000611b00600e54836126f290919063ffffffff16565b9050919050565b6000611b50600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b9050919050565b6000611b98611b87600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a3a565b6002546129c590919063ffffffff16565b905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c355780601f10611c0a57610100808354040283529160200191611c35565b820191906000526020600020905b815481529060010190602001808311611c1857829003601f168201915b5050505050905090565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310611d75576000601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e09565b611d8883826129c590919063ffffffff16565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600080611f0d600e548461273c90919063ffffffff16565b9050611f6181600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546129c590919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ff681600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127c290919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561213f57600080fd5b81600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506611c37937e080006000198161219257fe5b0660001903600f6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6002546040518082815260200191505060405180910390a37f817c653428858ed536dc085c5d8273734c517b55de44b55f5c5877a75e3373a182604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b83421115612394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b888888612404600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0f565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561251e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561259257508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6125e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d036021913960400191505060405180910390fd5b61262e600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a1d565b6126398a8a8a612a33565b50505050505050505050565b6000601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061273483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b1e565b905092915050565b60008083141561274f57600090506127bc565b600082840290508284828161276057fe5b04146127b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d246021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008061287a8561286c670de0b6b3a76400008761273c90919063ffffffff16565b6126f290919063ffffffff16565b9050600c6040518060e001604052808581526020018381526020018781526020016128a3611b57565b81526020018681526020016128b661131a565b8152602001438152509080600181540180825580915050600190039060005260206000209060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050827f917acfbe39be6509ccf7fecb66a7e42ce2be1083c2d7dd3b9b7491dabddb8da442600254604051808381526020018281526020019250505060405180910390a2827f6012dbce857565c4a40974aa5de8373a761fc429077ef0c8c8611d1e20d63fb28261299d61131a565b604051808381526020018281526020019250505060405180910390a260019150509392505050565b6000612a0783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612bfa565b905092915050565b600081600001549050919050565b6001816000016000828254019250508190555050565b80601060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60008083118290612bca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b8f578082015181840152602081019050612b74565b50505050905090810190601f168015612bbc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612bd657fe5b049050838581612be257fe5b06818502018514612bef57fe5b809150509392505050565b6000838311158290612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c6c578082015181840152602081019050612c51565b50505050905090810190601f168015612c995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122096970f30cbcae0bfea1e705dfbd46c3ed27c128aec88a529eeff8828698e1bfb64736f6c63430007050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xEE99205C EQ PUSH2 0xA29 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9CE110D7 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x85A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x73C69EB7 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x73C69EB7 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x7965D56D EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x721 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5C3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x40A5737F EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x541 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2DF75CB1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45A JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x1BD39674 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37C JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x58ECDB4 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x273 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x258 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x426 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58D PUSH2 0x1867 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0x1891 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x729 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x747 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x787 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x76C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7CA PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x842 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x900 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x231E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA31 PUSH2 0x26CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAC4 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0xB65 JUMPI DUP4 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 PUSH1 0x0 PUSH2 0xB3D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 SLOAD SWAP3 POP POP POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP2 PUSH2 0xB87 PUSH1 0x2 SLOAD DUP9 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xBA0 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST PUSH2 0xBB5 DUP3 PUSH1 0x2 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x0 NOT PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xC20 PUSH1 0x2 SLOAD PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0xC0D JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xC31 DUP2 DUP7 DUP7 PUSH2 0x284A JUMP JUMPDEST POP PUSH1 0x2 SLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF79 PUSH1 0xE SLOAD DUP4 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP3 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH2 0x117D DUP4 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D1 DUP2 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1266 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 PUSH1 0xD SLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD EQ PUSH2 0x1646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP3 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CBB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CE1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH1 0xE SLOAD PUSH1 0xF PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH1 0xE SLOAD DUP4 PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B98 PUSH2 0x1B87 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1C35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 LT PUSH2 0x1D75 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1D88 DUP4 DUP3 PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0D PUSH1 0xE SLOAD DUP5 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1F61 DUP2 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x29C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1FF6 DUP2 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x11C37937E08000 PUSH1 0x0 NOT DUP2 PUSH2 0x2192 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 NOT SUB PUSH1 0xF PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x2394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x2404 PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A0F JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2592 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D03 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x262E PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x2639 DUP11 DUP11 DUP11 PUSH2 0x2A33 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2B1E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x274F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2760 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x287A DUP6 PUSH2 0x286C PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28A3 PUSH2 0x1B57 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B6 PUSH2 0x131A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP DUP3 PUSH32 0x917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4 TIMESTAMP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH32 0x6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2 DUP3 PUSH2 0x299D PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A07 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B8F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B74 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BBC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2BD6 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP4 DUP6 DUP2 PUSH2 0x2BE2 JUMPI INVALID JUMPDEST MOD DUP2 DUP6 MUL ADD DUP6 EQ PUSH2 0x2BEF JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C99 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A206D757374206265 KECCAK256 PUSH15 0x6577206F776E657220746F2070756C PUSH13 0x5A65726F537761705065726D69 PUSH21 0x3A20496E76616C6964207369676E61747572655361 PUSH7 0x654D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 SWAP7 SWAP8 0xF ADDRESS 0xCB 0xCA 0xE0 0xBF 0xEA 0x1E PUSH17 0x5DFBD46C3ED27C128AEC88A529EEFF8828 PUSH10 0x8E1BFB64736F6C634300 SMOD SDIV STOP CALLER ",
							"sourceMap": "16386:7278:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18900:869;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1932:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15736:156;;;:::i;:::-;;22378:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2980:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20793:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21845:527;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;21223:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17125:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13352:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2830:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13467:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22843:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18562:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15898:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15518:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16165:217;;;:::i;:::-;;20645:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17095:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20921:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14798;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21087:130;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2133:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16609:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;23167:495;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;21322:358;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18085:471;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13986:749;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21686:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16573:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18900:869;18987:7;16532:15;;;;;;;;;;;16518:29;;:10;:29;;;16509:40;;;;;;19007:20:::1;19037:26:::0;19066:19:::1;:17;:19::i;:::-;19037:48;;19112:1;19101:7;:12;19096:364;;;19146:6;19135:50;19154:15;19171:12;;19135:50;;;;;;;;;;;;;;;;;;;;;;;;19215:6;19204:31;19223:1;19226:7;:5;:7::i;:::-;19204:31;;;;;;;;;;;;;;;;;;;;;;;;19256:12;;19249:19;;;;;;19096:364;19311:1;19290:18;:22;19285:175;;;19343:53;19376:18;19343:27;19356:12;;19343:7;:11;;:27;;;;:::i;:::-;:31;;:53;;;;:::i;:::-;19328:68;;19285:175;;;19442:7;19427:22;;19285:175;19485:32;19503:12;19485;;:16;;:32;;;;:::i;:::-;19470:12;:47;;;;17669:1;17660:11;19548:10;;19533:12;;:25;19528:83;;;17669:1;17660:11;19590:10;;19575:12;:25;;;;19528:83;19640:30;19656:12;;17257:15;17197:1;17188:11;17505:38;;;;;;17197:1;17188:11;17490:54;19640:14;;:30;;;;:::i;:::-;19621:16;:49;;;;19681:51;19695:18;19715:7;19724:6;19681:12;:51::i;:::-;;19750:12;;19743:19;;;;16559:1;18900:869:::0;;;;:::o;1932:75::-;1969:13;1997:5;1990:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1932:75;:::o;15736:156::-;15664:10;15654:20;;:6;;;;;;;;;;;:20;;;15645:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15852:1:::1;15819:37;;15836:6;;;;;;;;;;;15819:37;;;;;;;;;;;;15883:1;15866:6;;:19;;;;;;;;;;;;;;;;;;15736:156::o:0;22378:222::-;22454:4;22512:5;22471:13;:27;22486:10;22471:27;;;;;;;;;;;;;;;:38;22500:7;22471:38;;;;;;;;;;;;;;;:46;;;;22555:7;22533:38;;22543:10;22533:38;;;22564:5;22533:38;;;;;;;;;;;;;;;;;;22589:4;22582:11;;22378:222;;;;:::o;2980:92::-;3033:7;3055:12;;3048:19;;2980:92;:::o;20793:122::-;20854:4;20878:30;20890:16;;20878:6;:10;;:30;;;;:::i;:::-;20871:37;;20793:122;;;:::o;21845:527::-;21936:4;21990:48;22031:5;21990:13;:21;22005:4;21990:21;;;;;;;;;;;;;;;:35;22013:10;21990:35;;;;;;;;;;;;;;;;:39;;:48;;;;:::i;:::-;21952:13;:21;21967:4;21952:21;;;;;;;;;;;;;;;:35;21975:10;21952:35;;;;;;;;;;;;;;;:86;;;;22068:10;22052:66;;22062:4;22052:66;;;22081:13;:21;22096:4;22081:21;;;;;;;;;;;;;;;:35;22104:10;22081:35;;;;;;;;;;;;;;;;22052:66;;;;;;;;;;;;;;;;;;22129:16;22148:23;22164:5;22148:14;:23::i;:::-;22129:42;;22204:34;22228:8;22204:12;:18;22217:4;22204:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;22181:12;:20;22195:4;22181:20;;;;;;;;;;;;;;;:57;;;;22269:32;22291:8;22269:12;:16;22282:2;22269:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;22248:12;:18;22262:2;22248:18;;;;;;;;;;;;;;;:53;;;;22332:2;22316:27;;22326:4;22316:27;;;22336:5;22316:27;;;;;;;;;;;;;;;;;;22361:4;22354:11;;;21845:527;;;;;:::o;21223:93::-;21262:4;21286:23;21302:5;;21286:14;:23::i;:::-;21279:30;;21223:93;:::o;17125:17::-;;;;:::o;13352:108::-;13394:66;13352:108;;;:::o;2830:75::-;2871:5;2891:9;;;;;;;;;;;2884:16;;2830:75;:::o;13467:31::-;;;;:::o;22843:318::-;22934:4;22991:56;23035:10;22991:13;:27;23006:10;22991:27;;;;;;;;;;;;;;;:38;23020:7;22991:38;;;;;;;;;;;;;;;;:42;;:56;;;;:::i;:::-;22950:13;:27;22965:10;22950:27;;;;;;;;;;;;;;;:38;22979:7;22950:38;;;;;;;;;;;;;;;:97;;;;23084:7;23062:71;;23072:10;23062:71;;;23093:13;:27;23108:10;23093:27;;;;;;;;;;;;;;;:38;23122:7;23093:38;;;;;;;;;;;;;;;;23062:71;;;;;;;;;;;;;;;;;;23150:4;23143:11;;22843:318;;;;:::o;18562:174::-;18628:4;15664:10;15654:20;;:6;;;;;;;;;;;:20;;;15645:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18663:1:::1;18654:5;;:10;18645:21;;;::::0;::::1;;18684:24;18700:6;18684:14;:24::i;:::-;18676:5;:32;;;;18725:4;18718:11;;18562:174:::0;;;:::o;15898:257::-;15664:10;15654:20;;:6;;;;;;;;;;;:20;;;15645:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16021:1:::1;16000:23;;:9;:23;;;;15991:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16106:9;16081:36;;16098:6;;;;;;;;;;;16081:36;;;;;;;;;;;;16139:9;16127;;:21;;;;;;;;;;;;;;;;;;15898:257:::0;:::o;15518:88::-;15567:7;15593:6;;;;;;;;;;;15586:13;;15518:88;:::o;16165:217::-;16248:9;;;;;;;;;;;16234:23;;:10;:23;;;16225:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16336:9;;;;;;;;;;;16311:36;;16328:6;;;;;;;;;;;16311:36;;;;;;;;;;;;16366:9;;;;;;;;;;;16357:6;;:18;;;;;;;;;;;;;;;;;;16165:217::o;20645:142::-;20710:7;20737:43;20762:16;;20737:12;:19;20751:3;20737:19;;;;;;;;;;;;;;;;:23;;:43;;;;:::i;:::-;20730:50;;20645:142;;;:::o;17095:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;20921:118::-;20980:4;21004:28;21014:16;;21004:4;:8;;:28;;;;:::i;:::-;20997:35;;20921:118;;;:::o;14798:::-;14859:7;14885:24;:7;:14;14893:5;14885:14;;;;;;;;;;;;;;;:22;:24::i;:::-;14878:31;;14798:118;;;:::o;21087:130::-;21138:4;21162:48;21180:28;21191:15;;;;;;;;;;;21180:9;:28::i;:::-;21162:12;;:16;;:48;;;;:::i;:::-;21155:55;;21087:130;:::o;2133:79::-;2172:13;2200:7;2193:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:79;:::o;16609:26::-;;;;;;;;;;;;;:::o;23167:495::-;23263:4;23279:16;23298:13;:27;23313:10;23298:27;;;;;;;;;;;;;;;:38;23327:7;23298:38;;;;;;;;;;;;;;;;23279:57;;23369:8;23350:15;:27;23346:203;;23434:1;23393:13;:27;23408:10;23393:27;;;;;;;;;;;;;;;:38;23422:7;23393:38;;;;;;;;;;;;;;;:42;;;;23346:203;;;23507:31;23521:15;23507:8;:12;;:31;;;;:::i;:::-;23466:13;:27;23481:10;23466:27;;;;;;;;;;;;;;;:38;23495:7;23466:38;;;;;;;;;;;;;;;:72;;;;23346:203;23585:7;23563:71;;23573:10;23563:71;;;23594:13;:27;23609:10;23594:27;;;;;;;;;;;;;;;:38;23623:7;23594:38;;;;;;;;;;;;;;;;23563:71;;;;;;;;;;;;;;;;;;23651:4;23644:11;;;23167:495;;;;:::o;21322:358::-;21394:4;21410:16;21429:29;21440:16;;21429:5;:9;;:29;;;;:::i;:::-;21410:48;;21497:42;21529:8;21497:12;:26;21511:10;21497:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;21468:12;:26;21482:10;21468:26;;;;;;;;;;;;;;;:71;;;;21570:34;21594:8;21570:12;:18;21584:2;21570:18;;;;;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;21549:12;:18;21563:2;21549:18;;;;;;;;;;;;;;;:55;;;;21641:2;21619:33;;21629:10;21619:33;;;21645:5;21619:33;;;;;;;;;;;;;;;;;;21669:4;21662:11;;;21322:358;;;;:::o;18085:471::-;18152:4;18192:11;;;;;;;;;;;18178:25;;:10;:25;;;18169:36;;;;;;18252:1;18224:30;;:16;:30;;;;18215:41;;;;;;18284:16;18266:15;;:34;;;;;;;;;;;;;;;;;;17257:15;17197:1;17188:11;17505:38;;;;;;17197:1;17188:11;17490:54;18310:12;:31;18324:15;;;;;;;;;;;18310:31;;;;;;;;;;;;;;;:44;;;;18394:15;;;;;;;;;;;18370:55;;18388:3;18370:55;;;18411:12;;18370:55;;;;;;;;;;;;;;;;;;18440:45;18467:16;18440:45;;;;;;;;;;;;;;;;;;;;18526:1;18504:11;;:24;;;;;;;;;;;;;;;;;;18545:4;18538:11;;18085:471;;;:::o;13986:749::-;14222:8;14203:15;:27;;14195:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14270:18;13394:66;14324:15;;14341:5;14348:7;14357:6;14365:24;:7;:14;14373:5;14365:14;;;;;;;;;;;;;;;:22;:24::i;:::-;14391:8;14313:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14303:98;;;;;;14270:131;;14412:13;14462:6;14471:16;;14489:10;14438:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14428:73;;;;;;14412:89;;14512:14;14529:25;14539:5;14546:1;14549;14552;14529:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14512:42;;14590:1;14572:20;;:6;:20;;;;:39;;;;;14606:5;14596:15;;:6;:15;;;14572:39;14564:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14660:26;:7;:14;14668:5;14660:14;;;;;;;;;;;;;;;:24;:26::i;:::-;14696:32;14705:5;14712:7;14721:6;14696:8;:32::i;:::-;13986:749;;;;;;;;;;:::o;21686:153::-;21771:7;21798:13;:23;21813:6;21798:23;;;;;;;;;;;;;;;:34;21823:7;21798:34;;;;;;;;;;;;;;;;21791:41;;21686:153;;;;:::o;16573:30::-;;;;;;;;;;;;;:::o;961:130:2:-;1019:7;1045:39;1049:1;1052;1045:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;1038:46;;961:130;;;;:::o;714:241::-;772:7;800:1;795;:6;791:45;;;824:1;817:8;;;;791:45;846:9;862:1;858;:5;846:17;;890:1;885;881;:5;;;;;;:10;873:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:1;940:8;;;714:241;;;;;:::o;199:176::-;257:7;276:9;292:1;288;:5;276:17;;316:1;311;:6;;303:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:1;360:8;;;199:176;;;;:::o;19959:680:3:-;20056:4;20073:18;20094:47;20119:20;20094:19;20107:4;20094:7;:11;;:19;;;;:::i;:::-;:23;;:47;;;;:::i;:::-;20073:68;;20152:7;20166:311;;;;;;;;20196:6;20166:311;;;;20224:13;20166:311;;;;20285:20;20166:311;;;;20337:19;:17;:19::i;:::-;20166:311;;;;20385:7;20166:311;;;;20413:7;:5;:7::i;:::-;20166:311;;;;20454:12;20166:311;;;20152:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20513:6;20502:50;20521:15;20538:12;;20502:50;;;;;;;;;;;;;;;;;;;;;;;;20578:6;20567:43;20586:13;20601:7;:5;:7::i;:::-;20567:43;;;;;;;;;;;;;;;;;;;;;;;;20628:4;20621:11;;;19959:680;;;;;:::o;381:134:2:-;439:7;465:43;469:1;472;465:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;458:50;;381:134;;;;:::o;11238:112:3:-;11303:7;11329;:14;;;11322:21;;11238:112;;;:::o;11356:178::-;11526:1;11508:7;:14;;;:19;;;;;;;;;;;11356:178;:::o;22642:195::-;22777:5;22745:13;:20;22759:5;22745:20;;;;;;;;;;;;;;;:29;22766:7;22745:29;;;;;;;;;;;;;;;:37;;;;22814:7;22797:33;;22807:5;22797:33;;;22823:5;22797:33;;;;;;;;;;;;;;;;;;22642:195;;;:::o;1097:269:2:-;1183:7;1214:1;1210;:5;1217:12;1202:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:9;1256:1;1252;:5;;;;;;1240:17;;1291:1;1287;:5;;;;;;1283:1;1279;:5;:13;1274:1;:18;1267:26;;;;1358:1;1351:8;;;1097:269;;;;;:::o;521:187::-;607:7;639:1;634;:6;;642:12;626:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:9;681:1;677;:5;665:17;;700:1;693:8;;;521:187;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2328400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"INDEX()": "1073",
								"PERMIT_TYPEHASH()": "301",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22408",
								"balanceForGons(uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"circulatingSupply()": "infinite",
								"decimals()": "1167",
								"decreaseAllowance(address,uint256)": "infinite",
								"gonsForBalance(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"index()": "infinite",
								"initialize(address)": "68507",
								"initializer()": "1114",
								"manager()": "1101",
								"name()": "infinite",
								"nonces(address)": "1334",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"pullManagement()": "infinite",
								"pushManagement(address)": "infinite",
								"rebase(uint256,uint256)": "infinite",
								"rebases(uint256)": "7042",
								"renounceManagement()": "24353",
								"setIndex(uint256)": "infinite",
								"stakingContract()": "1157",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_storeRebase(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17869,
									"end": 18079,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "5374616B6564204F6C796D707573000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "734F484D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17915,
									"end": 17916,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1792,
									"end": 1797,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1789,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1784,
									"end": 1797,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1813,
									"end": 1820,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1810,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1820,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1838,
									"end": 1847,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1835,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1826,
									"end": 1835,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1826,
									"end": 1847,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1704,
									"end": 1852,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13530,
									"end": 13545,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 13589,
									"end": 13598,
									"name": "CHAINID",
									"source": 3
								},
								{
									"begin": 13578,
									"end": 13598,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 13578,
									"end": 13598,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13671,
									"end": 13766,
									"name": "PUSH",
									"source": 3,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 13796,
									"end": 13802,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 13796,
									"end": 13800,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 13796,
									"end": 13800,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13796,
									"end": 13800,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 13796,
									"end": 13802,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13796,
									"end": 13802,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 13796,
									"end": 13802,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 13796,
									"end": 13802,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 13796,
									"end": 13802,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 13780,
									"end": 13804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 13780,
									"end": 13804,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 13780,
									"end": 13804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 13780,
									"end": 13804,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13780,
									"end": 13804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13780,
									"end": 13804,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "PUSH",
									"source": 3,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13828,
									"end": 13838,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13818,
									"end": 13839,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 13818,
									"end": 13839,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 13818,
									"end": 13839,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 13818,
									"end": 13839,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13818,
									"end": 13839,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13818,
									"end": 13839,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 13864,
									"end": 13871,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 13893,
									"end": 13897,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 13647,
									"end": 13908,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 13637,
									"end": 13909,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 13637,
									"end": 13909,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 13637,
									"end": 13909,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 13637,
									"end": 13909,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 13637,
									"end": 13909,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 13637,
									"end": 13909,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 13618,
									"end": 13634,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 13618,
									"end": 13909,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 13618,
									"end": 13909,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 13618,
									"end": 13909,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 13618,
									"end": 13909,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 13505,
									"end": 13916,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15443,
									"end": 15453,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15440,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 15434,
									"end": 15440,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 15434,
									"end": 15453,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15497,
									"end": 15503,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15493,
									"end": 15494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15468,
									"end": 15505,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 17956,
									"end": 17966,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17953,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 17942,
									"end": 17953,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 17942,
									"end": 17966,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17257,
									"end": 17272,
									"name": "PUSH",
									"source": 3,
									"value": "11C37937E08000"
								},
								{
									"begin": 17976,
									"end": 17988,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 17976,
									"end": 18015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17976,
									"end": 18015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17976,
									"end": 18015,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 17976,
									"end": 18015,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 18059,
									"end": 18071,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 18059,
									"end": 18071,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 17257,
									"end": 17272,
									"name": "PUSH",
									"source": 3,
									"value": "11C37937E08000"
								},
								{
									"begin": 17197,
									"end": 17198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 17188,
									"end": 17199,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 17505,
									"end": 17543,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17505,
									"end": 17543,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 17505,
									"end": 17543,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 17505,
									"end": 17543,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 17505,
									"end": 17543,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 17505,
									"end": 17543,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17505,
									"end": 17543,
									"name": "MOD",
									"source": 3
								},
								{
									"begin": 17197,
									"end": 17198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 17188,
									"end": 17199,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 17490,
									"end": 17544,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18058,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 18044,
									"end": 18058,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 18044,
									"end": 18058,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18058,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551740"
								},
								{
									"begin": 18044,
									"end": 18058,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18058,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 18044,
									"end": 18072,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 18025,
									"end": 18041,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 18025,
									"end": 18072,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 18025,
									"end": 18072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 18025,
									"end": 18072,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 18025,
									"end": 18072,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1932,
									"end": 2007,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1932,
									"end": 2007,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1969,
									"end": 1982,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 1997,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1990,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1932,
									"end": 2007,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1932,
									"end": 2007,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1053,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "1A"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1048,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1045,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1038,
									"end": 1084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 961,
									"end": 1091,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1183,
									"end": 1190,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1210,
									"end": 1211,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1210,
									"end": 1215,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1217,
									"end": 1229,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 1230,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1240,
									"end": 1249,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1252,
									"end": 1253,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1291,
									"end": 1292,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1287,
									"end": 1292,
									"name": "MOD",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1279,
									"end": 1280,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1279,
									"end": 1292,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1275,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1267,
									"end": 1293,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1351,
									"end": 1359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1097,
									"end": 1366,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 16386,
									"end": 23664,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096970f30cbcae0bfea1e705dfbd46c3ed27c128aec88a529eeff8828698e1bfb64736f6c63430007050033",
									".code": [
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "481C6A75"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "C4D66DE8"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "C4D66DE8"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "D505ACCF"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "EE99205C"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "9CE110D7"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "73C69EB7"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "73C69EB7"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "7965D56D"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "7ECEBE00"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "9358928B"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "481C6A75"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "5A96AC0A"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "2986C0E5"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "3644E515"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "3644E515"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "40A5737F"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "46F68EE9"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "2986C0E5"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "2DF75CB1"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "30ADF81F"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "1BD39674"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "58ECDB4"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "89208D8"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 23664,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18987,
											"end": 18994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16532,
											"end": 16547,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16518,
											"end": 16547,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16518,
											"end": 16547,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16518,
											"end": 16528,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 16518,
											"end": 16547,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16518,
											"end": 16547,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16518,
											"end": 16547,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16509,
											"end": 16549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 16509,
											"end": 16549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16509,
											"end": 16549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16509,
											"end": 16549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16509,
											"end": 16549,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16509,
											"end": 16549,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 16509,
											"end": 16549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19007,
											"end": 19027,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19037,
											"end": 19063,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19066,
											"end": 19085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 19066,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 19066,
											"end": 19085,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 19066,
											"end": 19085,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 19066,
											"end": 19085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19037,
											"end": 19085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19037,
											"end": 19085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19112,
											"end": 19113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19101,
											"end": 19108,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 19101,
											"end": 19113,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 19096,
											"end": 19460,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 19096,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 19096,
											"end": 19460,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 19146,
											"end": 19152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "PUSH",
											"source": 3,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 19154,
											"end": 19169,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 19171,
											"end": 19183,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19171,
											"end": 19183,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19135,
											"end": 19185,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 19215,
											"end": 19221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "PUSH",
											"source": 3,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 19223,
											"end": 19224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19226,
											"end": 19233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 19226,
											"end": 19231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 19226,
											"end": 19233,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19233,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 19226,
											"end": 19233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19204,
											"end": 19235,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 19256,
											"end": 19268,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19256,
											"end": 19268,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19249,
											"end": 19268,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19249,
											"end": 19268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19249,
											"end": 19268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19249,
											"end": 19268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19249,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 19249,
											"end": 19268,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19096,
											"end": 19460,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 19096,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19311,
											"end": 19312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19290,
											"end": 19308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19290,
											"end": 19312,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 19376,
											"end": 19394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 19356,
											"end": 19368,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19356,
											"end": 19368,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19350,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 19343,
											"end": 19354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 19343,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 19343,
											"end": 19374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 19343,
											"end": 19396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19328,
											"end": 19396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19328,
											"end": 19396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19442,
											"end": 19449,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 19427,
											"end": 19449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19427,
											"end": 19449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 19285,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 19503,
											"end": 19515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19485,
											"end": 19497,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19485,
											"end": 19497,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19485,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 19485,
											"end": 19501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 19485,
											"end": 19517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19470,
											"end": 19482,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19470,
											"end": 19517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19470,
											"end": 19517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19470,
											"end": 19517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 19470,
											"end": 19517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17669,
											"end": 17670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17660,
											"end": 17671,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 19548,
											"end": 19558,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19548,
											"end": 19558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19533,
											"end": 19545,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19533,
											"end": 19545,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19533,
											"end": 19558,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 19528,
											"end": 19611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 19528,
											"end": 19611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 19528,
											"end": 19611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17669,
											"end": 17670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17660,
											"end": 17671,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 19590,
											"end": 19600,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19590,
											"end": 19600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19575,
											"end": 19587,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19575,
											"end": 19600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19575,
											"end": 19600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19575,
											"end": 19600,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 19575,
											"end": 19600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19528,
											"end": 19611,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 19528,
											"end": 19611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 19656,
											"end": 19668,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19656,
											"end": 19668,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17257,
											"end": 17272,
											"name": "PUSH",
											"source": 3,
											"value": "11C37937E08000"
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17199,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17199,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17544,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 19654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 19640,
											"end": 19654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 19640,
											"end": 19670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19621,
											"end": 19637,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 19621,
											"end": 19670,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19621,
											"end": 19670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19621,
											"end": 19670,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 19621,
											"end": 19670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19681,
											"end": 19732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 19695,
											"end": 19713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19715,
											"end": 19722,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 19724,
											"end": 19730,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 19681,
											"end": 19693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 19681,
											"end": 19732,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 19681,
											"end": 19732,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 19681,
											"end": 19732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19681,
											"end": 19732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19750,
											"end": 19762,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 19750,
											"end": 19762,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19743,
											"end": 19762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16559,
											"end": 16560,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 16559,
											"end": 16560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18900,
											"end": 19769,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 1982,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1997,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 2007,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15852,
											"end": 15853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15836,
											"end": 15842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15883,
											"end": 15884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15866,
											"end": 15872,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15866,
											"end": 15872,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15736,
											"end": 15892,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22454,
											"end": 22458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22512,
											"end": 22517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22484,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22486,
											"end": 22496,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22471,
											"end": 22498,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22500,
											"end": 22507,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22471,
											"end": 22509,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22471,
											"end": 22517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22555,
											"end": 22562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22543,
											"end": 22553,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22564,
											"end": 22569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22571,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 22589,
											"end": 22593,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22582,
											"end": 22593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22582,
											"end": 22593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22378,
											"end": 22600,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3048,
											"end": 3067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3072,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20854,
											"end": 20858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 20890,
											"end": 20906,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 20890,
											"end": 20906,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 20878,
											"end": 20884,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20878,
											"end": 20888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 20878,
											"end": 20888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 20878,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20871,
											"end": 20908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20871,
											"end": 20908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20793,
											"end": 20915,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21936,
											"end": 21940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 22031,
											"end": 22036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22003,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22005,
											"end": 22009,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21990,
											"end": 22011,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22013,
											"end": 22023,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22025,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 21990,
											"end": 22029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 21990,
											"end": 22038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21965,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21967,
											"end": 21971,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21952,
											"end": 21973,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21975,
											"end": 21985,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21952,
											"end": 21987,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 22038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 22038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 22038,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 21952,
											"end": 22038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22068,
											"end": 22078,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22062,
											"end": 22066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22081,
											"end": 22094,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22096,
											"end": 22100,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22081,
											"end": 22102,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22104,
											"end": 22114,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22081,
											"end": 22116,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22052,
											"end": 22118,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 22129,
											"end": 22145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22148,
											"end": 22171,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 22164,
											"end": 22169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22148,
											"end": 22162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 22148,
											"end": 22171,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22148,
											"end": 22171,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 22148,
											"end": 22171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22129,
											"end": 22171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22129,
											"end": 22171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 22228,
											"end": 22236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22216,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22217,
											"end": 22221,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22222,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 22204,
											"end": 22226,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 22204,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22193,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22195,
											"end": 22199,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22181,
											"end": 22201,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22238,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22181,
											"end": 22238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 22291,
											"end": 22299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22281,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22282,
											"end": 22284,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22285,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 22269,
											"end": 22289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 22269,
											"end": 22301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22260,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22262,
											"end": 22264,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22301,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22248,
											"end": 22301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22332,
											"end": 22334,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22326,
											"end": 22330,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22336,
											"end": 22341,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 22361,
											"end": 22365,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22354,
											"end": 22365,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22354,
											"end": 22365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22354,
											"end": 22365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21845,
											"end": 22372,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21286,
											"end": 21309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 21302,
											"end": 21307,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 21302,
											"end": 21307,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21286,
											"end": 21300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 21286,
											"end": 21309,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21286,
											"end": 21309,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 21286,
											"end": 21309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21279,
											"end": 21309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21279,
											"end": 21309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21223,
											"end": 21316,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17125,
											"end": 17142,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13394,
											"end": 13460,
											"name": "PUSH",
											"source": 3,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13460,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2905,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13498,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 23035,
											"end": 23045,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23004,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23006,
											"end": 23016,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22991,
											"end": 23018,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23020,
											"end": 23027,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23029,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 22991,
											"end": 23033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 22991,
											"end": 23047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22963,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22965,
											"end": 22975,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22950,
											"end": 22977,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22979,
											"end": 22986,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22950,
											"end": 22988,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 23047,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 23047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 23047,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22950,
											"end": 23047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23084,
											"end": 23091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23072,
											"end": 23082,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 23093,
											"end": 23106,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23108,
											"end": 23118,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23093,
											"end": 23120,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23122,
											"end": 23129,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23093,
											"end": 23131,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23062,
											"end": 23133,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 23150,
											"end": 23154,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 23143,
											"end": 23154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23143,
											"end": 23154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22843,
											"end": 23161,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18628,
											"end": 18632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18663,
											"end": 18664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18654,
											"end": 18659,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 18654,
											"end": 18659,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18654,
											"end": 18664,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18645,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 18645,
											"end": 18666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18645,
											"end": 18666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18645,
											"end": 18666,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18645,
											"end": 18666,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18645,
											"end": 18666,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 18645,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18684,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 18700,
											"end": 18706,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18684,
											"end": 18698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 18684,
											"end": 18708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18684,
											"end": 18708,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 18684,
											"end": 18708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18676,
											"end": 18681,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 18676,
											"end": 18708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18676,
											"end": 18708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18676,
											"end": 18708,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 18676,
											"end": 18708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18725,
											"end": 18729,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 18718,
											"end": 18729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18718,
											"end": 18729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18562,
											"end": 18736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15664,
											"end": 15674,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15654,
											"end": 15674,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 15645,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16021,
											"end": 16022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16000,
											"end": 16023,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH data",
											"source": 3,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 15991,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16106,
											"end": 16115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "EA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16081,
											"end": 16117,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 16139,
											"end": 16148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16136,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 16127,
											"end": 16136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15898,
											"end": 16155,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15567,
											"end": 15574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15518,
											"end": 15606,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16244,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16234,
											"end": 16257,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH data",
											"source": 3,
											"value": "4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 16225,
											"end": 16296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16336,
											"end": 16345,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "AA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16311,
											"end": 16347,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16366,
											"end": 16375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 16357,
											"end": 16375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16165,
											"end": 16382,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20710,
											"end": 20717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 20762,
											"end": 20778,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 20762,
											"end": 20778,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20749,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20751,
											"end": 20754,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 20737,
											"end": 20760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 20737,
											"end": 20780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20730,
											"end": 20780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20730,
											"end": 20780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20645,
											"end": 20787,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17095,
											"end": 17118,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20980,
											"end": 20984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 21014,
											"end": 21030,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 21014,
											"end": 21030,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21004,
											"end": 21008,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 21004,
											"end": 21012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 21004,
											"end": 21012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 21004,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20997,
											"end": 21032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20997,
											"end": 21032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20921,
											"end": 21039,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14859,
											"end": 14866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 14885,
											"end": 14892,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14898,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14899,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14885,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14878,
											"end": 14909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14878,
											"end": 14909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14798,
											"end": 14916,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21138,
											"end": 21142,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 21180,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21191,
											"end": 21206,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21180,
											"end": 21189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 21180,
											"end": 21208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21180,
											"end": 21208,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 21180,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21162,
											"end": 21174,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 21162,
											"end": 21174,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21162,
											"end": 21178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 21162,
											"end": 21178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 21162,
											"end": 21210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21155,
											"end": 21210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21155,
											"end": 21210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21087,
											"end": 21217,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16609,
											"end": 16635,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23263,
											"end": 23267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23279,
											"end": 23295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23311,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23313,
											"end": 23323,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23298,
											"end": 23325,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23327,
											"end": 23334,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23336,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23369,
											"end": 23377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23350,
											"end": 23365,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23350,
											"end": 23377,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23434,
											"end": 23435,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23393,
											"end": 23406,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23408,
											"end": 23418,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23393,
											"end": 23420,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23422,
											"end": 23429,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23393,
											"end": 23431,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23435,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23393,
											"end": 23435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 23521,
											"end": 23536,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 23507,
											"end": 23519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 23507,
											"end": 23538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23479,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23481,
											"end": 23491,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23466,
											"end": 23493,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23495,
											"end": 23502,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23466,
											"end": 23504,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23538,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23466,
											"end": 23538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 23346,
											"end": 23549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23585,
											"end": 23592,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23573,
											"end": 23583,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 23594,
											"end": 23607,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23609,
											"end": 23619,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23594,
											"end": 23621,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23623,
											"end": 23630,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23594,
											"end": 23632,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23563,
											"end": 23634,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 23651,
											"end": 23655,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 23644,
											"end": 23655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23644,
											"end": 23655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23644,
											"end": 23655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23167,
											"end": 23662,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21394,
											"end": 21398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21410,
											"end": 21426,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 21440,
											"end": 21456,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 21440,
											"end": 21456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21429,
											"end": 21434,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 21429,
											"end": 21438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 21429,
											"end": 21438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 21429,
											"end": 21458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21410,
											"end": 21458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21410,
											"end": 21458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 21529,
											"end": 21537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21509,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21511,
											"end": 21521,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21523,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 21497,
											"end": 21527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 21497,
											"end": 21539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21480,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21482,
											"end": 21492,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21539,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21539,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 21468,
											"end": 21539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 21594,
											"end": 21602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21582,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21584,
											"end": 21586,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 21570,
											"end": 21592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 21570,
											"end": 21604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21561,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21563,
											"end": 21565,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21549,
											"end": 21567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21604,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 21549,
											"end": 21604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21641,
											"end": 21643,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21629,
											"end": 21639,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 21645,
											"end": 21650,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21619,
											"end": 21652,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 21669,
											"end": 21673,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 21662,
											"end": 21673,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21662,
											"end": 21673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21662,
											"end": 21673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21322,
											"end": 21680,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18152,
											"end": 18156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18192,
											"end": 18203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18178,
											"end": 18188,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18169,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 18169,
											"end": 18205,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18169,
											"end": 18205,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18205,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18169,
											"end": 18205,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18169,
											"end": 18205,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 18169,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18252,
											"end": 18253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18254,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18224,
											"end": 18254,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18224,
											"end": 18240,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18224,
											"end": 18254,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18224,
											"end": 18254,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18224,
											"end": 18254,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18224,
											"end": 18254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18215,
											"end": 18256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 18215,
											"end": 18256,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18215,
											"end": 18256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18215,
											"end": 18256,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18215,
											"end": 18256,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18215,
											"end": 18256,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 18215,
											"end": 18256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18284,
											"end": 18300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18281,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 18266,
											"end": 18281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 18266,
											"end": 18300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17257,
											"end": 17272,
											"name": "PUSH",
											"source": 3,
											"value": "11C37937E08000"
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17199,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17505,
											"end": 17543,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17188,
											"end": 17199,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17490,
											"end": 17544,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18322,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18324,
											"end": 18339,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18310,
											"end": 18341,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18354,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 18310,
											"end": 18354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18394,
											"end": 18409,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18388,
											"end": 18391,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18411,
											"end": 18423,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 18411,
											"end": 18423,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18370,
											"end": 18425,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "PUSH",
											"source": 3,
											"value": "817C653428858ED536DC085C5D8273734C517B55DE44B55F5C5877A75E3373A1"
										},
										{
											"begin": 18467,
											"end": 18483,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18440,
											"end": 18485,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 18526,
											"end": 18527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18504,
											"end": 18515,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 18504,
											"end": 18515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 18504,
											"end": 18528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18545,
											"end": 18549,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 18538,
											"end": 18549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18538,
											"end": 18549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18085,
											"end": 18556,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14222,
											"end": 14230,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14203,
											"end": 14218,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 14203,
											"end": 14230,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 14203,
											"end": 14230,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "5065726D69743A206578706972656420646561646C696E650000000000000000"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 14195,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14270,
											"end": 14288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13394,
											"end": 13460,
											"name": "PUSH",
											"source": 3,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 14324,
											"end": 14339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14324,
											"end": 14339,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14341,
											"end": 14346,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 14348,
											"end": 14355,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 14357,
											"end": 14363,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 14365,
											"end": 14372,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14373,
											"end": 14378,
											"name": "DUP15",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14365,
											"end": 14379,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14365,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 14365,
											"end": 14389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14365,
											"end": 14389,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 14365,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14391,
											"end": 14399,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14313,
											"end": 14400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14303,
											"end": 14401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14303,
											"end": 14401,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14303,
											"end": 14401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14303,
											"end": 14401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14303,
											"end": 14401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14303,
											"end": 14401,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14270,
											"end": 14401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14270,
											"end": 14401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14412,
											"end": 14425,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14468,
											"name": "PUSH",
											"source": 3,
											"value": "1901"
										},
										{
											"begin": 14471,
											"end": 14487,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 14471,
											"end": 14487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 14489,
											"end": 14499,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "F0"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14438,
											"end": 14500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14428,
											"end": 14501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14428,
											"end": 14501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14428,
											"end": 14501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14428,
											"end": 14501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14428,
											"end": 14501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14428,
											"end": 14501,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14412,
											"end": 14501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14412,
											"end": 14501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14512,
											"end": 14526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14539,
											"end": 14544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14546,
											"end": 14547,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14549,
											"end": 14550,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14552,
											"end": 14553,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14529,
											"end": 14554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14512,
											"end": 14554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14512,
											"end": 14554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14590,
											"end": 14591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14592,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 14572,
											"end": 14611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14606,
											"end": 14611,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 14596,
											"end": 14611,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14596,
											"end": 14611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14596,
											"end": 14602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14596,
											"end": 14611,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14596,
											"end": 14611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14596,
											"end": 14611,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14611,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 14572,
											"end": 14611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH data",
											"source": 3,
											"value": "5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 14564,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 14660,
											"end": 14667,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14673,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14660,
											"end": 14674,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14660,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 14660,
											"end": 14686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14660,
											"end": 14686,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 14660,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14696,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 14705,
											"end": 14710,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 14712,
											"end": 14719,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 14721,
											"end": 14727,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 14696,
											"end": 14704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 14696,
											"end": 14728,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14696,
											"end": 14728,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 14696,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14735,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21771,
											"end": 21778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21798,
											"end": 21811,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21813,
											"end": 21819,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21798,
											"end": 21821,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21823,
											"end": 21830,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21798,
											"end": 21832,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 21791,
											"end": 21832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21791,
											"end": 21832,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21686,
											"end": 21839,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16573,
											"end": 16603,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1045,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1091,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 772,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 795,
											"end": 801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 791,
											"end": 836,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 791,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 791,
											"end": 836,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 863,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 858,
											"end": 863,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 846,
											"end": 863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 890,
											"end": 891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 881,
											"end": 886,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 881,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 881,
											"end": 891,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH data",
											"source": 2,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 873,
											"end": 929,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 873,
											"end": 929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 940,
											"end": 948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 940,
											"end": 948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 955,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 714,
											"end": 955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 955,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 257,
											"end": 264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 292,
											"end": 293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 288,
											"end": 289,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 288,
											"end": 293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 276,
											"end": 293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 311,
											"end": 312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 311,
											"end": 317,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 311,
											"end": 317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 303,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 303,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 360,
											"end": 368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 360,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 199,
											"end": 375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 199,
											"end": 375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 199,
											"end": 375,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20056,
											"end": 20060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20073,
											"end": 20091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 20119,
											"end": 20139,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 20107,
											"end": 20111,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 20094,
											"end": 20101,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 20094,
											"end": 20105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 20094,
											"end": 20113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 20094,
											"end": 20117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 20094,
											"end": 20141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20073,
											"end": 20141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20073,
											"end": 20141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20159,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20196,
											"end": 20202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20224,
											"end": 20237,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20285,
											"end": 20305,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20337,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 20337,
											"end": 20354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 20337,
											"end": 20356,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20337,
											"end": 20356,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 20337,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20385,
											"end": 20392,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20413,
											"end": 20420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 20413,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 20413,
											"end": 20420,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20413,
											"end": 20420,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 20413,
											"end": 20420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20454,
											"end": 20466,
											"name": "NUMBER",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20166,
											"end": 20477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20152,
											"end": 20478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20513,
											"end": 20519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "PUSH",
											"source": 3,
											"value": "917ACFBE39BE6509CCF7FECB66A7E42CE2BE1083C2D7DD3B9B7491DABDDB8DA4"
										},
										{
											"begin": 20521,
											"end": 20536,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 20538,
											"end": 20550,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 20538,
											"end": 20550,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20502,
											"end": 20552,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 20578,
											"end": 20584,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "PUSH",
											"source": 3,
											"value": "6012DBCE857565C4A40974AA5DE8373A761FC429077EF0C8C8611D1E20D63FB2"
										},
										{
											"begin": 20586,
											"end": 20599,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20601,
											"end": 20608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 20601,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 20601,
											"end": 20608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20601,
											"end": 20608,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 20601,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20567,
											"end": 20610,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 20628,
											"end": 20632,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 20621,
											"end": 20632,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20621,
											"end": 20632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20621,
											"end": 20632,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19959,
											"end": 20639,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 472,
											"end": 473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 465,
											"end": 508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 458,
											"end": 508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 381,
											"end": 515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 381,
											"end": 515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 381,
											"end": 515,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11238,
											"end": 11350,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 11238,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11303,
											"end": 11310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11343,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11238,
											"end": 11350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11238,
											"end": 11350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11238,
											"end": 11350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11238,
											"end": 11350,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11356,
											"end": 11534,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 11356,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11508,
											"end": 11515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11356,
											"end": 11534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11356,
											"end": 11534,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 22642,
											"end": 22837,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 22642,
											"end": 22837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22777,
											"end": 22782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22758,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22759,
											"end": 22764,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22745,
											"end": 22765,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22766,
											"end": 22773,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22745,
											"end": 22774,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22782,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22782,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22745,
											"end": 22782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22814,
											"end": 22821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22807,
											"end": 22812,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22823,
											"end": 22828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22797,
											"end": 22830,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 22642,
											"end": 22837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22642,
											"end": 22837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22642,
											"end": 22837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22642,
											"end": 22837,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1292,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1267,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1366,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 607,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 634,
											"end": 640,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 634,
											"end": 640,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 642,
											"end": 654,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 626,
											"end": 655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 626,
											"end": 655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 677,
											"end": 682,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 665,
											"end": 682,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 700,
											"end": 701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 693,
											"end": 701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 693,
											"end": 701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 521,
											"end": 708,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 521,
											"end": 708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 521,
											"end": 708,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4DE71FBD3469E1B7FC89A70805AE86972C680281E629F271AB7471FD6321445C": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
										"5EF653EDFC38C403EA52D691304FEFFA27A665E594B07A1719AC6B055D64DBEE": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"INDEX()": "2df75cb1",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceForGons(uint256)": "7965d56d",
							"balanceOf(address)": "70a08231",
							"circulatingSupply()": "9358928b",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"gonsForBalance(uint256)": "1bd39674",
							"increaseAllowance(address,uint256)": "39509351",
							"index()": "2986c0e5",
							"initialize(address)": "c4d66de8",
							"initializer()": "9ce110d7",
							"manager()": "481c6a75",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"pullManagement()": "5a96ac0a",
							"pushManagement(address)": "46f68ee9",
							"rebase(uint256,uint256)": "058ecdb4",
							"rebases(uint256)": "73c69eb7",
							"renounceManagement()": "089208d8",
							"setIndex(uint256)": "40a5737f",
							"stakingContract()": "ee99205c",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LogRebase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"}],\"name\":\"LogStakingContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LogSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gons\",\"type\":\"uint256\"}],\"name\":\"balanceForGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"gonsForBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingContract_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"profit_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epoch_\",\"type\":\"uint256\"}],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rebases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountRebased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberOccured\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_INDEX\",\"type\":\"uint256\"}],\"name\":\"setIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.\"},\"rebase(uint256,uint256)\":{\"params\":{\"profit_\":\"uint256\"},\"returns\":{\"_0\":\"uint256\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rebase(uint256,uint256)\":{\"notice\":\"increases sOHM supply to increase staking balances relative to profit_\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sOHM.sol\":\"sOlympus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xaef2d7d42eb10852e00f6ac29249f435cf5fd4391fbeb151e04c34558bf22ad7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c8befcd3203d01429bfc37c550b7535509623141376b65e4caf2cb7100ad503\",\"dweb:/ipfs/QmPF29x7Cp4BVf1y1NRsvdb7EDtx6KchjP9gqaSqdyxHRe\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x21514997ee188f5f8a0daa04e753e8351fa4eb63f5a58dd83db476ce843e06d2\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://beb38d20dbe4e9e63a494f5c77e0aea8c02b2d3d65245662155d2637cfb47e18\",\"dweb:/ipfs/QmNnrPXntFNVATQboeTbFtQcfkziQ2wJiUKrzsggacSA3z\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6d3320fabf88899419574e2eb69b48fb5e05ef1eeedbc8e780a6f1731184f2b7\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://575afee9386dcde7b4f734c31d19ca707cf405568ebf17cf84a053074a0fa496\",\"dweb:/ipfs/QmZaE7QXR14sJi4oK4NxW2g5YoFkGFMtGdDBBNHHzCuLCL\"]},\"contracts/sOHM.sol\":{\"keccak256\":\"0xd6e42f13272800809eeaaeb2ea1e645df73e950c1e6776e2a460ee0b712e89ca\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8ececdb358bb433ff02f75067ff9c70e19a11ad981f101c57581db9b6eec7db\",\"dweb:/ipfs/QmZLk6UUauA6FSHMLtZSh97MHHNGKtWLG32G9xBidBDiqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 881,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 887,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 889,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 891,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 893,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 895,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1442,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)1364_storage)"
							},
							{
								"astId": 1447,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 1617,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1619,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_newOwner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1762,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "stakingContract",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1764,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "initializer",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1802,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "rebases",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_struct(Rebase)1799_storage)dyn_storage"
							},
							{
								"astId": 1804,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "INDEX",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1835,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1839,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1845,
								"contract": "contracts/sOHM.sol:sOlympus",
								"label": "_allowedValue",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Rebase)1799_storage)dyn_storage": {
								"base": "t_struct(Rebase)1799_storage",
								"encoding": "dynamic_array",
								"label": "struct sOlympus.Rebase[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1364_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1364_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1364_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1363,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Rebase)1799_storage": {
								"encoding": "inplace",
								"label": "struct sOlympus.Rebase",
								"members": [
									{
										"astId": 1786,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "epoch",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1788,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "rebase",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1790,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedBefore",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1792,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "totalStakedAfter",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1794,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "amountRebased",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1796,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "index",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1798,
										"contract": "contracts/sOHM.sol:sOlympus",
										"label": "blockNumberOccured",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rebase(uint256,uint256)": {
								"notice": "increases sOHM supply to increase staking balances relative to profit_"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							76
						]
					},
					"id": 77,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "80:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "126:62:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "237:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:0"
									},
									"scope": 76,
									"src": "191:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:17:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "380:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:9:0"
									},
									"scope": 76,
									"src": "321:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "393:197:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "611:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "630:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:35:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "664:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "664:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:6:0"
									},
									"scope": 76,
									"src": "593:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "674:252:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "963:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:32:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1003:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:9:0"
									},
									"scope": 76,
									"src": "929:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1016:616:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1669:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:33:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1703:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 42,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1702:6:0"
									},
									"scope": 76,
									"src": "1635:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1713:280:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2018:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2034:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2017:51:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2087:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:6:0"
									},
									"scope": 76,
									"src": "1996:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "2097:148:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 66,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2263:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2285:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2305:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:57:0"
									},
									"src": "2248:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2324:142:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 75,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2484:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2507:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2532:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:63:0"
									},
									"src": "2469:78:0"
								}
							],
							"scope": 77,
							"src": "105:2444:0"
						}
					],
					"src": "80:2469:0"
				},
				"id": 0
			},
			"contracts/libraries/Address.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							521
						]
					},
					"id": 522,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "78:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "807:347:1",
										"statements": [
											{
												"assignments": [
													87
												],
												"declarations": [
													{
														"constant": false,
														"id": 87,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "1004:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 86,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 88,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:12:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1091:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1093:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1113:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1101:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1093:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 81,
														"isOffset": false,
														"isSlot": false,
														"src": "1113:7:1",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "1093:4:1",
														"valueSize": 1
													}
												],
												"id": 89,
												"nodeType": "InlineAssembly",
												"src": "1082:41:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 90,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "1139:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1146:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1139:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 85,
												"id": 93,
												"nodeType": "Return",
												"src": "1132:15:1"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "171:565:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "761:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:17:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "801:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 83,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "801:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:6:1"
									},
									"scope": 521,
									"src": "741:413:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "2142:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 106,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2168:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$521",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$521",
																				"typeString": "library Address"
																			}
																		],
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2160:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 104,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2160:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2160:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2160:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 109,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2185:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2160:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2152:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2152:73:1"
											},
											{
												"assignments": [
													115,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "2314:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 114,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2314:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 122,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2364:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 116,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2332:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2332:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2355:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2332:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2313:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2385:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2394:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2377:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2377:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2377:78:1"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "1160:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2090:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2117:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:43:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2142:0:1"
									},
									"scope": 521,
									"src": "2071:391:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3292:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3320:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3328:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3334:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 139,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															146,
															166
														],
														"referencedDeclaration": 166,
														"src": "3307:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3307:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 138,
												"id": 144,
												"nodeType": "Return",
												"src": "3300:67:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2468:730:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3225:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3241:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3241:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:35:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3278:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3278:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3277:14:1"
									},
									"scope": 521,
									"src": "3203:171:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "3713:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 159,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3753:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "3761:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3767:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 162,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "3770:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 158,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3730:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 157,
												"id": 164,
												"nodeType": "Return",
												"src": "3723:60:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3380:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3618:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3634:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3634:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3653:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3653:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3617:63:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3699:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3699:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3698:14:1"
									},
									"scope": 521,
									"src": "3596:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "4265:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4304:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 180,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4312:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 181,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4318:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 178,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															236
														],
														"referencedDeclaration": 236,
														"src": "4282:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4282:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 177,
												"id": 184,
												"nodeType": "Return",
												"src": "4275:94:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "3796:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4183:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4199:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4218:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:50:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4251:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4251:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4250:14:1"
									},
									"scope": 521,
									"src": "4152:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5095:382:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 203,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5121:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$521",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$521",
																				"typeString": "library Address"
																			}
																		],
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5113:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 201,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5113:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5113:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5113:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5138:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5113:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5145:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5105:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 213,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "5215:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 212,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "5204:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5204:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5224:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5196:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5196:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "5196:60:1"
											},
											{
												"assignments": [
													219,
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "5327:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 218,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5327:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "5341:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 220,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5341:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "5396:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 222,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "5368:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5368:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 224,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5388:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5368:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5326:75:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 231,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5445:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 232,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5457:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 229,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "5418:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5418:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 199,
												"id": 234,
												"nodeType": "Return",
												"src": "5411:59:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "4382:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4985:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5001:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5001:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5035:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 194,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5035:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4984:78:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5081:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5081:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:14:1"
									},
									"scope": 521,
									"src": "4954:523:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "5627:814:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 251,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "5656:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 250,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "5645:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5645:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5665:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5637:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5637:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "5637:60:1"
											},
											{
												"assignments": [
													257,
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "5768:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 256,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "5782:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 258,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5782:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 266,
												"initialValue": {
													"arguments": [
														{
															"id": 264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "5840:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 260,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5809:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5809:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 262,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "5829:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5809:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5767:78:1"
											},
											{
												"condition": {
													"id": 267,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 257,
													"src": "5859:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "5916:519:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 271,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6000:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6000:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6000:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 281,
																"nodeType": "Block",
																"src": "6372:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 278,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "6397:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 277,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6390:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6390:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 280,
																		"nodeType": "ExpressionStatement",
																		"src": "6390:20:1"
																	}
																]
															},
															"id": 282,
															"nodeType": "IfStatement",
															"src": "5996:429:1",
															"trueBody": {
																"id": 276,
																"nodeType": "Block",
																"src": "6023:343:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6207:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6229:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6258:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6252:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6252:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6233:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6301:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6305:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6297:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6297:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6318:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6290:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6290:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6290:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 259,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6258:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 259,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6305:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 275,
																		"nodeType": "InlineAssembly",
																		"src": "6198:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "5855:580:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "5868:42:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "5889:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 248,
															"id": 269,
															"nodeType": "Return",
															"src": "5882:17:1"
														}
													]
												}
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5515:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5531:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5531:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5550:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5568:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5568:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5514:81:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5613:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5613:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5612:14:1"
									},
									"scope": 521,
									"src": "5483:958:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "6716:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 297,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "6752:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "6760:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6766:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 296,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															303,
															338
														],
														"referencedDeclaration": 338,
														"src": "6733:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "6726:80:1"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "6445:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6644:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6660:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6660:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:35:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6702:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6702:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6701:14:1"
									},
									"scope": 521,
									"src": "6616:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "7125:288:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 317,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7154:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 316,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "7143:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7143:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7163:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7135:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7135:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "7135:67:1"
											},
											{
												"assignments": [
													323,
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "7273:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 322,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7273:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "7287:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7287:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [
														{
															"id": 328,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "7332:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 326,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7314:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "7314:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7314:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7272:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 332,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "7372:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 333,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "7381:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 334,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "7393:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 331,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "7354:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7354:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 314,
												"id": 336,
												"nodeType": "Return",
												"src": "7347:59:1"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "6819:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "7025:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "7041:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7041:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "7060:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 309,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7060:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:63:1"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "7111:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7111:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:14:1"
									},
									"scope": 521,
									"src": "6997:416:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "7689:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 349,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "7727:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "7735:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7741:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 348,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															355,
															390
														],
														"referencedDeclaration": 390,
														"src": "7706:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7706:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 347,
												"id": 353,
												"nodeType": "Return",
												"src": "7699:84:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "7419:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7622:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7622:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7638:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7638:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:35:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "7675:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7675:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7674:14:1"
									},
									"scope": 521,
									"src": "7592:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "8101:292:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 369,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "8130:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 368,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "8119:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8119:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8139:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8111:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8111:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "8111:69:1"
											},
											{
												"assignments": [
													375,
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "8251:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 374,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "8265:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 376,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8265:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [
														{
															"id": 380,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "8312:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 378,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "8292:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "8292:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8292:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8250:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 384,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "8352:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 385,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "8361:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "8373:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 383,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "8334:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8334:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 366,
												"id": 388,
												"nodeType": "Return",
												"src": "8327:59:1"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "7796:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.3._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "8006:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "8022:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8022:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "8041:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8041:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8005:63:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "8087:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8087:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8086:14:1"
									},
									"scope": 521,
									"src": "7976:417:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "8528:596:1",
										"statements": [
											{
												"condition": {
													"id": 401,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 392,
													"src": "8542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 417,
													"nodeType": "Block",
													"src": "8599:519:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 405,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "8683:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8683:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8703:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8683:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 415,
																"nodeType": "Block",
																"src": "9055:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "9080:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 411,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "9073:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9073:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 414,
																		"nodeType": "ExpressionStatement",
																		"src": "9073:20:1"
																	}
																]
															},
															"id": 416,
															"nodeType": "IfStatement",
															"src": "8679:429:1",
															"trueBody": {
																"id": 410,
																"nodeType": "Block",
																"src": "8706:343:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8890:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8912:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8941:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8935:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8935:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8916:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8984:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8988:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8980:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8980:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "9001:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8973:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8973:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8973:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 394,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8941:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 394,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8988:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 409,
																		"nodeType": "InlineAssembly",
																		"src": "8881:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 418,
												"nodeType": "IfStatement",
												"src": "8538:580:1",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "8551:42:1",
													"statements": [
														{
															"expression": {
																"id": 402,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "8572:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 400,
															"id": 403,
															"nodeType": "Return",
															"src": "8565:17:1"
														}
													]
												}
											}
										]
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "8426:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8426:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "8440:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8440:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "8465:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8465:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:67:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "8514:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8514:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8513:14:1"
									},
									"scope": 521,
									"src": "8399:725:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "9210:407:1",
										"statements": [
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "_bytes",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "9220:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 427,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9220:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 433,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "9253:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9245:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 431,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9245:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9245:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9237:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 429,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9237:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9237:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9220:43:1"
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "HEX",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "9273:16:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 437,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9273:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"hexValue": "30313233343536373839616263646566",
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9292:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
														"typeString": "literal_string \"0123456789abcdef\""
													},
													"value": "0123456789abcdef"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9273:37:1"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "_addr",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "9320:18:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 441,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9320:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3432",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9351:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															},
															"value": "42"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															}
														],
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9341:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 443,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9345:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9341:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9320:34:1"
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "9365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 450,
														"indexExpression": {
															"hexValue": "30",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9371:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9365:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9376:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "9365:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "9365:14:1"
											},
											{
												"expression": {
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 454,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "9389:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 456,
														"indexExpression": {
															"hexValue": "31",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9395:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9389:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9400:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "9389:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "9389:14:1"
											},
											{
												"body": {
													"id": 512,
													"nodeType": "Block",
													"src": "9446:133:1",
													"statements": [
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 470,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "9460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 476,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "32",
																			"id": 471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 472,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "9468:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9470:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9468:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9466:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9460:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 477,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "9475:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 488,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 480,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 428,
																						"src": "9485:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 484,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 483,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 481,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 461,
																							"src": "9492:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 482,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9496:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9492:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9485:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "34",
																					"id": 485,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9503:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "9485:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9479:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 478,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9479:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9479:26:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9475:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9460:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "9460:46:1"
														},
														{
															"expression": {
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 491,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "9520:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 497,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9526:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 493,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "9528:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9530:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "9528:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9526:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9520:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 498,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "9535:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 509,
																	"indexExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 501,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 428,
																						"src": "9545:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 505,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 502,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 461,
																							"src": "9552:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "3132",
																							"id": 503,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9556:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "9552:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9545:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"hexValue": "30783066",
																					"id": 506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9562:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0x0f"
																				},
																				"src": "9545:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9539:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "9539:5:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9539:28:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9535:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "9520:48:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 511,
															"nodeType": "ExpressionStatement",
															"src": "9520:48:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "9433:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3230",
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9437:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "9433:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"initializationExpression": {
													"assignments": [
														461
													],
													"declarations": [
														{
															"constant": false,
															"id": 461,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 513,
															"src": "9418:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 460,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 463,
													"initialValue": {
														"hexValue": "30",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9430:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9418:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9441:3:1",
														"subExpression": {
															"id": 467,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "9441:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 469,
													"nodeType": "ExpressionStatement",
													"src": "9441:3:1"
												},
												"nodeType": "ForStatement",
												"src": "9414:165:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "9603:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9596:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 514,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9596:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9596:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 426,
												"id": 518,
												"nodeType": "Return",
												"src": "9589:20:1"
											}
										]
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "9155:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9154:18:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "9195:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9195:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9194:15:1"
									},
									"scope": 521,
									"src": "9130:487:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 522,
							"src": "149:9470:1"
						}
					],
					"src": "78:9541:1"
				},
				"id": 1
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							861
						]
					},
					"id": 862,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "79:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "266:109:2",
										"statements": [
											{
												"assignments": [
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "276:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 534,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "288:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "292:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "288:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "276:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 539,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "311:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 540,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "316:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "311:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "319:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "303:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "303:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "303:46:2"
											},
											{
												"expression": {
													"id": 545,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "367:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 531,
												"id": 546,
												"nodeType": "Return",
												"src": "360:8:2"
											}
										]
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "212:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "223:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:22:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "257:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:9:2"
									},
									"scope": 861,
									"src": "199:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "448:67:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "469:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 559,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "472:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "475:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 557,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															564,
															591
														],
														"referencedDeclaration": 591,
														"src": "465:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 556,
												"id": 562,
												"nodeType": "Return",
												"src": "458:50:2"
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "394:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "405:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:22:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "439:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:9:2"
									},
									"scope": 861,
									"src": "381:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "616:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "634:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 577,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "639:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "634:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 579,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "642:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "626:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "626:29:2"
											},
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "665:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "665:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 584,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "677:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 585,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "681:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "677:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "665:17:2"
											},
											{
												"expression": {
													"id": 588,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 583,
													"src": "700:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 574,
												"id": 589,
												"nodeType": "Return",
												"src": "693:8:2"
											}
										]
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "534:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "545:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "556:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:50:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "607:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:2"
									},
									"scope": 861,
									"src": "521:187:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "781:174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "795:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "800:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "795:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "791:45:2",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "803:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "824:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 599,
															"id": 604,
															"nodeType": "Return",
															"src": "817:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "846:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "846:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 609,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "858:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 610,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "862:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "858:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "846:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "881:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 615,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "885:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "881:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "890:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "881:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "873:56:2"
											},
											{
												"expression": {
													"id": 622,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 608,
													"src": "947:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 623,
												"nodeType": "Return",
												"src": "940:8:2"
											}
										]
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "727:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "738:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:22:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "772:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:9:2"
									},
									"scope": 861,
									"src": "714:241:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "1028:63:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "1049:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 636,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "1052:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 634,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															680
														],
														"referencedDeclaration": 680,
														"src": "1045:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 633,
												"id": 639,
												"nodeType": "Return",
												"src": "1038:46:2"
											}
										]
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "974:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "985:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:22:2"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1019:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:2"
									},
									"scope": 861,
									"src": "961:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1192:174:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 653,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "1210:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1210:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 656,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "1217:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1202:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "1202:28:2"
											},
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "1240:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1240:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "1252:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 662,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1256:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1252:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1240:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 666,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "1274:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 667,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "1279:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 668,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "1283:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1279:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 670,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "1287:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 671,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "1291:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1287:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1279:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 665,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "1267:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "1267:26:2"
											},
											{
												"expression": {
													"id": 677,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "1358:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 651,
												"id": 678,
												"nodeType": "Return",
												"src": "1351:8:2"
											}
										]
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1110:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1121:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1132:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 646,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1132:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:50:2"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1183:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:2"
									},
									"scope": 861,
									"src": "1097:269:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "1476:265:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1490:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1494:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1490:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 727,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "1697:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1697:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 735,
													"nodeType": "IfStatement",
													"src": "1693:42:2",
													"trueBody": {
														"id": 734,
														"nodeType": "Block",
														"src": "1705:30:2",
														"statements": [
															{
																"expression": {
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 730,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "1719:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1719:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 733,
																"nodeType": "ExpressionStatement",
																"src": "1719:5:2"
															}
														]
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "1486:249:2",
												"trueBody": {
													"id": 726,
													"nodeType": "Block",
													"src": "1497:190:2",
													"statements": [
														{
															"expression": {
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 690,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "1511:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 691,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "1515:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1511:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "1511:5:2"
														},
														{
															"assignments": [
																695
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 695,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"scope": 726,
																	"src": "1530:6:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 694,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 703,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 698,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "1549:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1552:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				}
																			],
																			"id": 697,
																			"name": "div",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				641,
																				680
																			],
																			"referencedDeclaration": 641,
																			"src": "1544:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1544:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1556:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 696,
																	"name": "add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1539:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1539:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1530:29:2"
														},
														{
															"body": {
																"id": 724,
																"nodeType": "Block",
																"src": "1587:90:2",
																"statements": [
																	{
																		"expression": {
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 707,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 685,
																				"src": "1605:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 708,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "1609:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1605:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 710,
																		"nodeType": "ExpressionStatement",
																		"src": "1605:5:2"
																	},
																	{
																		"expression": {
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 711,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "1628:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 715,
																										"name": "a",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 682,
																										"src": "1647:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 716,
																										"name": "b",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 695,
																										"src": "1650:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 714,
																									"name": "div",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										641,
																										680
																									],
																									"referencedDeclaration": 641,
																									"src": "1642:3:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 717,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1642:11:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 718,
																								"name": "b",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 695,
																								"src": "1655:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 713,
																							"name": "add",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 548,
																							"src": "1637:3:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 719,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1637:20:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "32",
																						"id": 720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1659:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						}
																					],
																					"id": 712,
																					"name": "div",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						641,
																						680
																					],
																					"referencedDeclaration": 641,
																					"src": "1632:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1632:30:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1628:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 723,
																		"nodeType": "ExpressionStatement",
																		"src": "1628:34:2"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 704,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "1580:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 705,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "1584:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1580:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 725,
															"nodeType": "WhileStatement",
															"src": "1573:104:2"
														}
													]
												}
											}
										]
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "1434:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:11:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "1468:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:8:2"
									},
									"scope": 861,
									"src": "1419:322:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1862:63:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 749,
																	"name": "total_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "1889:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 750,
																	"name": "percentage_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1897:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"id": 748,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "1884:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1884:26:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1912:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 747,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															680
														],
														"referencedDeclaration": 641,
														"src": "1879:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 746,
												"id": 754,
												"nodeType": "Return",
												"src": "1872:46:2"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1777:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "percentage_",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1793:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 741,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:37:2"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "percentAmount_",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1837:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:26:2"
									},
									"scope": 861,
									"src": "1750:175:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "2105:83:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "2127:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 769,
																			"name": "total_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 758,
																			"src": "2145:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 770,
																			"name": "percentageToSub_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 760,
																			"src": "2153:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 768,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "2140:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2140:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 767,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	641,
																	680
																],
																"referencedDeclaration": 641,
																"src": "2135:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:44:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															564,
															591
														],
														"referencedDeclaration": 564,
														"src": "2122:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 764,
												"id": 775,
												"nodeType": "Return",
												"src": "2115:66:2"
											}
										]
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substractPercentage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2022:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "percentageToSub_",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2038:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 759,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2038:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:42:2"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "result_",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2087:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:19:2"
									},
									"scope": 861,
									"src": "1992:196:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "2297:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 788,
																	"name": "part_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2323:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "313030",
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"id": 787,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "2319:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2319:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 791,
															"name": "total_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "2337:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 786,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															641,
															680
														],
														"referencedDeclaration": 641,
														"src": "2314:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 785,
												"id": 793,
												"nodeType": "Return",
												"src": "2307:38:2"
											}
										]
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentageOfTotal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "part_",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2222:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "total_",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:33:2"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "percent_",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2278:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:20:2"
									},
									"scope": 861,
									"src": "2194:158:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "2620:119:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 805,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "2692:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2696:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2692:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 808,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2691:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 809,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "2702:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2706:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2702:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 812,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2701:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2691:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 814,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "2713:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 815,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2717:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2713:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 817,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "2721:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2725:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2721:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2713:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 821,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2712:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2730:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2712:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 824,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2711:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 804,
												"id": 826,
												"nodeType": "Return",
												"src": "2684:48:2"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "2358:186:2",
										"text": " Taken from Hypersonic https://github.com/M2629/HyperSonic/blob/main/Math.sol\n @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2566:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2577:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:22:2"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2611:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:9:2"
									},
									"scope": 861,
									"src": "2549:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "2844:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 839,
																	"name": "multiplier_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "2873:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 840,
																	"name": "payment_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "2886:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 838,
																"name": "mul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "2868:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2868:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 837,
														"name": "sqrrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "2861:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 843,
												"nodeType": "Return",
												"src": "2854:44:2"
											}
										]
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quadraticPricing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "payment_",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2772:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2790:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:41:2"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2835:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:2"
									},
									"scope": 861,
									"src": "2745:160:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "3003:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "multiplier_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "3023:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "supply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "3036:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 854,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "3018:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 853,
												"id": 858,
												"nodeType": "Return",
												"src": "3011:34:2"
											}
										]
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bondingCurve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "supply_",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "multiplier_",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2949:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:40:2"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2994:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:9:2"
									},
									"scope": 861,
									"src": "2909:141:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 862,
							"src": "175:2877:2"
						}
					],
					"src": "79:2975:2"
				},
				"id": 2
			},
			"contracts/sOHM.sol": {
				"ast": {
					"absolutePath": "contracts/sOHM.sol",
					"exportedSymbols": {
						"Address": [
							521
						],
						"Counters": [
							1404
						],
						"ERC20": [
							1358
						],
						"ERC20Permit": [
							1596
						],
						"IERC20": [
							76
						],
						"IERC2612Permit": [
							1431
						],
						"IOwnable": [
							1613
						],
						"Ownable": [
							1742
						],
						"SafeMath": [
							861
						],
						"sOlympus": [
							2470
						]
					},
					"id": 2471,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 863,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 864,
							"nodeType": "ImportDirective",
							"scope": 2471,
							"sourceUnit": 862,
							"src": "137:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Address.sol",
							"file": "./libraries/Address.sol",
							"id": 865,
							"nodeType": "ImportDirective",
							"scope": 2471,
							"sourceUnit": 522,
							"src": "172:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 866,
							"nodeType": "ImportDirective",
							"scope": 2471,
							"sourceUnit": 77,
							"src": "206:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 868,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 76,
										"src": "841:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$76",
											"typeString": "contract IERC20"
										}
									},
									"id": 869,
									"nodeType": "InheritanceSpecifier",
									"src": "841:6:3"
								}
							],
							"contractDependencies": [
								76
							],
							"contractKind": "contract",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "241:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1358,
							"linearizedBaseContracts": [
								1358,
								76
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 872,
									"libraryName": {
										"id": 870,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 861,
										"src": "861:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$861",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "855:27:3",
									"typeName": {
										"id": 871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "874:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 877,
									"mutability": "constant",
									"name": "ERC20TOKEN_ERC1820_INTERFACE_ID",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "923:84:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 873,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "923:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4552433230546f6b656e",
												"id": 875,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "993:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												},
												"value": "ERC20Token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
													"typeString": "literal_string \"ERC20Token\""
												}
											],
											"id": 874,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "982:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 876,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "982:25:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 881,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1039:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 880,
										"keyType": {
											"id": 878,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1048:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1039:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 887,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1114:70:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 886,
										"keyType": {
											"id": 882,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1123:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1114:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 885,
											"keyType": {
												"id": 883,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1143:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1134:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 884,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1154:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1212:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 888,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1212:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 891,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1269:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 890,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1269:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 893,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1322:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 892,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1322:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 895,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1358,
									"src": "1377:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 894,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1377:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "1778:74:3",
										"statements": [
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "1784:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "1792:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1784:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "1784:13:3"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 909,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "1803:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "1813:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1803:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "1803:17:3"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 913,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "1826:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 914,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1838:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1826:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "1826:21:3"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "1406:295:3",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 918,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "1717:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1717:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "1738:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1738:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "1761:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 901,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1761:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:61:3"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1778:0:3"
									},
									"scope": 1358,
									"src": "1704:148:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "1984:23:3",
										"statements": [
											{
												"expression": {
													"id": 924,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 891,
													"src": "1997:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 923,
												"id": 925,
												"nodeType": "Return",
												"src": "1990:12:3"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "1856:50:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:2:3"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1969:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1969:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:15:3"
									},
									"scope": 1358,
									"src": "1932:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "2187:25:3",
										"statements": [
											{
												"expression": {
													"id": 933,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 893,
													"src": "2200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 932,
												"id": 934,
												"nodeType": "Return",
												"src": "2193:14:3"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "2011:96:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:2:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2172:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 930,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2172:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2171:15:3"
									},
									"scope": 1358,
									"src": "2133:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "2878:27:3",
										"statements": [
											{
												"expression": {
													"id": 942,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 895,
													"src": "2891:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 941,
												"id": 943,
												"nodeType": "Return",
												"src": "2884:16:3"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "2216:588:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2847:2:3"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2871:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 939,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2871:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:7:3"
									},
									"scope": 1358,
									"src": "2830:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "3042:30:3",
										"statements": [
											{
												"expression": {
													"id": 952,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "3055:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 951,
												"id": 953,
												"nodeType": "Return",
												"src": "3048:19:3"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "2909:45:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 948,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3015:8:3"
									},
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3000:2:3"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3033:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:9:3"
									},
									"scope": 1358,
									"src": "2980:92:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										15
									],
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "3228:36:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 964,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "3241:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 966,
													"indexExpression": {
														"id": 965,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "3251:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3241:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 963,
												"id": 967,
												"nodeType": "Return",
												"src": "3234:25:3"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "3076:43:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 960,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3201:8:3"
									},
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3164:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3163:17:3"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3219:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:9:3"
									},
									"scope": 1358,
									"src": "3145:119:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "3608:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 981,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3624:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3624:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 983,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3636:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "3647:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 980,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "3614:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3614:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "3614:40:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3667:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 979,
												"id": 988,
												"nodeType": "Return",
												"src": "3660:11:3"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "3268:178:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 976,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3584:8:3"
									},
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "3534:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "3553:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3533:35:3"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "3602:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3602:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3601:6:3"
									},
									"scope": 1358,
									"src": "3516:160:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										35
									],
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "3857:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1001,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3874:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1003,
														"indexExpression": {
															"id": 1002,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "3886:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3874:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1005,
													"indexExpression": {
														"id": 1004,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3893:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3874:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1006,
												"nodeType": "Return",
												"src": "3867:34:3"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "3682:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 997,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3830:8:3"
									},
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3778:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3793:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3777:32:3"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3848:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:9:3"
									},
									"scope": 1358,
									"src": "3759:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										45
									],
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "4160:75:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1020,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4179:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4179:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "4191:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "4200:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4170:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4170:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "4170:37:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4224:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1018,
												"id": 1027,
												"nodeType": "Return",
												"src": "4217:11:3"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "3914:127:3",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1015,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4136:8:3"
									},
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "4088:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "4105:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "4154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4153:6:3"
									},
									"scope": 1358,
									"src": "4071:164:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										57
									],
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "4839:201:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "4859:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "4867:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "4878:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1042,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "4849:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4849:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "4849:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "4904:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1050,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4912:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4912:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1059,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "4960:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4968:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1052,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "4924:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1054,
																		"indexExpression": {
																			"id": 1053,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "4936:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4924:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1057,
																	"indexExpression": {
																		"expression": {
																			"id": 1055,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4944:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4944:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4924:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "4924:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4924:87:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4895:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4895:117:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "4895:117:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5029:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1041,
												"id": 1065,
												"nodeType": "Return",
												"src": "5022:11:3"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "4241:456:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1038,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4815:8:3"
									},
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4749:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4749:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4765:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4784:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:51:3"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "4833:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4833:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:6:3"
									},
									"scope": 1358,
									"src": "4727:313:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "5529:117:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5548:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5548:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1080,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "5560:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1088,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "5606:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1081,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "5569:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1084,
																		"indexExpression": {
																			"expression": {
																				"id": 1082,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "5581:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5581:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5569:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1086,
																	"indexExpression": {
																		"id": 1085,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "5593:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5569:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 548,
																"src": "5569:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5569:48:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "5539:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5539:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "5539:79:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5635:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1076,
												"id": 1093,
												"nodeType": "Return",
												"src": "5628:11:3"
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "5046:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "5462:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "5479:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5479:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5461:37:3"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "5523:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5523:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5522:6:3"
									},
									"scope": 1358,
									"src": "5435:211:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "6232:163:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1106,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6251:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6251:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1108,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "6263:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1116,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "6309:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6326:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1109,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "6272:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1112,
																		"indexExpression": {
																			"expression": {
																				"id": 1110,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "6284:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6284:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6272:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1114,
																	"indexExpression": {
																		"id": 1113,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "6296:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6272:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "6272:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6272:94:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1105,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "6242:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6242:125:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "6242:125:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1104,
												"id": 1122,
												"nodeType": "Return",
												"src": "6377:11:3"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "5652:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "6160:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "6177:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:42:3"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "6226:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6226:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:6:3"
									},
									"scope": 1358,
									"src": "6133:262:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "6926:417:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1135,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "6940:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6958:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6950:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1136,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6950:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6950:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6940:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6962:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6932:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6932:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "6932:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "7016:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7037:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7029:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1146,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7029:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7029:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7016:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7041:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7008:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7008:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "7008:71:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1155,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "7107:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "7115:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "7126:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1154,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "7086:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "7086:47:3"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1160,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7140:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1162,
														"indexExpression": {
															"id": 1161,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "7150:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7140:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1167,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "7182:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7190:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1163,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "7160:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1165,
																"indexExpression": {
																	"id": 1164,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "7170:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7160:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "7160:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7160:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7140:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "7140:91:3"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1172,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7237:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1174,
														"indexExpression": {
															"id": 1173,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "7247:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7237:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1179,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "7285:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1175,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "7260:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1177,
																"indexExpression": {
																	"id": 1176,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "7270:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7260:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "7260:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7260:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7237:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "7237:55:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1184,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "7312:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "7320:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "7331:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1183,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "7303:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7303:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "EmitStatement",
												"src": "7298:40:3"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "6399:437:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "6858:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6858:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "6874:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "6893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6857:51:3"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6926:0:3"
									},
									"scope": 1358,
									"src": "6839:504:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "7707:326:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1199,
																"name": "account_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "7725:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7745:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7737:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1200,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7737:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7737:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7725:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7749:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7717:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7717:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "7717:66:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1211,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7823:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1358",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$1358",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7814:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1209,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7814:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7814:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "7831:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "7841:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1208,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "7793:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "7793:57:3"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1217,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "7860:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1220,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "7892:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1218,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "7875:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "7875:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7875:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7860:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "7860:41:3"
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1224,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7911:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1226,
														"indexExpression": {
															"id": 1225,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "7921:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7911:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1231,
																"name": "ammount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "7957:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1227,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "7933:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1229,
																"indexExpression": {
																	"id": 1228,
																	"name": "account_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "7943:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7933:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "7933:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7933:33:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7911:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "7911:55:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1238,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7999:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1358",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$1358",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7990:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7990:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7990:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "account_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "8007:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "ammount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "8017:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1235,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "7981:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7981:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "EmitStatement",
												"src": "7976:50:3"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "7349:260:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "7654:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "ammount_",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "7672:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7672:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7653:36:3"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7707:0:3"
									},
									"scope": 1358,
									"src": "7639:394:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "8443:345:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1254,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "8461:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8480:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8472:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1255,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8472:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8472:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8461:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8484:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8453:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8453:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "8453:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1264,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "8552:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8569:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8561:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8561:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8561:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "8573:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1263,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "8531:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8531:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "8531:49:3"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1272,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8591:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1274,
														"indexExpression": {
															"id": 1273,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "8601:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8591:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1279,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "8635:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8643:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1275,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "8612:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1277,
																"indexExpression": {
																	"id": 1276,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "8622:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8612:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "8612:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8612:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8591:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "8591:89:3"
											},
											{
												"expression": {
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1284,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "8690:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1287,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "8722:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1285,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "8705:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 564,
															"src": "8705:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8705:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8690:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "8690:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1292,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "8753:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8770:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8762:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1293,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8762:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8762:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1297,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "8774:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1291,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "8744:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8744:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "EmitStatement",
												"src": "8739:42:3"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "8039:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "8393:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "8410:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8410:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8392:33:3"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8443:0:3"
									},
									"scope": 1358,
									"src": "8378:410:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "9319:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1312,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "9337:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9354:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9346:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1313,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9346:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9337:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9358:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9329:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9329:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "9329:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "9415:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9434:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9426:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1323,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9426:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9426:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9415:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9438:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9407:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9407:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "9407:68:3"
											},
											{
												"expression": {
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1331,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "9486:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1334,
															"indexExpression": {
																"id": 1332,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "9498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9486:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1335,
														"indexExpression": {
															"id": 1333,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "9505:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9486:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1336,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "9516:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9486:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "9486:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1340,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "9546:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1341,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "9553:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "9562:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1339,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "9537:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9537:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "EmitStatement",
												"src": "9532:37:3"
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "8794:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "9254:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9254:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "9269:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "9286:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9253:48:3"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9319:0:3"
									},
									"scope": 1358,
									"src": "9236:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "10795:3:3",
										"statements": []
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "10125:550:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "from_",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "10732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10732:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "to_",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "10747:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "10760:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10760:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10730:47:3"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10795:0:3"
									},
									"scope": 1358,
									"src": "10701:97:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2471,
							"src": "807:9993:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1404,
							"linearizedBaseContracts": [
								1404
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1361,
									"libraryName": {
										"id": 1359,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 861,
										"src": "10831:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$861",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "10825:27:3",
									"typeName": {
										"id": 1360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10844:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 1364,
									"members": [
										{
											"constant": false,
											"id": 1363,
											"mutability": "mutable",
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"scope": 1364,
											"src": "11197:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1362,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11197:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 1404,
									"src": "10858:374:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "11312:38:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1371,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "11329:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1363,
													"src": "11329:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1373,
												"nodeType": "Return",
												"src": "11322:21:3"
											}
										]
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "11255:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1365,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1364,
													"src": "11255:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11254:25:3"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "11303:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11303:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11302:9:3"
									},
									"scope": 1404,
									"src": "11238:112:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "11409:125:3",
										"statements": [
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1380,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "11508:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1363,
														"src": "11508:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11526:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11508:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "11508:19:3"
											}
										]
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "11375:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1376,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1364,
													"src": "11375:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:25:3"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11409:0:3"
									},
									"scope": 1404,
									"src": "11356:178:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "11593:55:3",
										"statements": [
											{
												"expression": {
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1392,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11603:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1363,
														"src": "11603:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11639:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"expression": {
																	"id": 1395,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "11620:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1363,
																"src": "11620:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 564,
															"src": "11620:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11620:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11603:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "11603:38:3"
											}
										]
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "11559:23:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1388,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1364,
													"src": "11559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11558:25:3"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11593:0:3"
									},
									"scope": 1404,
									"src": "11540:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2471,
							"src": "10802:848:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1431,
							"linearizedBaseContracts": [
								1431
							],
							"name": "IERC2612Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "11683:834:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12547:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12547:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12570:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12595:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12595:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12619:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12619:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12645:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1414,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12645:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12662:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12662:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12681:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12537:159:3"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12705:0:3"
									},
									"scope": 1431,
									"src": "12522:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "12712:302:3",
										"text": " @dev Returns the current ERC2612 nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "13035:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13034:15:3"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "13073:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13072:9:3"
									},
									"scope": 1431,
									"src": "13019:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2471,
							"src": "11652:1432:3"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1432,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1358,
										"src": "13119:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1358",
											"typeString": "contract ERC20"
										}
									},
									"id": 1433,
									"nodeType": "InheritanceSpecifier",
									"src": "13119:5:3"
								},
								{
									"baseName": {
										"id": 1434,
										"name": "IERC2612Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1431,
										"src": "13126:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612Permit_$1431",
											"typeString": "contract IERC2612Permit"
										}
									},
									"id": 1435,
									"nodeType": "InheritanceSpecifier",
									"src": "13126:14:3"
								}
							],
							"contractDependencies": [
								76,
								1358,
								1431
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1596,
							"linearizedBaseContracts": [
								1596,
								1431,
								1358,
								76
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1438,
									"libraryName": {
										"id": 1436,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1404,
										"src": "13153:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$1404",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "13147:36:3",
									"typeName": {
										"id": 1437,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1364,
										"src": "13166:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1442,
									"mutability": "mutable",
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"scope": 1596,
									"src": "13189:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1364_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1441,
										"keyType": {
											"id": 1439,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13197:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13189:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1364_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"id": 1440,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1364,
											"src": "13208:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$1364_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 1445,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1596,
									"src": "13352:108:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1443,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "13352:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 1444,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13394:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 1447,
									"mutability": "mutable",
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 1596,
									"src": "13467:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1446,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "13467:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "13519:397:3",
										"statements": [
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"scope": 1483,
														"src": "13530:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13530:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1452,
												"nodeType": "VariableDeclarationStatement",
												"src": "13530:15:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13564:44:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13578:20:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "13589:7:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13589:9:3"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "13578:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1451,
														"isOffset": false,
														"isSlot": false,
														"src": "13578:7:3",
														"valueSize": 1
													}
												],
												"id": 1453,
												"nodeType": "InlineAssembly",
												"src": "13555:53:3"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "13618:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13681:84:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 1458,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "13671:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13671:95:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1464,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 927,
																							"src": "13796:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 1465,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13796:6:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13790:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1462,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "13790:5:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13790:13:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1461,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "13780:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13780:24:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1471,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13834:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 1470,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1469,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "13828:5:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13828:10:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1468,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "13818:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13818:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1474,
																		"name": "chainID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "13864:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1477,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "13893:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Permit_$1596",
																					"typeString": "contract ERC20Permit"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Permit_$1596",
																					"typeString": "contract ERC20Permit"
																				}
																			],
																			"id": 1476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13885:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1475,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13885:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13885:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1456,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "13647:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "13647:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13647:261:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1455,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "13637:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13637:272:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "13618:291:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "13618:291:3"
											}
										]
									},
									"id": 1484,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13516:2:3"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13519:0:3"
									},
									"scope": 1596,
									"src": "13505:411:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1422
									],
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "14185:550:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1504,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "14203:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "14203:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1506,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "14222:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14203:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5065726d69743a206578706972656420646561646c696e65",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14232:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															},
															"value": "Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															}
														],
														"id": 1503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14195:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14195:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "14195:64:3"
											},
											{
												"assignments": [
													1512
												],
												"declarations": [
													{
														"constant": false,
														"id": 1512,
														"mutability": "mutable",
														"name": "hashStruct",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "14270:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1511,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14270:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1516,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "14324:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1517,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "14341:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "14348:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1519,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "14357:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"baseExpression": {
																				"id": 1520,
																				"name": "_nonces",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1442,
																				"src": "14365:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1364_storage_$",
																					"typeString": "mapping(address => struct Counters.Counter storage ref)"
																				}
																			},
																			"id": 1522,
																			"indexExpression": {
																				"id": 1521,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "14373:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14365:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$1364_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1375,
																		"src": "14365:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1364_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14365:24:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1525,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "14391:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1514,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "14313:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "14313:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14313:87:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1513,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "14303:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14303:98:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14270:131:3"
											},
											{
												"assignments": [
													1530
												],
												"declarations": [
													{
														"constant": false,
														"id": 1530,
														"mutability": "mutable",
														"name": "_hash",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "14412:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1529,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14412:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1542,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "307831393031",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14462:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			},
																			"value": "0x1901"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			}
																		],
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14455:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1534,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "14455:6:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14455:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 1538,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "14471:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1539,
																	"name": "hashStruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "14489:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1532,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "14438:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "14438:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14438:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1531,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "14428:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14428:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14412:89:3"
											},
											{
												"assignments": [
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"scope": 1578,
														"src": "14512:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1543,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14512:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"arguments": [
														{
															"id": 1546,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "14539:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1547,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "14546:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1548,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "14549:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1549,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "14552:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1545,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "14529:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14529:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14512:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1553,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "14572:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14590:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14582:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1554,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14582:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14582:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "14572:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1559,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "14596:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1560,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "14606:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14596:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14572:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f537761705065726d69743a20496e76616c6964207369676e6174757265",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14613:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															},
															"value": "ZeroSwapPermit: Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef653edfc38c403ea52d691304feffa27a665e594b07a1719ac6b055d64dbee",
																"typeString": "literal_string \"ZeroSwapPermit: Invalid signature\""
															}
														],
														"id": 1552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14564:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14564:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "14564:85:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1566,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1442,
																"src": "14660:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1364_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1568,
															"indexExpression": {
																"id": 1567,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "14668:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14660:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1364_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "14660:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1364_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1364_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14660:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "14660:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1573,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "14705:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "14712:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "14721:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1572,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "14696:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14696:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "14696:32:3"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "13922:59:3",
										"text": " @dev See {IERC2612Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1501,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14176:8:3"
									},
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "14011:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "14034:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14034:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "14059:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "14083:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "14109:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1494,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14109:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "14126:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14126:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "14145:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14145:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14001:159:3"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14185:0:3"
									},
									"scope": 1596,
									"src": "13986:749:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1430
									],
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "14868:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1588,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1442,
																"src": "14885:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1364_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1590,
															"indexExpression": {
																"id": 1589,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "14893:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14885:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1364_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1375,
														"src": "14885:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1364_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14885:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1593,
												"nodeType": "Return",
												"src": "14878:31:3"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "14741:52:3",
										"text": " @dev See {IERC2612Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1584,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14841:8:3"
									},
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "14814:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:3"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "14859:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14858:9:3"
									},
									"scope": 1596,
									"src": "14798:118:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2471,
							"src": "13086:1832:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1613,
							"linearizedBaseContracts": [
								1613
							],
							"name": "IOwnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "481c6a75",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14959:2:3"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "14985:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14985:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14984:9:3"
									},
									"scope": 1613,
									"src": "14943:51:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "089208d8",
									"id": 1604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15025:2:3"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15036:0:3"
									},
									"scope": 1613,
									"src": "14998:39:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46f68ee9",
									"id": 1609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "15068:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15068:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15066:21:3"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15096:0:3"
									},
									"scope": 1613,
									"src": "15043:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a96ac0a",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15126:2:3"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15137:0:3"
									},
									"scope": 1613,
									"src": "15103:35:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2471,
							"src": "14920:220:3"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1614,
										"name": "IOwnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1613,
										"src": "15162:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwnable_$1613",
											"typeString": "contract IOwnable"
										}
									},
									"id": 1615,
									"nodeType": "InheritanceSpecifier",
									"src": "15162:8:3"
								}
							],
							"contractDependencies": [
								1613
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1742,
							"linearizedBaseContracts": [
								1742,
								1613
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1617,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1742,
									"src": "15178:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1616,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15178:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1619,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 1742,
									"src": "15207:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1618,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15207:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1625,
									"name": "OwnershipPushed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "15262:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "15293:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15293:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15261:57:3"
									},
									"src": "15240:79:3"
								},
								{
									"anonymous": false,
									"id": 1631,
									"name": "OwnershipPulled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "15346:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "15377:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15345:57:3"
									},
									"src": "15324:79:3"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "15424:88:3",
										"statements": [
											{
												"expression": {
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1634,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "15434:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1635,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "15443:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "15443:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15434:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "15434:19:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15493:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15485:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1640,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15485:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15485:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1644,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "15497:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1639,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "15468:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15468:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "EmitStatement",
												"src": "15463:42:3"
											}
										]
									},
									"id": 1648,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15421:2:3"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15424:0:3"
									},
									"scope": 1742,
									"src": "15409:103:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1601
									],
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "15576:30:3",
										"statements": [
											{
												"expression": {
													"id": 1654,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1617,
													"src": "15593:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1653,
												"id": 1655,
												"nodeType": "Return",
												"src": "15586:13:3"
											}
										]
									},
									"functionSelector": "481c6a75",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "manager",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1650,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15549:8:3"
									},
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15534:2:3"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "15567:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15566:9:3"
									},
									"scope": 1742,
									"src": "15518:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "15635:95:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1660,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "15654:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1661,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "15664:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15664:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15654:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15676:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15645:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15645:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "15645:67:3"
											},
											{
												"id": 1667,
												"nodeType": "PlaceholderStatement",
												"src": "15722:1:3"
											}
										]
									},
									"id": 1669,
									"name": "onlyManager",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15632:2:3"
									},
									"src": "15612:118:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1604
									],
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "15804:88:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1676,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "15836:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15852:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15844:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1677,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15844:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15844:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1675,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "15819:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15819:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "EmitStatement",
												"src": "15814:42:3"
											},
											{
												"expression": {
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "15866:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15883:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15875:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1684,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15875:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15875:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15866:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "15866:19:3"
											}
										]
									},
									"functionSelector": "089208d8",
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1673,
											"modifierName": {
												"id": 1672,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1669,
												"src": "15790:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15790:13:3"
										}
									],
									"name": "renounceManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15781:8:3"
									},
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15763:2:3"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15804:0:3"
									},
									"scope": 1742,
									"src": "15736:156:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1609
									],
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "15981:174:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1700,
																"name": "newOwner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "16000:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16021:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16013:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1701,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16013:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16013:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16000:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16025:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15991:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15991:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "15991:75:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1710,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "16098:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1711,
															"name": "newOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "16106:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1709,
														"name": "OwnershipPushed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "16081:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16081:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "EmitStatement",
												"src": "16076:41:3"
											},
											{
												"expression": {
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1714,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "16127:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1715,
														"name": "newOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "16139:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16127:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "16127:21:3"
											}
										]
									},
									"functionSelector": "46f68ee9",
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1697,
											"modifierName": {
												"id": 1696,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1669,
												"src": "15967:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15967:13:3"
										}
									],
									"name": "pushManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1695,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15958:8:3"
									},
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "newOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "15923:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15923:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15921:21:3"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15981:0:3"
									},
									"scope": 1742,
									"src": "15898:257:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1612
									],
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "16215:167:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1724,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "16234:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "16234:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1726,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "16248:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16234:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16259:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															},
															"value": "Ownable: must be new owner to pull"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
																"typeString": "literal_string \"Ownable: must be new owner to pull\""
															}
														],
														"id": 1723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16225:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16225:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "16225:71:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1732,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "16328:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1733,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "16336:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1731,
														"name": "OwnershipPulled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "16311:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16311:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "EmitStatement",
												"src": "16306:41:3"
											},
											{
												"expression": {
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1736,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "16357:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1737,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "16366:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16357:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "16357:18:3"
											}
										]
									},
									"functionSelector": "5a96ac0a",
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullManagement",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1721,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16206:8:3"
									},
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16188:2:3"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16215:0:3"
									},
									"scope": 1742,
									"src": "16165:217:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2471,
							"src": "15142:1242:3"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1743,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1596,
										"src": "16407:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$1596",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1744,
									"nodeType": "InheritanceSpecifier",
									"src": "16407:11:3"
								},
								{
									"baseName": {
										"id": 1745,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1742,
										"src": "16420:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1742",
											"typeString": "contract Ownable"
										}
									},
									"id": 1746,
									"nodeType": "InheritanceSpecifier",
									"src": "16420:7:3"
								}
							],
							"contractDependencies": [
								76,
								1358,
								1431,
								1596,
								1613,
								1742
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2470,
							"linearizedBaseContracts": [
								2470,
								1742,
								1613,
								1596,
								1431,
								1358,
								76
							],
							"name": "sOlympus",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1749,
									"libraryName": {
										"id": 1747,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 861,
										"src": "16441:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$861",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16435:27:3",
									"typeName": {
										"id": 1748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16454:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "16499:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1752,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "16518:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "16518:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1754,
																"name": "stakingContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "16532:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16518:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16509:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "16509:40:3"
											},
											{
												"id": 1758,
												"nodeType": "PlaceholderStatement",
												"src": "16559:1:3"
											}
										]
									},
									"id": 1760,
									"name": "onlyStakingContract",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16496:2:3"
									},
									"src": "16468:99:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ee99205c",
									"id": 1762,
									"mutability": "mutable",
									"name": "stakingContract",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "16573:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1761,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16573:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ce110d7",
									"id": 1764,
									"mutability": "mutable",
									"name": "initializer",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "16609:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1763,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16609:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1772,
									"name": "LogSupply",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "16658:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16658:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "16681:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "16700:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16700:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16657:64:3"
									},
									"src": "16642:80:3"
								},
								{
									"anonymous": false,
									"id": 1780,
									"name": "LogRebase",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "epoch",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "16744:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16744:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebase",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "16767:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16767:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "16783:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16783:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16742:56:3"
									},
									"src": "16727:72:3"
								},
								{
									"anonymous": false,
									"id": 1784,
									"name": "LogStakingContractUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingContract",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "16837:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16837:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16835:27:3"
									},
									"src": "16804:59:3"
								},
								{
									"canonicalName": "sOlympus.Rebase",
									"id": 1799,
									"members": [
										{
											"constant": false,
											"id": 1786,
											"mutability": "mutable",
											"name": "epoch",
											"nodeType": "VariableDeclaration",
											"scope": 1799,
											"src": "16893:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1785,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "16893:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1788,
											"mutability": "mutable",
											"name": "rebase",
											"nodeType": "VariableDeclaration",
											"scope": 1799,
											"src": "16913:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1787,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "16913:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1790,
											"mutability": "mutable",
											"name": "totalStakedBefore",
											"nodeType": "VariableDeclaration",
											"scope": 1799,
											"src": "16949:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1789,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "16949:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1792,
											"mutability": "mutable",
											"name": "totalStakedAfter",
											"nodeType": "VariableDeclaration",
											"scope": 1799,
											"src": "16981:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1791,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "16981:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1794,
											"mutability": "mutable",
											"name": "amountRebased",
											"nodeType": "VariableDeclaration",
											"scope": 1799,
											"src": "17012:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1793,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "17012:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1796,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 1799,
											"src": "17040:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1795,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "17040:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1798,
											"mutability": "mutable",
											"name": "blockNumberOccured",
											"nodeType": "VariableDeclaration",
											"scope": 1799,
											"src": "17060:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1797,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "17060:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Rebase",
									"nodeType": "StructDefinition",
									"scope": 2470,
									"src": "16869:221:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73c69eb7",
									"id": 1802,
									"mutability": "mutable",
									"name": "rebases",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17095:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Rebase_$1799_storage_$dyn_storage",
										"typeString": "struct sOlympus.Rebase[]"
									},
									"typeName": {
										"baseType": {
											"id": 1800,
											"name": "Rebase",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1799,
											"src": "17095:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Rebase_$1799_storage_ptr",
												"typeString": "struct sOlympus.Rebase"
											}
										},
										"id": 1801,
										"nodeType": "ArrayTypeName",
										"src": "17095:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Rebase_$1799_storage_$dyn_storage_ptr",
											"typeString": "struct sOlympus.Rebase[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2df75cb1",
									"id": 1804,
									"mutability": "mutable",
									"name": "INDEX",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17125:17:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1803,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "17125:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1811,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17149:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1805,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17149:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1810,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "17188:11:3",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17197:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1807,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "17189:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17189:7:3",
													"typeDescriptions": {}
												}
											},
											"id": 1809,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "17189:10:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1818,
									"mutability": "constant",
									"name": "INITIAL_FRAGMENTS_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17205:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1812,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17205:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"id": 1817,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35303030303030",
											"id": 1813,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "17257:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000000_by_1",
												"typeString": "int_const 5000000"
											},
											"value": "5000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 1816,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1814,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "17267:2:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 1815,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "17271:1:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "17267:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "17257:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1826,
									"mutability": "constant",
									"name": "TOTAL_GONS",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17452:92:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1819,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17452:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1825,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1820,
											"name": "MAX_UINT256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1811,
											"src": "17490:11:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1821,
														"name": "MAX_UINT256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "17505:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1822,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "17519:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17505:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1824,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "17504:40:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "17490:54:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1833,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17622:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1827,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17622:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1832,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "17660:11:3",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17669:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1829,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "17661:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 1828,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "17661:7:3",
													"typeDescriptions": {}
												}
											},
											"id": 1831,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "17661:10:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1835,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17694:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1834,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17694:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1839,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17732:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1838,
										"keyType": {
											"id": 1836,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17740:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17732:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1837,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "17751:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1845,
									"mutability": "mutable",
									"name": "_allowedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2470,
									"src": "17787:75:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1844,
										"keyType": {
											"id": 1840,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17797:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17787:53:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1843,
											"keyType": {
												"id": 1841,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "17818:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "17808:30:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "17829:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "17932:147:3",
										"statements": [
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1855,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "17942:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1856,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "17956:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "17956:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "17942:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "17942:24:3"
											},
											{
												"expression": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1860,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "17976:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1861,
														"name": "INITIAL_FRAGMENTS_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "17991:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17976:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "17976:39:3"
											},
											{
												"expression": {
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1864,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "18025:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1867,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "18059:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1865,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "18044:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 641,
															"src": "18044:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18044:28:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18025:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "18025:47:3"
											}
										]
									},
									"id": 1872,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b6564204f6c796d707573",
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17889:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_160563d5e45bd2d38a59e1d8c9b2de3959abd8b5800722606b884bf092f59dd7",
														"typeString": "literal_string \"Staked Olympus\""
													},
													"value": "Staked Olympus"
												},
												{
													"hexValue": "734f484d",
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17907:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7e7eb95bb3e87e8dfaa679c27e8e813bf0f9c0b9b260e19a0ebfd934d15679b",
														"typeString": "literal_string \"sOHM\""
													},
													"value": "sOHM"
												},
												{
													"hexValue": "39",
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17915:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												}
											],
											"id": 1851,
											"modifierName": {
												"id": 1847,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1358,
												"src": "17883:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$1358_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17883:34:3"
										},
										{
											"arguments": [],
											"id": 1853,
											"modifierName": {
												"id": 1852,
												"name": "ERC20Permit",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1596,
												"src": "17918:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Permit_$1596_$",
													"typeString": "type(contract ERC20Permit)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17918:13:3"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17880:2:3"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17932:0:3"
									},
									"scope": 2470,
									"src": "17869:210:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "18159:397:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1880,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "18178:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18178:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1882,
																"name": "initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "18192:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18178:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18169:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18169:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "18169:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1887,
																"name": "stakingContract_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "18224:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18252:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18244:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1888,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18244:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18244:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18224:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18215:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18215:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "18215:41:3"
											},
											{
												"expression": {
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1895,
														"name": "stakingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "18266:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1896,
														"name": "stakingContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "18284:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18266:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "18266:34:3"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1899,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "18310:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1901,
														"indexExpression": {
															"id": 1900,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "18324:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18310:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1902,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "18344:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18310:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "18310:44:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307830",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18388:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18380:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1906,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18380:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18380:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1910,
															"name": "stakingContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "18394:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "18411:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1905,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "18370:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18370:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1913,
												"nodeType": "EmitStatement",
												"src": "18365:60:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1915,
															"name": "stakingContract_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "18467:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1914,
														"name": "LogStakingContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "18440:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18440:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "EmitStatement",
												"src": "18435:50:3"
											},
											{
												"expression": {
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1918,
														"name": "initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "18504:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18526:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18518:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18518:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18518:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "18504:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "18504:24:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18545:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1878,
												"id": 1926,
												"nodeType": "Return",
												"src": "18538:11:3"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "stakingContract_",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "18106:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18104:28:3"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "18152:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18152:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18150:8:3"
									},
									"scope": 2470,
									"src": "18085:471:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "18635:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1938,
																"name": "INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "18654:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18663:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18654:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18645:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18645:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "18645:21:3"
											},
											{
												"expression": {
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1943,
														"name": "INDEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "18676:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1945,
																"name": "_INDEX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "18700:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1944,
															"name": "gonsForBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "18684:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18684:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18676:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1948,
												"nodeType": "ExpressionStatement",
												"src": "18676:32:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18725:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1936,
												"id": 1950,
												"nodeType": "Return",
												"src": "18718:11:3"
											}
										]
									},
									"functionSelector": "40a5737f",
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1933,
											"modifierName": {
												"id": 1932,
												"name": "onlyManager",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1669,
												"src": "18604:11:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18604:13:3"
										}
									],
									"name": "setIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "_INDEX",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "18581:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18581:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18579:15:3"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "18628:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18628:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18626:8:3"
									},
									"scope": 2470,
									"src": "18562:174:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "18997:772:3",
										"statements": [
											{
												"assignments": [
													1965
												],
												"declarations": [
													{
														"constant": false,
														"id": 1965,
														"mutability": "mutable",
														"name": "rebaseAmount",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "19007:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19007:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1966,
												"nodeType": "VariableDeclarationStatement",
												"src": "19007:20:3"
											},
											{
												"assignments": [
													1968
												],
												"declarations": [
													{
														"constant": false,
														"id": 1968,
														"mutability": "mutable",
														"name": "circulatingSupply_",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "19037:26:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19037:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1971,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1969,
														"name": "circulatingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "19066:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19066:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19037:48:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1972,
														"name": "profit_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "19101:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19112:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19101:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1992,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "19290:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19311:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19290:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2010,
														"nodeType": "Block",
														"src": "19413:47:3",
														"statements": [
															{
																"expression": {
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2006,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "19427:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2007,
																		"name": "profit_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "19442:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19427:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2009,
																"nodeType": "ExpressionStatement",
																"src": "19427:22:3"
															}
														]
													},
													"id": 2011,
													"nodeType": "IfStatement",
													"src": "19285:175:3",
													"trueBody": {
														"id": 2005,
														"nodeType": "Block",
														"src": "19314:93:3",
														"statements": [
															{
																"expression": {
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1995,
																		"name": "rebaseAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "19328:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2001,
																				"name": "circulatingSupply_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1968,
																				"src": "19376:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1998,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 889,
																						"src": "19356:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1996,
																						"name": "profit_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1955,
																						"src": "19343:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1997,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 625,
																					"src": "19343:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19343:27:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 641,
																			"src": "19343:31:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19343:53:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19328:68:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2004,
																"nodeType": "ExpressionStatement",
																"src": "19328:68:3"
															}
														]
													}
												},
												"id": 2012,
												"nodeType": "IfStatement",
												"src": "19096:364:3",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "19116:163:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1976,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "19146:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1977,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "19154:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "19154:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1979,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "19171:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1975,
																	"name": "LogSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "19135:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19135:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1981,
															"nodeType": "EmitStatement",
															"src": "19130:55:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1983,
																		"name": "epoch_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "19215:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19223:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1985,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2166,
																			"src": "19226:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19226:7:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1982,
																	"name": "LogRebase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "19204:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19204:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1988,
															"nodeType": "EmitStatement",
															"src": "19199:36:3"
														},
														{
															"expression": {
																"id": 1989,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "19256:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1963,
															"id": 1990,
															"nodeType": "Return",
															"src": "19249:19:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2013,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "19470:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2016,
																"name": "rebaseAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "19503:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2014,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "19485:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "19485:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19485:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19470:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "19470:47:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2020,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "19533:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2021,
														"name": "MAX_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "19548:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19533:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "IfStatement",
												"src": "19528:83:3",
												"trueBody": {
													"id": 2027,
													"nodeType": "Block",
													"src": "19561:50:3",
													"statements": [
														{
															"expression": {
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2023,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "19575:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2024,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "19590:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19575:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2026,
															"nodeType": "ExpressionStatement",
															"src": "19575:25:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2029,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "19621:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2032,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "19656:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2030,
																"name": "TOTAL_GONS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "19640:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 641,
															"src": "19640:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19640:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19621:49:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "19621:49:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2037,
															"name": "circulatingSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "19695:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2038,
															"name": "profit_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "19715:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2039,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "19724:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2036,
														"name": "_storeRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "19681:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,uint256) returns (bool)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19681:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "19681:51:3"
											},
											{
												"expression": {
													"id": 2042,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "19750:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1963,
												"id": 2043,
												"nodeType": "Return",
												"src": "19743:19:3"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "18742:153:3",
										"text": "@notice increases sOHM supply to increase staking balances relative to profit_\n@param profit_ uint256\n@return uint256"
									},
									"functionSelector": "058ecdb4",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1960,
											"modifierName": {
												"id": 1959,
												"name": "onlyStakingContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1760,
												"src": "18955:19:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18955:21:3"
										}
									],
									"name": "rebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "18917:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "18934:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18934:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18915:32:3"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "18987:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18987:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18985:11:3"
									},
									"scope": 2470,
									"src": "18900:869:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "20063:576:3",
										"statements": [
											{
												"assignments": [
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "rebasePercent",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "20073:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2057,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "20073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2066,
												"initialValue": {
													"arguments": [
														{
															"id": 2064,
															"name": "previousCirculating_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "20119:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20107:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 2059,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "20094:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 625,
																"src": "20094:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20094:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "20094:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20094:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20073:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2071,
																	"name": "epoch_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "20196:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2072,
																	"name": "rebasePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "20224:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2073,
																	"name": "previousCirculating_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "20285:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2074,
																		"name": "circulatingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2156,
																		"src": "20337:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20337:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2076,
																	"name": "profit_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "20385:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2077,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2166,
																		"src": "20413:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20413:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2079,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "20454:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "20454:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2070,
																"name": "Rebase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1799,
																"src": "20166:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Rebase_$1799_storage_ptr_$",
																	"typeString": "type(struct sOlympus.Rebase storage pointer)"
																}
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"epoch",
																"rebase",
																"totalStakedBefore",
																"totalStakedAfter",
																"amountRebased",
																"index",
																"blockNumberOccured"
															],
															"nodeType": "FunctionCall",
															"src": "20166:311:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Rebase_$1799_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Rebase_$1799_memory_ptr",
																"typeString": "struct sOlympus.Rebase memory"
															}
														],
														"expression": {
															"id": 2067,
															"name": "rebases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "20152:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Rebase_$1799_storage_$dyn_storage",
																"typeString": "struct sOlympus.Rebase storage ref[] storage ref"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "20152:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Rebase_$1799_storage_$returns$__$",
															"typeString": "function (struct sOlympus.Rebase storage ref)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20152:326:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "20152:326:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2085,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "20513:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2086,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "20521:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "20521:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2088,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "20538:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2084,
														"name": "LogSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "20502:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20502:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "EmitStatement",
												"src": "20497:55:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2092,
															"name": "epoch_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "20578:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2093,
															"name": "rebasePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "20586:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2094,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "20601:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20601:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2091,
														"name": "LogRebase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "20567:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20567:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2097,
												"nodeType": "EmitStatement",
												"src": "20562:48:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20628:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2056,
												"id": 2099,
												"nodeType": "Return",
												"src": "20621:11:3"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "19775:179:3",
										"text": "@notice emits event with data about rebase\n@param previousCirculating_ uint\n@param profit_ uint\n@param epoch_ uint\n@return bool"
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeRebase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "previousCirculating_",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "19982:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19982:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "profit_",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "20009:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "epoch_",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "20023:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20023:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19980:56:3"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "20056:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20056:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20054:8:3"
									},
									"scope": 2470,
									"src": "19959:680:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										969
									],
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "20720:67:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2113,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "20762:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2109,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "20737:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2111,
															"indexExpression": {
																"id": 2110,
																"name": "who",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "20751:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20737:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "20737:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20737:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2115,
												"nodeType": "Return",
												"src": "20730:50:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20691:8:3"
									},
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "20665:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20665:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20663:15:3"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "20710:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20710:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20708:11:3"
									},
									"scope": 2470,
									"src": "20645:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "20861:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2126,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "20890:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "20878:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "20878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20878:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2128,
												"nodeType": "Return",
												"src": "20871:37:3"
											}
										]
									},
									"functionSelector": "1bd39674",
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gonsForBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "20818:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20818:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20816:15:3"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "20854:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20854:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20852:8:3"
									},
									"scope": 2470,
									"src": "20793:122:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "20987:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2139,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "21014:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2137,
															"name": "gons",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "21004:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "21004:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21004:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2136,
												"id": 2141,
												"nodeType": "Return",
												"src": "20997:35:3"
											}
										]
									},
									"functionSelector": "7965d56d",
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceForGons",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "gons",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "20946:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20946:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20944:13:3"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "20980:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20980:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20978:8:3"
									},
									"scope": 2470,
									"src": "20921:118:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "21145:72:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2151,
																	"name": "stakingContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "21191:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2150,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2117
																],
																"referencedDeclaration": 2117,
																"src": "21180:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21180:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2148,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "21162:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 564,
														"src": "21162:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21162:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2147,
												"id": 2154,
												"nodeType": "Return",
												"src": "21155:55:3"
											}
										]
									},
									"functionSelector": "9358928b",
									"id": 2156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21113:2:3"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "21138:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "21138:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21136:8:3"
									},
									"scope": 2470,
									"src": "21087:130:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "21269:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2162,
															"name": "INDEX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "21302:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2161,
														"name": "balanceForGons",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "21286:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21286:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2160,
												"id": 2164,
												"nodeType": "Return",
												"src": "21279:30:3"
											}
										]
									},
									"functionSelector": "2986c0e5",
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "index",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21237:2:3"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "21262:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "21262:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21260:8:3"
									},
									"scope": 2470,
									"src": "21223:93:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										990
									],
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "21400:280:3",
										"statements": [
											{
												"assignments": [
													2177
												],
												"declarations": [
													{
														"constant": false,
														"id": 2177,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 2216,
														"src": "21410:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2176,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21410:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2182,
												"initialValue": {
													"arguments": [
														{
															"id": 2180,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "21440:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2178,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "21429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "21429:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21429:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21410:48:3"
											},
											{
												"expression": {
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2183,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "21468:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2186,
														"indexExpression": {
															"expression": {
																"id": 2184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "21482:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "21482:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21468:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2192,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "21529:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2187,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "21497:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2190,
																"indexExpression": {
																	"expression": {
																		"id": 2188,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "21511:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "21511:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21497:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 564,
															"src": "21497:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21497:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21468:71:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2195,
												"nodeType": "ExpressionStatement",
												"src": "21468:71:3"
											},
											{
												"expression": {
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2196,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "21549:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2198,
														"indexExpression": {
															"id": 2197,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "21563:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21549:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2203,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "21594:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2199,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "21570:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2201,
																"indexExpression": {
																	"id": 2200,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "21584:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21570:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "21570:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21570:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21549:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2206,
												"nodeType": "ExpressionStatement",
												"src": "21549:55:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "21629:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "21629:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2210,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "21641:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2211,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "21645:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2207,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "21619:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21619:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2213,
												"nodeType": "EmitStatement",
												"src": "21614:38:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21669:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2175,
												"id": 2215,
												"nodeType": "Return",
												"src": "21662:11:3"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21376:8:3"
									},
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "21341:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21341:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "21353:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21353:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21339:29:3"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "21394:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21394:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21393:6:3"
									},
									"scope": 2470,
									"src": "21322:358:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1008
									],
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "21781:58:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2227,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "21798:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2229,
														"indexExpression": {
															"id": 2228,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "21813:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21798:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2231,
													"indexExpression": {
														"id": 2230,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "21823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21798:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2226,
												"id": 2232,
												"nodeType": "Return",
												"src": "21791:41:3"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21752:8:3"
									},
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "21706:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21706:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "21722:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21722:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21704:35:3"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "21771:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21771:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21769:11:3"
									},
									"scope": 2470,
									"src": "21686:153:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1067
									],
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "21943:429:3",
										"statements": [
											{
												"expression": {
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2246,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "21952:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2250,
															"indexExpression": {
																"id": 2247,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "21967:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21952:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2251,
														"indexExpression": {
															"expression": {
																"id": 2248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "21975:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "21975:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21952:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2259,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2240,
																"src": "22031:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2252,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "21990:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2254,
																	"indexExpression": {
																		"id": 2253,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "22005:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21990:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2257,
																"indexExpression": {
																	"expression": {
																		"id": 2255,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "22013:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "22013:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21990:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 564,
															"src": "21990:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21990:48:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21952:86:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "21952:86:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2264,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "22062:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "22068:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22068:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2267,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "22081:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2269,
																"indexExpression": {
																	"id": 2268,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2236,
																	"src": "22096:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22081:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2272,
															"indexExpression": {
																"expression": {
																	"id": 2270,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "22104:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "22104:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22081:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2263,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "22052:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22052:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "EmitStatement",
												"src": "22047:71:3"
											},
											{
												"assignments": [
													2276
												],
												"declarations": [
													{
														"constant": false,
														"id": 2276,
														"mutability": "mutable",
														"name": "gonValue",
														"nodeType": "VariableDeclaration",
														"scope": 2311,
														"src": "22129:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22129:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2280,
												"initialValue": {
													"arguments": [
														{
															"id": 2278,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "22164:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2277,
														"name": "gonsForBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "22148:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22148:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22129:42:3"
											},
											{
												"expression": {
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2281,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "22181:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2283,
														"indexExpression": {
															"id": 2282,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "22195:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22181:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2288,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "22228:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2284,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "22204:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2286,
																"indexExpression": {
																	"id": 2285,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2236,
																	"src": "22217:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22204:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 564,
															"src": "22204:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22204:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22181:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2291,
												"nodeType": "ExpressionStatement",
												"src": "22181:57:3"
											},
											{
												"expression": {
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2292,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "22248:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2294,
														"indexExpression": {
															"id": 2293,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "22262:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22248:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2299,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "22291:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2295,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "22269:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2297,
																"indexExpression": {
																	"id": 2296,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2238,
																	"src": "22282:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22269:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "22269:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22269:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22248:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2302,
												"nodeType": "ExpressionStatement",
												"src": "22248:53:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "22326:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "22332:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2306,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "22336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2303,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "22316:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22316:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2308,
												"nodeType": "EmitStatement",
												"src": "22311:32:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22361:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2245,
												"id": 2310,
												"nodeType": "Return",
												"src": "22354:11:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2242,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21917:8:3"
									},
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "21868:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21868:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "21882:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21882:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "21894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21894:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21866:43:3"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "21936:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21936:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21934:8:3"
									},
									"scope": 2470,
									"src": "21845:527:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1029
									],
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "22460:140:3",
										"statements": [
											{
												"expression": {
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2322,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "22471:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2326,
															"indexExpression": {
																"expression": {
																	"id": 2323,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "22486:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "22486:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22471:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2327,
														"indexExpression": {
															"id": 2325,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "22500:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22471:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2328,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "22512:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22471:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "22471:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2332,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "22543:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22543:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2334,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2314,
															"src": "22555:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2335,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "22564:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2331,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "22533:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22533:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "EmitStatement",
												"src": "22528:43:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22589:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2321,
												"id": 2339,
												"nodeType": "Return",
												"src": "22582:11:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22436:8:3"
									},
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22396:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22396:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22413:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22413:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22394:34:3"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22454:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22454:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22453:6:3"
									},
									"scope": 2470,
									"src": "22378:222:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1346
									],
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "22735:102:3",
										"statements": [
											{
												"expression": {
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2351,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "22745:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2354,
															"indexExpression": {
																"id": 2352,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "22759:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22745:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2355,
														"indexExpression": {
															"id": 2353,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "22766:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22745:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2356,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "22777:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22745:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2358,
												"nodeType": "ExpressionStatement",
												"src": "22745:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2360,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "22807:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2361,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "22814:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2362,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "22823:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2359,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "22797:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22797:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2364,
												"nodeType": "EmitStatement",
												"src": "22792:38:3"
											}
										]
									},
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2349,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22718:8:3"
									},
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "22661:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "22676:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22676:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "22693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22659:49:3"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22735:0:3"
									},
									"scope": 2470,
									"src": "22642:195:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "22940:221:3",
										"statements": [
											{
												"expression": {
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2376,
																"name": "_allowedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "22950:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2380,
															"indexExpression": {
																"expression": {
																	"id": 2377,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "22965:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "22965:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22950:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2381,
														"indexExpression": {
															"id": 2379,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "22979:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22950:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2389,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "23035:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2382,
																		"name": "_allowedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "22991:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2385,
																	"indexExpression": {
																		"expression": {
																			"id": 2383,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "23006:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "23006:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22991:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2387,
																"indexExpression": {
																	"id": 2386,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "23020:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22991:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "22991:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22991:56:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22950:97:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2392,
												"nodeType": "ExpressionStatement",
												"src": "22950:97:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2394,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23072:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23072:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2396,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "23084:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2397,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "23093:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2400,
																"indexExpression": {
																	"expression": {
																		"id": 2398,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "23108:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23108:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23093:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2402,
															"indexExpression": {
																"id": 2401,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "23122:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23093:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2393,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "23062:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23062:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "EmitStatement",
												"src": "23057:76:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23150:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2375,
												"id": 2406,
												"nodeType": "Return",
												"src": "23143:11:3"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22916:8:3"
									},
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "22871:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22871:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "22888:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22888:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22869:39:3"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "22934:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22934:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22933:6:3"
									},
									"scope": 2470,
									"src": "22843:318:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1124
									],
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "23269:393:3",
										"statements": [
											{
												"assignments": [
													2419
												],
												"declarations": [
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 2468,
														"src": "23279:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23279:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2426,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2420,
															"name": "_allowedValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "23298:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2423,
														"indexExpression": {
															"expression": {
																"id": 2421,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23313:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23313:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "23298:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2425,
													"indexExpression": {
														"id": 2424,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2410,
														"src": "23327:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23298:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23279:57:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2427,
														"name": "subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "23350:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2428,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "23369:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23350:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2452,
													"nodeType": "Block",
													"src": "23452:97:3",
													"statements": [
														{
															"expression": {
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2440,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "23466:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2444,
																		"indexExpression": {
																			"expression": {
																				"id": 2441,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "23481:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "23481:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23466:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2445,
																	"indexExpression": {
																		"id": 2443,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2410,
																		"src": "23495:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23466:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2448,
																			"name": "subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "23521:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2446,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2419,
																			"src": "23507:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 564,
																		"src": "23507:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23507:31:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23466:72:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2451,
															"nodeType": "ExpressionStatement",
															"src": "23466:72:3"
														}
													]
												},
												"id": 2453,
												"nodeType": "IfStatement",
												"src": "23346:203:3",
												"trueBody": {
													"id": 2439,
													"nodeType": "Block",
													"src": "23379:67:3",
													"statements": [
														{
															"expression": {
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2430,
																			"name": "_allowedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "23393:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2434,
																		"indexExpression": {
																			"expression": {
																				"id": 2431,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "23408:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "23408:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23393:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2435,
																	"indexExpression": {
																		"id": 2433,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2410,
																		"src": "23422:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23393:38:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23434:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "23393:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2438,
															"nodeType": "ExpressionStatement",
															"src": "23393:42:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23573:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23573:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2457,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "23585:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2458,
																	"name": "_allowedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "23594:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 2461,
																"indexExpression": {
																	"expression": {
																		"id": 2459,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "23609:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23609:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23594:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2463,
															"indexExpression": {
																"id": 2462,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "23623:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23594:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2454,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "23563:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23563:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2465,
												"nodeType": "EmitStatement",
												"src": "23558:76:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23651:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2417,
												"id": 2467,
												"nodeType": "Return",
												"src": "23644:11:3"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2414,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23245:8:3"
									},
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "23195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "23212:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23212:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23193:44:3"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "23263:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23263:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23262:6:3"
									},
									"scope": 2470,
									"src": "23167:495:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2471,
							"src": "16386:7278:3"
						}
					],
					"src": "113:23551:3"
				},
				"id": 3
			}
		}
	}
}